/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { createClient } from './soap/soap';
import { HttpClient } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common/http';
export { security } from './soap/security/security';
var NgxSoapService = /** @class */ (function () {
    function NgxSoapService(http) {
        this.http = http;
    }
    /**
     * @param {?} wsdlUrl
     * @param {?=} options
     * @param {?=} endpoint
     * @return {?}
     */
    NgxSoapService.prototype.createClient = /**
     * @param {?} wsdlUrl
     * @param {?=} options
     * @param {?=} endpoint
     * @return {?}
     */
    function (wsdlUrl, options, endpoint) {
        if (options === void 0) { options = {}; }
        options.httpClient = this.http;
        return createClient(wsdlUrl, options, endpoint);
    };
    /** @nocollapse */
    NgxSoapService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    /** @nocollapse */ NgxSoapService.ngInjectableDef = i0.defineInjectable({ factory: function NgxSoapService_Factory() { return new NgxSoapService(i0.inject(i1.HttpClient)); }, token: NgxSoapService, providedIn: "root" });
NgxSoapService.ɵfac = function NgxSoapService_Factory(t) { return new (t || NgxSoapService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };
NgxSoapService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxSoapService, factory: function (t) { return NgxSoapService.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxSoapService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();
    return NgxSoapService;
}());
export { NgxSoapService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgxSoapService.prototype.http;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNvYXAuc2VydmljZS5qcyIsInNvdXJjZXMiOlsibmc6L25neC1zb2FwL2xpYi9uZ3gtc29hcC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xEO0FBQXFDOzs7QUFjckMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBRW5EO0FBR1ksSUFFVix3QkFBb0IsSUFBZ0I7QUFBSSxRQUFwQixTQUFJLEdBQUosSUFBSSxDQUFZO0FBQUMsSUFBRyxDQUFDO0FBQzNDO0FBQ087QUFBMEI7QUFBMkI7QUFBNEI7QUFDdEU7QUFBUSxJQUR4QixxQ0FBWTtBQUFPO0FBQTBCO0FBQTJCO0FBQzdEO0FBQW1CO0FBQzVCLElBRkYsVUFBYSxPQUFlLEVBQUUsT0FBaUIsRUFBRSxRQUFpQjtBQUFJLFFBQXhDLHdCQUFBLEVBQUEsWUFBaUI7QUFBSSxRQUNqRCxPQUFPLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7QUFDbkMsUUFBSSxPQUFPLFlBQVksQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFFO0FBQ3JELElBQUUsQ0FBQyxDQVBNO0FBQUM7MkJBSFQsVUFBVSxTQUFDLDlDQUtWO1NBSkEsVUFBVSxFQUFFLE1BQU0sM0JBTUosZ0JBeEJQLFVBQVU7QUFBRztNQW1CckIsTkFuQitCOzs7Ozs7OzsyRUFhMUI7QUFBQyx5QkFmUDtBQUFFLENBOEJELEFBWEQsSUFXQztBQUNELFNBVGEsY0FBYztBQUUzQjtBQUFhO0FBQVE7QUFBaUI7QUFFN0I7QUFBUSxJQUZILDhCQUF3QjtBQUFDO0FBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICcuL3NvYXAvc29hcCc7XG5pbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgQ2xpZW50IH0gZnJvbSAnLi9zb2FwL2ludGVyZmFjZXMnO1xuXG5leHBvcnQge1xuICBDbGllbnQsXG4gIFdTREwsXG4gIElTb2FwTWV0aG9kLFxuICBJU29hcE1ldGhvZFJlc3BvbnNlLFxuICBCYXNpY0F1dGhTZWN1cml0eSxcbiAgQmVhcmVyU2VjdXJpdHksXG4gIC8vIFdTU2VjdXJpdHlDZXJ0LFxuICBXU1NlY3VyaXR5LFxuICBOVExNU2VjdXJpdHlcbn0gZnJvbSAnLi9zb2FwL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgeyBzZWN1cml0eSB9IGZyb20gJy4vc29hcC9zZWN1cml0eS9zZWN1cml0eSdcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmd4U29hcFNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkgeyB9XG5cbiAgY3JlYXRlQ2xpZW50KHdzZGxVcmw6IHN0cmluZywgb3B0aW9uczogYW55ID0ge30sIGVuZHBvaW50Pzogc3RyaW5nKTogUHJvbWlzZTxDbGllbnQ+IHtcbiAgICBvcHRpb25zLmh0dHBDbGllbnQgPSB0aGlzLmh0dHA7XG4gICAgcmV0dXJuIGNyZWF0ZUNsaWVudCh3c2RsVXJsLCBvcHRpb25zLCBlbmRwb2ludCkgO1xuICB9XG59XG4iXX0=