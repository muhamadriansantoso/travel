{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ngui/auto-complete/lib/auto-complete.service.ts","ng://@ngui/auto-complete/lib/auto-complete.component.ts","ng://@ngui/auto-complete/lib/auto-complete.directive.ts","ng://@ngui/auto-complete/lib/auto-complete.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","NguiAutoComplete","http","this","prototype","filter","list","keyword","matchFormatted","accentInsensitive","_this","el","objStr","getFormattedListItem","toLowerCase","JSON","stringify","normalize","replace","indexOf","data","formatted","formatter","listFormatter","apply","matches","match","forEach","getRemoteData","source","TypeError","Error","replacementWord","url","get","pipe","map","pathToData","split","prop","HttpClient","type","Optional","Injectable","providedIn","NguiAutoCompleteComponent","elementRef","autoComplete","timer","autocomplete","minChars","acceptUserInput","loadingText","loadingTemplate","showInputTag","showDropdownOnInit","tabToSelect","autoSelectFirstItem","selectOnBlur","reFocusAfterSelect","headerItemTemplate","ignoreAccents","valueSelected","EventEmitter","customSelected","textEntered","dropdownVisible","isLoading","filteredList","minCharsEntered","itemIndex","delay","callback","ms","clearTimeout","setTimeout","selectOnEnter","reloadListInDelay","evt","delayMs","isSrcArr","value","reloadList","inputElKeyHandler","totalNumItem","keyCode","selectOne","undefined","scrollToView","sum","preventDefault","nativeElement","ngOnInit","autoCompleteInput","focus","showDropdownList","Array","isArray","event","hideDropdownList","findItemFromSelectValue","selectText","matchingItems","item","maxNumList","slice","subscribe","resp","error","emit","enterText","blurHandler","index","ul","autoCompleteContainer","querySelector","liHeight","offsetHeight","scrollTop","viewport","scrollOffset","trackByIndex","ElementRef","Input","Output","ViewChild","Component","selector","template","encapsulation","ViewEncapsulation","None","NguiAutoCompleteDirective","resolver","viewContainerRef","parentForm","openOnFocus","closeOnFocusOut","zIndex","isRtl","ngModelChange","valueChanged","showAutoCompleteDropdown","dropdownJustHidden","hideAutoCompleteDropdown","scheduledBlurHandler","factory","resolveComponentFactory","componentRef","createComponent","component","instance","inputEl","placeholder","autoCompletePlaceholder","parseInt","blankOptionText","noMatchFoundText","selectNewValue","enterNewText","selectCustomValue","acDropdownEl","location","style","display","parentElement","insertBefore","nextSibling","revertValue","ngModel","styleAutoCompleteDropdown","currentItem","hasRevertValue","destroy","getBoundingClientRect","thisInputElBCR","closeToBottom","bottom","window","innerHeight","directionOfStyle","width","position","height","top","setToStringFunction","renderValue","val","selectValueOf","formControlName","extFormControl","formControl","patchValue","text","keydownEventHandler","inputEventHandler","element","documentClickListener","e","document","addEventListener","wrapperEl","createElement","className","appendChild","FormGroupName","control","controls","ngAfterViewInit","tagName","setAttribute","ngOnDestroy","unsubscribe","removeEventListener","ngOnChanges","changes","currentValue","displayVal_1","valueFormatter","formatted_1","displayPropertyName","toString","ComponentFactoryResolver","ViewContainerRef","ControlContainer","Host","SkipSelf","Directive","NguiAutoCompleteModule","NgModule","declarations","imports","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NguiAutoComplete {\r\n\r\n  public source: string;\r\n  public pathToData: string;\r\n  public listFormatter: (arg: any) => string;\r\n\r\n  constructor(@Optional() private http: HttpClient) {\r\n    // ...\r\n  }\r\n\r\n  public filter(list: any[], keyword: string, matchFormatted: boolean, accentInsensitive: boolean) {\r\n    return accentInsensitive\r\n      ? list.filter(\r\n        (el) => {\r\n          const objStr = matchFormatted ? this.getFormattedListItem(el).toLowerCase() : JSON.stringify(el).toLowerCase();\r\n          keyword = keyword.toLowerCase();\r\n\r\n          return objStr.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\r\n            .indexOf(keyword.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')) !== -1;\r\n        })\r\n      : list.filter(\r\n        (el) => {\r\n          const objStr = matchFormatted ? this.getFormattedListItem(el).toLowerCase() : JSON.stringify(el).toLowerCase();\r\n          keyword = keyword.toLowerCase();\r\n\r\n          return objStr.indexOf(keyword) !== -1;\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFormattedListItem(data: any) {\r\n    let formatted;\r\n    const formatter = this.listFormatter || '(id) value';\r\n    if (typeof formatter === 'function') {\r\n      formatted = formatter.apply(this, [data]);\r\n    } else if (typeof data !== 'object') {\r\n      formatted = data;\r\n    } else if (typeof formatter === 'string') {\r\n      formatted = formatter;\r\n      const matches = formatter.match(/[a-zA-Z0-9_\\$]+/g);\r\n      if (matches && typeof data !== 'string') {\r\n        matches.forEach((key) => {\r\n          formatted = formatted.replace(key, data[key]);\r\n        });\r\n      }\r\n    }\r\n    return formatted;\r\n  }\r\n\r\n  /**\r\n   * return remote data from the given source and options, and data path\r\n   */\r\n  public getRemoteData(keyword: string): Observable<any[]> {\r\n    if (typeof this.source !== 'string') {\r\n      throw new TypeError('Invalid type of source, must be a string. e.g. http://www.google.com?q=:my_keyword');\r\n    } else if (!this.http) {\r\n      throw new Error('Http is required.');\r\n    }\r\n\r\n    const matches = this.source.match(/:[a-zA-Z_]+/);\r\n    if (matches === null) {\r\n      throw new Error('Replacement word is missing.');\r\n    }\r\n\r\n    const replacementWord = matches[0];\r\n    const url = this.source.replace(replacementWord, keyword);\r\n\r\n    return this.http.get<any[]>(url)\r\n      .pipe(\r\n        map((list) => {\r\n\r\n          if (this.pathToData) {\r\n            const paths = this.pathToData.split('.');\r\n            paths.forEach((prop) => list = list[prop]);\r\n          }\r\n\r\n          return list;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { NguiAutoComplete } from './auto-complete.service';\r\n\r\n@Component({\r\n  selector: 'ngui-auto-complete',\r\n  template: `\r\n    <div #autoCompleteContainer class=\"ngui-auto-complete\">\r\n      <!-- keyword input -->\r\n      <input *ngIf=\"showInputTag\"\r\n             #autoCompleteInput class=\"keyword\"\r\n             [attr.autocomplete]=\"autocomplete ? 'null' : 'off'\"\r\n             placeholder=\"{{placeholder}}\"\r\n             (focus)=\"showDropdownList($event)\"\r\n             (blur)=\"blurHandler($event)\"\r\n             (keydown)=\"inputElKeyHandler($event)\"\r\n             (input)=\"reloadListInDelay($event)\"\r\n             [(ngModel)]=\"keyword\"/>\r\n\r\n      <!-- dropdown that user can select -->\r\n      <ul *ngIf=\"dropdownVisible\" [class.empty]=\"emptyList\">\r\n        <li *ngIf=\"isLoading && loadingTemplate\" class=\"loading\"\r\n            [innerHTML]=\"loadingTemplate\"></li>\r\n        <li *ngIf=\"isLoading && !loadingTemplate\" class=\"loading\">{{loadingText}}</li>\r\n        <li *ngIf=\"minCharsEntered && !isLoading && !filteredList.length\"\r\n            (mousedown)=\"selectOne('')\"\r\n            class=\"no-match-found\">{{noMatchFoundText || 'No Result Found'}}\r\n        </li>\r\n        <li *ngIf=\"headerItemTemplate && filteredList.length\" class=\"header-item\"\r\n            [innerHTML]=\"headerItemTemplate\"></li>\r\n        <li *ngIf=\"blankOptionText && filteredList.length\"\r\n            (mousedown)=\"selectOne('')\"\r\n            class=\"blank-item\">{{blankOptionText}}\r\n        </li>\r\n        <li class=\"item\"\r\n            *ngFor=\"let item of filteredList; let i=index; trackBy: trackByIndex\"\r\n            (mousedown)=\"selectOne(item)\"\r\n            [ngClass]=\"{selected: i === itemIndex}\"\r\n            [innerHtml]=\"autoComplete.getFormattedListItem(item)\">\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    @keyframes slideDown {\r\n      0% {\r\n        transform: translateY(-10px);\r\n      }\r\n      100% {\r\n        transform: translateY(0px);\r\n      }\r\n    }\r\n\r\n    .ngui-auto-complete {\r\n      background-color: transparent;\r\n    }\r\n\r\n    .ngui-auto-complete > input {\r\n      outline: none;\r\n      border: 0;\r\n      padding: 2px;\r\n      box-sizing: border-box;\r\n      background-clip: content-box;\r\n    }\r\n\r\n    .ngui-auto-complete > ul {\r\n      background-color: #fff;\r\n      margin: 0;\r\n      width: 100%;\r\n      overflow-y: auto;\r\n      list-style-type: none;\r\n      padding: 0;\r\n      border: 1px solid #ccc;\r\n      box-sizing: border-box;\r\n      animation: slideDown 0.1s;\r\n    }\r\n\r\n    .ngui-auto-complete > ul.empty {\r\n      display: none;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li {\r\n      padding: 2px 5px;\r\n      border-bottom: 1px solid #eee;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li.selected {\r\n      background-color: #ccc;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li:not(.header-item):hover {\r\n      background-color: #ccc;\r\n    }`\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NguiAutoCompleteComponent implements OnInit {\r\n\r\n  /**\r\n   * public input properties\r\n   */\r\n  @Input('autocomplete') public autocomplete = false;\r\n  @Input('list-formatter') public listFormatter: (arg: any) => string;\r\n  @Input('source') public source: any;\r\n  @Input('path-to-data') public pathToData: string;\r\n  @Input('min-chars') public minChars = 0;\r\n  @Input('placeholder') public placeholder: string;\r\n  @Input('blank-option-text') public blankOptionText: string;\r\n  @Input('no-match-found-text') public noMatchFoundText: string;\r\n  @Input('accept-user-input') public acceptUserInput = true;\r\n  @Input('loading-text') public loadingText = 'Loading';\r\n  @Input('loading-template') public loadingTemplate = null;\r\n  @Input('max-num-list') public maxNumList: number;\r\n  @Input('show-input-tag') public showInputTag = true;\r\n  @Input('show-dropdown-on-init') public showDropdownOnInit = false;\r\n  @Input('tab-to-select') public tabToSelect = true;\r\n  @Input('match-formatted') public matchFormatted = false;\r\n  @Input('auto-select-first-item') public autoSelectFirstItem = false;\r\n  @Input('select-on-blur') public selectOnBlur = false;\r\n  @Input('re-focus-after-select') public reFocusAfterSelect = true;\r\n  @Input('header-item-template') public headerItemTemplate = null;\r\n  @Input('ignore-accents') public ignoreAccents = true;\r\n\r\n  @Output() public valueSelected = new EventEmitter();\r\n  @Output() public customSelected = new EventEmitter();\r\n  @Output() public textEntered = new EventEmitter();\r\n\r\n  @ViewChild('autoCompleteInput') public autoCompleteInput: ElementRef;\r\n  @ViewChild('autoCompleteContainer') public autoCompleteContainer: ElementRef;\r\n\r\n  public dropdownVisible = false;\r\n  public isLoading = false;\r\n\r\n  public filteredList: any[] = [];\r\n  public minCharsEntered = false;\r\n  public itemIndex: number = null;\r\n  public keyword: string;\r\n\r\n  private el: HTMLElement;           // this component  element `<ngui-auto-complete>`\r\n  private timer = 0;\r\n\r\n  private delay = (() => {\r\n    let timer = null;\r\n    return (callback: any, ms: number) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(callback, ms);\r\n    };\r\n  })();\r\n  private selectOnEnter = false;\r\n\r\n  /**\r\n   * constructor\r\n   */\r\n  constructor(elementRef: ElementRef, public autoComplete: NguiAutoComplete) {\r\n    this.el = elementRef.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * user enters into input el, shows list to select, then select one\r\n   */\r\n  ngOnInit(): void {\r\n    this.autoComplete.source = this.source;\r\n    this.autoComplete.pathToData = this.pathToData;\r\n    this.autoComplete.listFormatter = this.listFormatter;\r\n    if (this.autoSelectFirstItem) {\r\n      this.itemIndex = 0;\r\n    }\r\n    setTimeout(() => {\r\n      if (this.autoCompleteInput && this.reFocusAfterSelect) {\r\n        this.autoCompleteInput.nativeElement.focus();\r\n      }\r\n      if (this.showDropdownOnInit) {\r\n        this.showDropdownList({target: {value: ''}});\r\n      }\r\n    });\r\n  }\r\n\r\n  public isSrcArr(): boolean {\r\n    return Array.isArray(this.source);\r\n  }\r\n\r\n  public reloadListInDelay = (evt: any): void => {\r\n    const delayMs = this.isSrcArr() ? 10 : 500;\r\n    const keyword = evt.target.value;\r\n\r\n    // executing after user stopped typing\r\n    this.delay(() => this.reloadList(keyword), delayMs);\r\n  }\r\n\r\n  public showDropdownList(event: any): void {\r\n    this.dropdownVisible = true;\r\n    this.reloadList(event.target.value);\r\n  }\r\n\r\n  public hideDropdownList(): void {\r\n    this.selectOnEnter = false;\r\n    this.dropdownVisible = false;\r\n  }\r\n\r\n  public findItemFromSelectValue(selectText: string): any {\r\n    const matchingItems = this.filteredList.filter((item) => ('' + item) === selectText);\r\n    return matchingItems.length ? matchingItems[0] : null;\r\n  }\r\n\r\n  public reloadList(keyword: string): void {\r\n\r\n    this.filteredList = [];\r\n    if (keyword.length < (this.minChars || 0)) {\r\n      this.minCharsEntered = false;\r\n      return;\r\n    } else {\r\n      this.minCharsEntered = true;\r\n    }\r\n\r\n    if (this.isSrcArr()) {    // local source\r\n      this.isLoading = false;\r\n      this.filteredList = this.autoComplete.filter(this.source, keyword, this.matchFormatted, this.ignoreAccents);\r\n      if (this.maxNumList) {\r\n        this.filteredList = this.filteredList.slice(0, this.maxNumList);\r\n      }\r\n\r\n    } else {                 // remote source\r\n      this.isLoading = true;\r\n\r\n      if (typeof this.source === 'function') {\r\n        // custom function that returns observable\r\n        this.source(keyword).subscribe(\r\n          (resp) => {\r\n\r\n            if (this.pathToData) {\r\n              const paths = this.pathToData.split('.');\r\n              paths.forEach((prop) => resp = resp[prop]);\r\n            }\r\n\r\n            this.filteredList = resp;\r\n            if (this.maxNumList) {\r\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\r\n            }\r\n          },\r\n          (error) => null,\r\n          () => this.isLoading = false // complete\r\n        );\r\n      } else {\r\n        // remote source\r\n\r\n        this.autoComplete.getRemoteData(keyword).subscribe((resp) => {\r\n            this.filteredList = resp ? resp : [];\r\n            if (this.maxNumList) {\r\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\r\n            }\r\n          },\r\n          (error) => null,\r\n          () => this.isLoading = false // complete\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectOne(data: any) {\r\n    if (!!data || data === '') {\r\n      this.valueSelected.emit(data);\r\n    } else {\r\n      this.customSelected.emit(this.keyword);\r\n    }\r\n  }\r\n\r\n  public enterText(data: any) {\r\n    this.textEntered.emit(data);\r\n  }\r\n\r\n  public blurHandler(evt: any) {\r\n    if (this.selectOnBlur) {\r\n      this.selectOne(this.filteredList[this.itemIndex]);\r\n    }\r\n\r\n    this.hideDropdownList();\r\n  }\r\n\r\n  public inputElKeyHandler = (evt: any) => {\r\n    const totalNumItem = this.filteredList.length;\r\n\r\n    if (!this.selectOnEnter && this.autoSelectFirstItem && (0 !== totalNumItem)) {\r\n      this.selectOnEnter = true;\r\n    }\r\n\r\n    switch (evt.keyCode) {\r\n      case 27: // ESC, hide auto complete\r\n        this.selectOnEnter = false;\r\n        this.selectOne(undefined);\r\n        break;\r\n\r\n      case 38: // UP, select the previous li el\r\n        if (0 === totalNumItem) {\r\n          return;\r\n        }\r\n        this.selectOnEnter = true;\r\n        this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\r\n        this.scrollToView(this.itemIndex);\r\n        break;\r\n\r\n      case 40: // DOWN, select the next li el or the first one\r\n        if (0 === totalNumItem) {\r\n          return;\r\n        }\r\n        this.selectOnEnter = true;\r\n        this.dropdownVisible = true;\r\n        let sum = this.itemIndex;\r\n        sum = (this.itemIndex === null) ? 0 : sum + 1;\r\n        this.itemIndex = (totalNumItem + sum) % totalNumItem;\r\n        this.scrollToView(this.itemIndex);\r\n        break;\r\n\r\n      case 13: // ENTER, choose it!!\r\n        if (this.selectOnEnter) {\r\n          this.selectOne(this.filteredList[this.itemIndex]);\r\n        }\r\n        evt.preventDefault();\r\n        break;\r\n\r\n      case 9: // TAB, choose if tab-to-select is enabled\r\n        if (this.tabToSelect) {\r\n          this.selectOne(this.filteredList[this.itemIndex]);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  public scrollToView(index) {\r\n    const container = this.autoCompleteContainer.nativeElement;\r\n    const ul = container.querySelector('ul');\r\n    const li = ul.querySelector('li');  // just sample the first li to get height\r\n    const liHeight = li.offsetHeight;\r\n    const scrollTop = ul.scrollTop;\r\n    const viewport = scrollTop + ul.offsetHeight;\r\n    const scrollOffset = liHeight * index;\r\n    if (scrollOffset < scrollTop || (scrollOffset + liHeight) > viewport) {\r\n      ul.scrollTop = scrollOffset;\r\n    }\r\n  }\r\n\r\n  public trackByIndex(index, item) {\r\n    return index;\r\n  }\r\n\r\n  get emptyList(): boolean {\r\n    return !(\r\n      this.isLoading ||\r\n      (this.minCharsEntered && !this.isLoading && !this.filteredList.length) ||\r\n      (this.filteredList.length)\r\n    );\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit, ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  EventEmitter, Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit, Optional,\r\n  Output, SimpleChanges, SkipSelf, ViewContainerRef\r\n} from '@angular/core';\r\nimport { AbstractControl, ControlContainer, FormControl, FormGroup, FormGroupName } from '@angular/forms';\r\nimport { NguiAutoCompleteComponent } from './auto-complete.component';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[auto-complete], [ngui-auto-complete]'\r\n})\r\nexport class NguiAutoCompleteDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n\r\n  @Input('autocomplete') public autocomplete = false;\r\n  @Input('auto-complete-placeholder') public autoCompletePlaceholder: string;\r\n  @Input('source') public source: any;\r\n  @Input('path-to-data') public pathToData: string;\r\n  @Input('min-chars') public minChars: number;\r\n  @Input('display-property-name') public displayPropertyName: string;\r\n  @Input('accept-user-input') public acceptUserInput = true;\r\n  @Input('max-num-list') public maxNumList: string;\r\n  @Input('select-value-of') public selectValueOf: string;\r\n  @Input('loading-template') public loadingTemplate = null;\r\n  @Input('list-formatter') public listFormatter;\r\n  @Input('loading-text') public loadingText = 'Loading';\r\n  @Input('blank-option-text') public blankOptionText: string;\r\n  @Input('no-match-found-text') public noMatchFoundText: string;\r\n  @Input('value-formatter') public valueFormatter: any;\r\n  @Input('tab-to-select') public tabToSelect = true;\r\n  @Input('select-on-blur') public selectOnBlur = false;\r\n  @Input('match-formatted') public matchFormatted = false;\r\n  @Input('auto-select-first-item') public autoSelectFirstItem = false;\r\n  @Input('open-on-focus') public openOnFocus = true;\r\n  @Input('close-on-focusout') public closeOnFocusOut = true;\r\n  @Input('re-focus-after-select') public reFocusAfterSelect = true;\r\n  @Input('header-item-template') public headerItemTemplate = null;\r\n  @Input('ignore-accents') public ignoreAccents = true;\r\n\r\n  @Input() public ngModel: string;\r\n  @Input('formControlName') public formControlName: string;\r\n  // if [formControl] is used on the anchor where our directive is sitting\r\n  // a form is not necessary to use a formControl we should also support this\r\n  @Input('formControl') public extFormControl: FormControl;\r\n  @Input('z-index') public zIndex = '1';\r\n  @Input('is-rtl') public isRtl = false;\r\n\r\n  @Output() public ngModelChange = new EventEmitter();\r\n  @Output() public valueChanged = new EventEmitter();\r\n  @Output() public customSelected = new EventEmitter();\r\n\r\n  private componentRef: ComponentRef<NguiAutoCompleteComponent>;\r\n  private wrapperEl: HTMLElement;\r\n  private el: HTMLElement;   // this element element, can be any\r\n  private acDropdownEl: HTMLElement; // auto complete element\r\n  private inputEl: HTMLInputElement;  // input element of this element\r\n  private formControl: AbstractControl;\r\n  private revertValue: any;\r\n  private dropdownJustHidden: boolean;\r\n  private scheduledBlurHandler: any;\r\n  private documentClickListener: (e: MouseEvent) => any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver,\r\n              public  viewContainerRef: ViewContainerRef,\r\n              @Optional() @Host() @SkipSelf() private parentForm: ControlContainer) {\r\n    this.el = this.viewContainerRef.element.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Blur event is handled only after a click event.\r\n    // This is to prevent handling of blur events resulting from interacting with a scrollbar\r\n    // introduced by content overflow (Internet explorer issue).\r\n    // See issue description here: http://stackoverflow.com/questions/2023779/clicking-on-a-divs-scroll-bar-fires-the-blur-event-in-ie\r\n    this.documentClickListener = (e) => {\r\n      if (this.scheduledBlurHandler) {\r\n        this.scheduledBlurHandler();\r\n        this.scheduledBlurHandler = null;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', this.documentClickListener);\r\n    // wrap this element with <div class=\"ngui-auto-complete\">\r\n    this.wrapperEl = document.createElement('div');\r\n    this.wrapperEl.className = 'ngui-auto-complete-wrapper';\r\n    this.wrapperEl.style.position = 'relative';\r\n    this.el.parentElement.insertBefore(this.wrapperEl, this.el.nextSibling);\r\n    this.wrapperEl.appendChild(this.el);\r\n\r\n    // Check if we were supplied with a [formControlName] and it is inside a [form]\r\n    // else check if we are supplied with a [FormControl] regardless if it is inside a [form] tag\r\n    if (this.parentForm && this.formControlName) {\r\n      if (this.parentForm['form']) {\r\n        this.formControl = (this.parentForm['form'] as FormGroup).get(this.formControlName);\r\n      } else if (this.parentForm instanceof FormGroupName) {\r\n        this.formControl = (this.parentForm as FormGroupName).control.controls[this.formControlName];\r\n      }\r\n    } else if (this.extFormControl) {\r\n      this.formControl = this.extFormControl;\r\n    }\r\n\r\n    // apply toString() method for the object\r\n    if (!!this.ngModel) {\r\n      this.selectNewValue(this.ngModel);\r\n    } else if (!!this.formControl && this.formControl.value) {\r\n      this.selectNewValue(this.formControl.value);\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // if this element is not an input tag, move dropdown after input tag\r\n    // so that it displays correctly\r\n    this.inputEl = this.el.tagName === 'INPUT' ? this.el as HTMLInputElement : this.el.querySelector('input');\r\n\r\n    if (this.openOnFocus) {\r\n      this.inputEl.addEventListener('focus', (e) => this.showAutoCompleteDropdown(e));\r\n    }\r\n\r\n    if (this.closeOnFocusOut) {\r\n      this.inputEl.addEventListener('focusout', (e) => this.hideAutoCompleteDropdown(e));\r\n    }\r\n\r\n    if (!this.autocomplete) {\r\n      this.inputEl.setAttribute('autocomplete', 'off');\r\n    }\r\n    this.inputEl.addEventListener('blur', (e) => {\r\n      this.scheduledBlurHandler = () => {\r\n        return this.blurHandler(e);\r\n      };\r\n    });\r\n    this.inputEl.addEventListener('keydown', (e) => this.keydownEventHandler(e));\r\n    this.inputEl.addEventListener('input', (e) => this.inputEventHandler(e));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.componentRef) {\r\n      this.componentRef.instance.valueSelected.unsubscribe();\r\n      this.componentRef.instance.textEntered.unsubscribe();\r\n    }\r\n    if (this.documentClickListener) {\r\n      document.removeEventListener('click', this.documentClickListener);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['ngModel']) {\r\n      this.ngModel = this.setToStringFunction(changes['ngModel'].currentValue);\r\n      this.renderValue(this.ngModel);\r\n    }\r\n  }\r\n\r\n  // show auto-complete list below the current element\r\n  public showAutoCompleteDropdown = (event?: any): void => {\r\n    if (this.dropdownJustHidden) {\r\n      return;\r\n    }\r\n    this.hideAutoCompleteDropdown();\r\n    this.scheduledBlurHandler = null;\r\n\r\n    const factory = this.resolver.resolveComponentFactory(NguiAutoCompleteComponent);\r\n\r\n    this.componentRef = this.viewContainerRef.createComponent(factory);\r\n\r\n    const component = this.componentRef.instance;\r\n    component.keyword = this.inputEl.value;\r\n    component.showInputTag = false; // Do NOT display autocomplete input tag separately\r\n\r\n    component.pathToData = this.pathToData;\r\n    component.minChars = this.minChars;\r\n    component.source = this.source;\r\n    component.placeholder = this.autoCompletePlaceholder;\r\n    component.acceptUserInput = this.acceptUserInput;\r\n    component.maxNumList = parseInt(this.maxNumList, 10);\r\n\r\n    component.loadingText = this.loadingText;\r\n    component.loadingTemplate = this.loadingTemplate;\r\n    component.listFormatter = this.listFormatter;\r\n    component.blankOptionText = this.blankOptionText;\r\n    component.noMatchFoundText = this.noMatchFoundText;\r\n    component.tabToSelect = this.tabToSelect;\r\n    component.selectOnBlur = this.selectOnBlur;\r\n    component.matchFormatted = this.matchFormatted;\r\n    component.autoSelectFirstItem = this.autoSelectFirstItem;\r\n    component.headerItemTemplate = this.headerItemTemplate;\r\n    component.ignoreAccents = this.ignoreAccents;\r\n\r\n    component.valueSelected.subscribe(this.selectNewValue);\r\n    component.textEntered.subscribe(this.enterNewText);\r\n    component.customSelected.subscribe(this.selectCustomValue);\r\n\r\n    this.acDropdownEl = this.componentRef.location.nativeElement;\r\n    this.acDropdownEl.style.display = 'none';\r\n\r\n    // if this element is not an input tag, move dropdown after input tag\r\n    // so that it displays correctly\r\n\r\n    // TODO: confirm with owners\r\n    // with some reason, viewContainerRef.createComponent is creating element\r\n    // to parent div which is created by us on ngOnInit, please try this with demo\r\n\r\n    // if (this.el.tagName !== 'INPUT' && this.acDropdownEl) {\r\n    this.inputEl.parentElement.insertBefore(this.acDropdownEl, this.inputEl.nextSibling);\r\n    // }\r\n    this.revertValue = typeof this.ngModel !== 'undefined' ? this.ngModel : this.inputEl.value;\r\n\r\n    setTimeout(() => {\r\n      component.reloadList(this.inputEl.value);\r\n      this.styleAutoCompleteDropdown();\r\n      component.dropdownVisible = true;\r\n    });\r\n  }\r\n\r\n  public blurHandler(event: any) {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n\r\n      if (this.selectOnBlur) {\r\n        component.selectOne(component.filteredList[component.itemIndex]);\r\n      }\r\n\r\n      if (this.closeOnFocusOut) {\r\n        this.hideAutoCompleteDropdown(event);\r\n      }\r\n    }\r\n  }\r\n\r\n  public hideAutoCompleteDropdown = (event?: any): void => {\r\n    if (this.componentRef) {\r\n      let currentItem: any;\r\n      const hasRevertValue = (typeof this.revertValue !== 'undefined');\r\n      if (this.inputEl && hasRevertValue && this.acceptUserInput === false) {\r\n        currentItem = this.componentRef.instance.findItemFromSelectValue(this.inputEl.value);\r\n      }\r\n      this.componentRef.destroy();\r\n      this.componentRef = undefined;\r\n\r\n      if (this.inputEl && hasRevertValue && this.acceptUserInput === false && currentItem === null) {\r\n        this.selectNewValue(this.revertValue);\r\n      } else if (this.inputEl && this.acceptUserInput === true && typeof currentItem === 'undefined' && event && event.target.value) {\r\n        this.enterNewText(event.target.value);\r\n      }\r\n    }\r\n    this.dropdownJustHidden = true;\r\n    setTimeout(() => this.dropdownJustHidden = false, 100);\r\n  }\r\n\r\n  public styleAutoCompleteDropdown = () => {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n\r\n      /* setting width/height auto complete */\r\n      const thisElBCR = this.el.getBoundingClientRect();\r\n      const thisInputElBCR = this.inputEl.getBoundingClientRect();\r\n      const closeToBottom = thisInputElBCR.bottom + 100 > window.innerHeight;\r\n      const directionOfStyle = this.isRtl ? 'right' : 'left';\r\n\r\n      this.acDropdownEl.style.width = thisInputElBCR.width + 'px';\r\n      this.acDropdownEl.style.position = 'absolute';\r\n      this.acDropdownEl.style.zIndex = this.zIndex;\r\n      this.acDropdownEl.style[directionOfStyle] = '0';\r\n      this.acDropdownEl.style.display = 'inline-block';\r\n\r\n      if (closeToBottom) {\r\n        this.acDropdownEl.style.bottom = `${thisInputElBCR.height}px`;\r\n      } else {\r\n        this.acDropdownEl.style.top = `${thisInputElBCR.height}px`;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setToStringFunction(item: any): any {\r\n    if (item && typeof item === 'object') {\r\n      let displayVal;\r\n\r\n      if (typeof this.valueFormatter === 'string') {\r\n        const matches = this.valueFormatter.match(/[a-zA-Z0-9_\\$]+/g);\r\n        let formatted = this.valueFormatter;\r\n        if (matches && typeof item !== 'string') {\r\n          matches.forEach((key) => {\r\n            formatted = formatted.replace(key, item[key]);\r\n          });\r\n        }\r\n        displayVal = formatted;\r\n      } else if (typeof this.valueFormatter === 'function') {\r\n        displayVal = this.valueFormatter(item);\r\n      } else if (this.displayPropertyName) {\r\n        displayVal = item[this.displayPropertyName];\r\n      } else if (typeof this.listFormatter === 'string' && this.listFormatter.match(/^\\w+$/)) {\r\n        displayVal = item[this.listFormatter];\r\n      } else {\r\n        displayVal = item.value;\r\n      }\r\n      item.toString = () => displayVal;\r\n    }\r\n    return item;\r\n  }\r\n\r\n  public selectNewValue = (item: any) => {\r\n    // make displayable value\r\n    if (item && typeof item === 'object') {\r\n      item = this.setToStringFunction(item);\r\n    }\r\n\r\n    this.renderValue(item);\r\n\r\n    // make return value\r\n    let val = item;\r\n    if (this.selectValueOf && item[this.selectValueOf]) {\r\n      val = item[this.selectValueOf];\r\n    }\r\n    if ((this.parentForm && this.formControlName) || this.extFormControl) {\r\n      if (!!val) {\r\n        this.formControl.patchValue(val);\r\n      }\r\n    }\r\n    if (val !== this.ngModel) {\r\n      this.ngModelChange.emit(val);\r\n    }\r\n    this.valueChanged.emit(val);\r\n    this.hideAutoCompleteDropdown();\r\n    setTimeout(() => {\r\n      if (this.reFocusAfterSelect) {\r\n        this.inputEl.focus();\r\n      }\r\n\r\n      return this.inputEl;\r\n    });\r\n  }\r\n\r\n  public selectCustomValue = (text: string) => {\r\n    this.customSelected.emit(text);\r\n    this.hideAutoCompleteDropdown();\r\n    setTimeout(() => {\r\n      if (this.reFocusAfterSelect) {\r\n        this.inputEl.focus();\r\n      }\r\n\r\n      return this.inputEl;\r\n    });\r\n  }\r\n\r\n  public enterNewText = (value: any) => {\r\n    this.renderValue(value);\r\n    this.ngModelChange.emit(value);\r\n    this.valueChanged.emit(value);\r\n    this.hideAutoCompleteDropdown();\r\n  }\r\n\r\n  private keydownEventHandler = (evt: any) => {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n      component.inputElKeyHandler(evt);\r\n    }\r\n  }\r\n\r\n  private inputEventHandler = (evt: any) => {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n      component.dropdownVisible = true;\r\n      component.keyword = evt.target.value;\r\n      component.reloadListInDelay(evt);\r\n    } else {\r\n      this.showAutoCompleteDropdown();\r\n    }\r\n  }\r\n\r\n  private renderValue(item: any) {\r\n    if (!!this.inputEl) {\r\n      this.inputEl.value = '' + item;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NguiAutoCompleteComponent } from './auto-complete.component';\r\nimport { NguiAutoCompleteDirective } from './auto-complete.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NguiAutoCompleteComponent,\r\n    NguiAutoCompleteDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    NguiAutoCompleteComponent,\r\n    NguiAutoCompleteDirective\r\n  ]\r\n})\r\nexport class NguiAutoCompleteModule { }\r\n"]}