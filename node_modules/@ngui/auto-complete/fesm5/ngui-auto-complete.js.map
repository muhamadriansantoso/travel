{"version":3,"file":"ngui-auto-complete.js","sources":["ng://@ngui/auto-complete/lib/auto-complete.service.ts","ng://@ngui/auto-complete/lib/auto-complete.component.ts","ng://@ngui/auto-complete/lib/auto-complete.directive.ts","ng://@ngui/auto-complete/lib/auto-complete.module.ts","ng://@ngui/auto-complete/public-api.ts","ng://@ngui/auto-complete/ngui-auto-complete.ts"],"sourcesContent":["import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NguiAutoComplete {\r\n\r\n  public source: string;\r\n  public pathToData: string;\r\n  public listFormatter: (arg: any) => string;\r\n\r\n  constructor(@Optional() private http: HttpClient) {\r\n    // ...\r\n  }\r\n\r\n  public filter(list: any[], keyword: string, matchFormatted: boolean, accentInsensitive: boolean) {\r\n    return accentInsensitive\r\n      ? list.filter(\r\n        (el) => {\r\n          const objStr = matchFormatted ? this.getFormattedListItem(el).toLowerCase() : JSON.stringify(el).toLowerCase();\r\n          keyword = keyword.toLowerCase();\r\n\r\n          return objStr.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\r\n            .indexOf(keyword.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')) !== -1;\r\n        })\r\n      : list.filter(\r\n        (el) => {\r\n          const objStr = matchFormatted ? this.getFormattedListItem(el).toLowerCase() : JSON.stringify(el).toLowerCase();\r\n          keyword = keyword.toLowerCase();\r\n\r\n          return objStr.indexOf(keyword) !== -1;\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFormattedListItem(data: any) {\r\n    let formatted;\r\n    const formatter = this.listFormatter || '(id) value';\r\n    if (typeof formatter === 'function') {\r\n      formatted = formatter.apply(this, [data]);\r\n    } else if (typeof data !== 'object') {\r\n      formatted = data;\r\n    } else if (typeof formatter === 'string') {\r\n      formatted = formatter;\r\n      const matches = formatter.match(/[a-zA-Z0-9_\\$]+/g);\r\n      if (matches && typeof data !== 'string') {\r\n        matches.forEach((key) => {\r\n          formatted = formatted.replace(key, data[key]);\r\n        });\r\n      }\r\n    }\r\n    return formatted;\r\n  }\r\n\r\n  /**\r\n   * return remote data from the given source and options, and data path\r\n   */\r\n  public getRemoteData(keyword: string): Observable<any[]> {\r\n    if (typeof this.source !== 'string') {\r\n      throw new TypeError('Invalid type of source, must be a string. e.g. http://www.google.com?q=:my_keyword');\r\n    } else if (!this.http) {\r\n      throw new Error('Http is required.');\r\n    }\r\n\r\n    const matches = this.source.match(/:[a-zA-Z_]+/);\r\n    if (matches === null) {\r\n      throw new Error('Replacement word is missing.');\r\n    }\r\n\r\n    const replacementWord = matches[0];\r\n    const url = this.source.replace(replacementWord, keyword);\r\n\r\n    return this.http.get<any[]>(url)\r\n      .pipe(\r\n        map((list) => {\r\n\r\n          if (this.pathToData) {\r\n            const paths = this.pathToData.split('.');\r\n            paths.forEach((prop) => list = list[prop]);\r\n          }\r\n\r\n          return list;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { NguiAutoComplete } from './auto-complete.service';\r\n\r\n@Component({\r\n  selector: 'ngui-auto-complete',\r\n  template: `\r\n    <div #autoCompleteContainer class=\"ngui-auto-complete\">\r\n      <!-- keyword input -->\r\n      <input *ngIf=\"showInputTag\"\r\n             #autoCompleteInput class=\"keyword\"\r\n             [attr.autocomplete]=\"autocomplete ? 'null' : 'off'\"\r\n             placeholder=\"{{placeholder}}\"\r\n             (focus)=\"showDropdownList($event)\"\r\n             (blur)=\"blurHandler($event)\"\r\n             (keydown)=\"inputElKeyHandler($event)\"\r\n             (input)=\"reloadListInDelay($event)\"\r\n             [(ngModel)]=\"keyword\"/>\r\n\r\n      <!-- dropdown that user can select -->\r\n      <ul *ngIf=\"dropdownVisible\" [class.empty]=\"emptyList\">\r\n        <li *ngIf=\"isLoading && loadingTemplate\" class=\"loading\"\r\n            [innerHTML]=\"loadingTemplate\"></li>\r\n        <li *ngIf=\"isLoading && !loadingTemplate\" class=\"loading\">{{loadingText}}</li>\r\n        <li *ngIf=\"minCharsEntered && !isLoading && !filteredList.length\"\r\n            (mousedown)=\"selectOne('')\"\r\n            class=\"no-match-found\">{{noMatchFoundText || 'No Result Found'}}\r\n        </li>\r\n        <li *ngIf=\"headerItemTemplate && filteredList.length\" class=\"header-item\"\r\n            [innerHTML]=\"headerItemTemplate\"></li>\r\n        <li *ngIf=\"blankOptionText && filteredList.length\"\r\n            (mousedown)=\"selectOne('')\"\r\n            class=\"blank-item\">{{blankOptionText}}\r\n        </li>\r\n        <li class=\"item\"\r\n            *ngFor=\"let item of filteredList; let i=index; trackBy: trackByIndex\"\r\n            (mousedown)=\"selectOne(item)\"\r\n            [ngClass]=\"{selected: i === itemIndex}\"\r\n            [innerHtml]=\"autoComplete.getFormattedListItem(item)\">\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    @keyframes slideDown {\r\n      0% {\r\n        transform: translateY(-10px);\r\n      }\r\n      100% {\r\n        transform: translateY(0px);\r\n      }\r\n    }\r\n\r\n    .ngui-auto-complete {\r\n      background-color: transparent;\r\n    }\r\n\r\n    .ngui-auto-complete > input {\r\n      outline: none;\r\n      border: 0;\r\n      padding: 2px;\r\n      box-sizing: border-box;\r\n      background-clip: content-box;\r\n    }\r\n\r\n    .ngui-auto-complete > ul {\r\n      background-color: #fff;\r\n      margin: 0;\r\n      width: 100%;\r\n      overflow-y: auto;\r\n      list-style-type: none;\r\n      padding: 0;\r\n      border: 1px solid #ccc;\r\n      box-sizing: border-box;\r\n      animation: slideDown 0.1s;\r\n    }\r\n\r\n    .ngui-auto-complete > ul.empty {\r\n      display: none;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li {\r\n      padding: 2px 5px;\r\n      border-bottom: 1px solid #eee;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li.selected {\r\n      background-color: #ccc;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    .ngui-auto-complete > ul li:not(.header-item):hover {\r\n      background-color: #ccc;\r\n    }`\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NguiAutoCompleteComponent implements OnInit {\r\n\r\n  /**\r\n   * public input properties\r\n   */\r\n  @Input('autocomplete') public autocomplete = false;\r\n  @Input('list-formatter') public listFormatter: (arg: any) => string;\r\n  @Input('source') public source: any;\r\n  @Input('path-to-data') public pathToData: string;\r\n  @Input('min-chars') public minChars = 0;\r\n  @Input('placeholder') public placeholder: string;\r\n  @Input('blank-option-text') public blankOptionText: string;\r\n  @Input('no-match-found-text') public noMatchFoundText: string;\r\n  @Input('accept-user-input') public acceptUserInput = true;\r\n  @Input('loading-text') public loadingText = 'Loading';\r\n  @Input('loading-template') public loadingTemplate = null;\r\n  @Input('max-num-list') public maxNumList: number;\r\n  @Input('show-input-tag') public showInputTag = true;\r\n  @Input('show-dropdown-on-init') public showDropdownOnInit = false;\r\n  @Input('tab-to-select') public tabToSelect = true;\r\n  @Input('match-formatted') public matchFormatted = false;\r\n  @Input('auto-select-first-item') public autoSelectFirstItem = false;\r\n  @Input('select-on-blur') public selectOnBlur = false;\r\n  @Input('re-focus-after-select') public reFocusAfterSelect = true;\r\n  @Input('header-item-template') public headerItemTemplate = null;\r\n  @Input('ignore-accents') public ignoreAccents = true;\r\n\r\n  @Output() public valueSelected = new EventEmitter();\r\n  @Output() public customSelected = new EventEmitter();\r\n  @Output() public textEntered = new EventEmitter();\r\n\r\n  @ViewChild('autoCompleteInput') public autoCompleteInput: ElementRef;\r\n  @ViewChild('autoCompleteContainer') public autoCompleteContainer: ElementRef;\r\n\r\n  public dropdownVisible = false;\r\n  public isLoading = false;\r\n\r\n  public filteredList: any[] = [];\r\n  public minCharsEntered = false;\r\n  public itemIndex: number = null;\r\n  public keyword: string;\r\n\r\n  private el: HTMLElement;           // this component  element `<ngui-auto-complete>`\r\n  private timer = 0;\r\n\r\n  private delay = (() => {\r\n    let timer = null;\r\n    return (callback: any, ms: number) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(callback, ms);\r\n    };\r\n  })();\r\n  private selectOnEnter = false;\r\n\r\n  /**\r\n   * constructor\r\n   */\r\n  constructor(elementRef: ElementRef, public autoComplete: NguiAutoComplete) {\r\n    this.el = elementRef.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * user enters into input el, shows list to select, then select one\r\n   */\r\n  ngOnInit(): void {\r\n    this.autoComplete.source = this.source;\r\n    this.autoComplete.pathToData = this.pathToData;\r\n    this.autoComplete.listFormatter = this.listFormatter;\r\n    if (this.autoSelectFirstItem) {\r\n      this.itemIndex = 0;\r\n    }\r\n    setTimeout(() => {\r\n      if (this.autoCompleteInput && this.reFocusAfterSelect) {\r\n        this.autoCompleteInput.nativeElement.focus();\r\n      }\r\n      if (this.showDropdownOnInit) {\r\n        this.showDropdownList({target: {value: ''}});\r\n      }\r\n    });\r\n  }\r\n\r\n  public isSrcArr(): boolean {\r\n    return Array.isArray(this.source);\r\n  }\r\n\r\n  public reloadListInDelay = (evt: any): void => {\r\n    const delayMs = this.isSrcArr() ? 10 : 500;\r\n    const keyword = evt.target.value;\r\n\r\n    // executing after user stopped typing\r\n    this.delay(() => this.reloadList(keyword), delayMs);\r\n  }\r\n\r\n  public showDropdownList(event: any): void {\r\n    this.dropdownVisible = true;\r\n    this.reloadList(event.target.value);\r\n  }\r\n\r\n  public hideDropdownList(): void {\r\n    this.selectOnEnter = false;\r\n    this.dropdownVisible = false;\r\n  }\r\n\r\n  public findItemFromSelectValue(selectText: string): any {\r\n    const matchingItems = this.filteredList.filter((item) => ('' + item) === selectText);\r\n    return matchingItems.length ? matchingItems[0] : null;\r\n  }\r\n\r\n  public reloadList(keyword: string): void {\r\n\r\n    this.filteredList = [];\r\n    if (keyword.length < (this.minChars || 0)) {\r\n      this.minCharsEntered = false;\r\n      return;\r\n    } else {\r\n      this.minCharsEntered = true;\r\n    }\r\n\r\n    if (this.isSrcArr()) {    // local source\r\n      this.isLoading = false;\r\n      this.filteredList = this.autoComplete.filter(this.source, keyword, this.matchFormatted, this.ignoreAccents);\r\n      if (this.maxNumList) {\r\n        this.filteredList = this.filteredList.slice(0, this.maxNumList);\r\n      }\r\n\r\n    } else {                 // remote source\r\n      this.isLoading = true;\r\n\r\n      if (typeof this.source === 'function') {\r\n        // custom function that returns observable\r\n        this.source(keyword).subscribe(\r\n          (resp) => {\r\n\r\n            if (this.pathToData) {\r\n              const paths = this.pathToData.split('.');\r\n              paths.forEach((prop) => resp = resp[prop]);\r\n            }\r\n\r\n            this.filteredList = resp;\r\n            if (this.maxNumList) {\r\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\r\n            }\r\n          },\r\n          (error) => null,\r\n          () => this.isLoading = false // complete\r\n        );\r\n      } else {\r\n        // remote source\r\n\r\n        this.autoComplete.getRemoteData(keyword).subscribe((resp) => {\r\n            this.filteredList = resp ? resp : [];\r\n            if (this.maxNumList) {\r\n              this.filteredList = this.filteredList.slice(0, this.maxNumList);\r\n            }\r\n          },\r\n          (error) => null,\r\n          () => this.isLoading = false // complete\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectOne(data: any) {\r\n    if (!!data || data === '') {\r\n      this.valueSelected.emit(data);\r\n    } else {\r\n      this.customSelected.emit(this.keyword);\r\n    }\r\n  }\r\n\r\n  public enterText(data: any) {\r\n    this.textEntered.emit(data);\r\n  }\r\n\r\n  public blurHandler(evt: any) {\r\n    if (this.selectOnBlur) {\r\n      this.selectOne(this.filteredList[this.itemIndex]);\r\n    }\r\n\r\n    this.hideDropdownList();\r\n  }\r\n\r\n  public inputElKeyHandler = (evt: any) => {\r\n    const totalNumItem = this.filteredList.length;\r\n\r\n    if (!this.selectOnEnter && this.autoSelectFirstItem && (0 !== totalNumItem)) {\r\n      this.selectOnEnter = true;\r\n    }\r\n\r\n    switch (evt.keyCode) {\r\n      case 27: // ESC, hide auto complete\r\n        this.selectOnEnter = false;\r\n        this.selectOne(undefined);\r\n        break;\r\n\r\n      case 38: // UP, select the previous li el\r\n        if (0 === totalNumItem) {\r\n          return;\r\n        }\r\n        this.selectOnEnter = true;\r\n        this.itemIndex = (totalNumItem + this.itemIndex - 1) % totalNumItem;\r\n        this.scrollToView(this.itemIndex);\r\n        break;\r\n\r\n      case 40: // DOWN, select the next li el or the first one\r\n        if (0 === totalNumItem) {\r\n          return;\r\n        }\r\n        this.selectOnEnter = true;\r\n        this.dropdownVisible = true;\r\n        let sum = this.itemIndex;\r\n        sum = (this.itemIndex === null) ? 0 : sum + 1;\r\n        this.itemIndex = (totalNumItem + sum) % totalNumItem;\r\n        this.scrollToView(this.itemIndex);\r\n        break;\r\n\r\n      case 13: // ENTER, choose it!!\r\n        if (this.selectOnEnter) {\r\n          this.selectOne(this.filteredList[this.itemIndex]);\r\n        }\r\n        evt.preventDefault();\r\n        break;\r\n\r\n      case 9: // TAB, choose if tab-to-select is enabled\r\n        if (this.tabToSelect) {\r\n          this.selectOne(this.filteredList[this.itemIndex]);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  public scrollToView(index) {\r\n    const container = this.autoCompleteContainer.nativeElement;\r\n    const ul = container.querySelector('ul');\r\n    const li = ul.querySelector('li');  // just sample the first li to get height\r\n    const liHeight = li.offsetHeight;\r\n    const scrollTop = ul.scrollTop;\r\n    const viewport = scrollTop + ul.offsetHeight;\r\n    const scrollOffset = liHeight * index;\r\n    if (scrollOffset < scrollTop || (scrollOffset + liHeight) > viewport) {\r\n      ul.scrollTop = scrollOffset;\r\n    }\r\n  }\r\n\r\n  public trackByIndex(index, item) {\r\n    return index;\r\n  }\r\n\r\n  get emptyList(): boolean {\r\n    return !(\r\n      this.isLoading ||\r\n      (this.minCharsEntered && !this.isLoading && !this.filteredList.length) ||\r\n      (this.filteredList.length)\r\n    );\r\n  }\r\n\r\n}\r\n","import {\r\n  AfterViewInit, ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  EventEmitter, Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit, Optional,\r\n  Output, SimpleChanges, SkipSelf, ViewContainerRef\r\n} from '@angular/core';\r\nimport { AbstractControl, ControlContainer, FormControl, FormGroup, FormGroupName } from '@angular/forms';\r\nimport { NguiAutoCompleteComponent } from './auto-complete.component';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[auto-complete], [ngui-auto-complete]'\r\n})\r\nexport class NguiAutoCompleteDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n\r\n  @Input('autocomplete') public autocomplete = false;\r\n  @Input('auto-complete-placeholder') public autoCompletePlaceholder: string;\r\n  @Input('source') public source: any;\r\n  @Input('path-to-data') public pathToData: string;\r\n  @Input('min-chars') public minChars: number;\r\n  @Input('display-property-name') public displayPropertyName: string;\r\n  @Input('accept-user-input') public acceptUserInput = true;\r\n  @Input('max-num-list') public maxNumList: string;\r\n  @Input('select-value-of') public selectValueOf: string;\r\n  @Input('loading-template') public loadingTemplate = null;\r\n  @Input('list-formatter') public listFormatter;\r\n  @Input('loading-text') public loadingText = 'Loading';\r\n  @Input('blank-option-text') public blankOptionText: string;\r\n  @Input('no-match-found-text') public noMatchFoundText: string;\r\n  @Input('value-formatter') public valueFormatter: any;\r\n  @Input('tab-to-select') public tabToSelect = true;\r\n  @Input('select-on-blur') public selectOnBlur = false;\r\n  @Input('match-formatted') public matchFormatted = false;\r\n  @Input('auto-select-first-item') public autoSelectFirstItem = false;\r\n  @Input('open-on-focus') public openOnFocus = true;\r\n  @Input('close-on-focusout') public closeOnFocusOut = true;\r\n  @Input('re-focus-after-select') public reFocusAfterSelect = true;\r\n  @Input('header-item-template') public headerItemTemplate = null;\r\n  @Input('ignore-accents') public ignoreAccents = true;\r\n\r\n  @Input() public ngModel: string;\r\n  @Input('formControlName') public formControlName: string;\r\n  // if [formControl] is used on the anchor where our directive is sitting\r\n  // a form is not necessary to use a formControl we should also support this\r\n  @Input('formControl') public extFormControl: FormControl;\r\n  @Input('z-index') public zIndex = '1';\r\n  @Input('is-rtl') public isRtl = false;\r\n\r\n  @Output() public ngModelChange = new EventEmitter();\r\n  @Output() public valueChanged = new EventEmitter();\r\n  @Output() public customSelected = new EventEmitter();\r\n\r\n  private componentRef: ComponentRef<NguiAutoCompleteComponent>;\r\n  private wrapperEl: HTMLElement;\r\n  private el: HTMLElement;   // this element element, can be any\r\n  private acDropdownEl: HTMLElement; // auto complete element\r\n  private inputEl: HTMLInputElement;  // input element of this element\r\n  private formControl: AbstractControl;\r\n  private revertValue: any;\r\n  private dropdownJustHidden: boolean;\r\n  private scheduledBlurHandler: any;\r\n  private documentClickListener: (e: MouseEvent) => any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver,\r\n              public  viewContainerRef: ViewContainerRef,\r\n              @Optional() @Host() @SkipSelf() private parentForm: ControlContainer) {\r\n    this.el = this.viewContainerRef.element.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Blur event is handled only after a click event.\r\n    // This is to prevent handling of blur events resulting from interacting with a scrollbar\r\n    // introduced by content overflow (Internet explorer issue).\r\n    // See issue description here: http://stackoverflow.com/questions/2023779/clicking-on-a-divs-scroll-bar-fires-the-blur-event-in-ie\r\n    this.documentClickListener = (e) => {\r\n      if (this.scheduledBlurHandler) {\r\n        this.scheduledBlurHandler();\r\n        this.scheduledBlurHandler = null;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', this.documentClickListener);\r\n    // wrap this element with <div class=\"ngui-auto-complete\">\r\n    this.wrapperEl = document.createElement('div');\r\n    this.wrapperEl.className = 'ngui-auto-complete-wrapper';\r\n    this.wrapperEl.style.position = 'relative';\r\n    this.el.parentElement.insertBefore(this.wrapperEl, this.el.nextSibling);\r\n    this.wrapperEl.appendChild(this.el);\r\n\r\n    // Check if we were supplied with a [formControlName] and it is inside a [form]\r\n    // else check if we are supplied with a [FormControl] regardless if it is inside a [form] tag\r\n    if (this.parentForm && this.formControlName) {\r\n      if (this.parentForm['form']) {\r\n        this.formControl = (this.parentForm['form'] as FormGroup).get(this.formControlName);\r\n      } else if (this.parentForm instanceof FormGroupName) {\r\n        this.formControl = (this.parentForm as FormGroupName).control.controls[this.formControlName];\r\n      }\r\n    } else if (this.extFormControl) {\r\n      this.formControl = this.extFormControl;\r\n    }\r\n\r\n    // apply toString() method for the object\r\n    if (!!this.ngModel) {\r\n      this.selectNewValue(this.ngModel);\r\n    } else if (!!this.formControl && this.formControl.value) {\r\n      this.selectNewValue(this.formControl.value);\r\n    }\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // if this element is not an input tag, move dropdown after input tag\r\n    // so that it displays correctly\r\n    this.inputEl = this.el.tagName === 'INPUT' ? this.el as HTMLInputElement : this.el.querySelector('input');\r\n\r\n    if (this.openOnFocus) {\r\n      this.inputEl.addEventListener('focus', (e) => this.showAutoCompleteDropdown(e));\r\n    }\r\n\r\n    if (this.closeOnFocusOut) {\r\n      this.inputEl.addEventListener('focusout', (e) => this.hideAutoCompleteDropdown(e));\r\n    }\r\n\r\n    if (!this.autocomplete) {\r\n      this.inputEl.setAttribute('autocomplete', 'off');\r\n    }\r\n    this.inputEl.addEventListener('blur', (e) => {\r\n      this.scheduledBlurHandler = () => {\r\n        return this.blurHandler(e);\r\n      };\r\n    });\r\n    this.inputEl.addEventListener('keydown', (e) => this.keydownEventHandler(e));\r\n    this.inputEl.addEventListener('input', (e) => this.inputEventHandler(e));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.componentRef) {\r\n      this.componentRef.instance.valueSelected.unsubscribe();\r\n      this.componentRef.instance.textEntered.unsubscribe();\r\n    }\r\n    if (this.documentClickListener) {\r\n      document.removeEventListener('click', this.documentClickListener);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['ngModel']) {\r\n      this.ngModel = this.setToStringFunction(changes['ngModel'].currentValue);\r\n      this.renderValue(this.ngModel);\r\n    }\r\n  }\r\n\r\n  // show auto-complete list below the current element\r\n  public showAutoCompleteDropdown = (event?: any): void => {\r\n    if (this.dropdownJustHidden) {\r\n      return;\r\n    }\r\n    this.hideAutoCompleteDropdown();\r\n    this.scheduledBlurHandler = null;\r\n\r\n    const factory = this.resolver.resolveComponentFactory(NguiAutoCompleteComponent);\r\n\r\n    this.componentRef = this.viewContainerRef.createComponent(factory);\r\n\r\n    const component = this.componentRef.instance;\r\n    component.keyword = this.inputEl.value;\r\n    component.showInputTag = false; // Do NOT display autocomplete input tag separately\r\n\r\n    component.pathToData = this.pathToData;\r\n    component.minChars = this.minChars;\r\n    component.source = this.source;\r\n    component.placeholder = this.autoCompletePlaceholder;\r\n    component.acceptUserInput = this.acceptUserInput;\r\n    component.maxNumList = parseInt(this.maxNumList, 10);\r\n\r\n    component.loadingText = this.loadingText;\r\n    component.loadingTemplate = this.loadingTemplate;\r\n    component.listFormatter = this.listFormatter;\r\n    component.blankOptionText = this.blankOptionText;\r\n    component.noMatchFoundText = this.noMatchFoundText;\r\n    component.tabToSelect = this.tabToSelect;\r\n    component.selectOnBlur = this.selectOnBlur;\r\n    component.matchFormatted = this.matchFormatted;\r\n    component.autoSelectFirstItem = this.autoSelectFirstItem;\r\n    component.headerItemTemplate = this.headerItemTemplate;\r\n    component.ignoreAccents = this.ignoreAccents;\r\n\r\n    component.valueSelected.subscribe(this.selectNewValue);\r\n    component.textEntered.subscribe(this.enterNewText);\r\n    component.customSelected.subscribe(this.selectCustomValue);\r\n\r\n    this.acDropdownEl = this.componentRef.location.nativeElement;\r\n    this.acDropdownEl.style.display = 'none';\r\n\r\n    // if this element is not an input tag, move dropdown after input tag\r\n    // so that it displays correctly\r\n\r\n    // TODO: confirm with owners\r\n    // with some reason, viewContainerRef.createComponent is creating element\r\n    // to parent div which is created by us on ngOnInit, please try this with demo\r\n\r\n    // if (this.el.tagName !== 'INPUT' && this.acDropdownEl) {\r\n    this.inputEl.parentElement.insertBefore(this.acDropdownEl, this.inputEl.nextSibling);\r\n    // }\r\n    this.revertValue = typeof this.ngModel !== 'undefined' ? this.ngModel : this.inputEl.value;\r\n\r\n    setTimeout(() => {\r\n      component.reloadList(this.inputEl.value);\r\n      this.styleAutoCompleteDropdown();\r\n      component.dropdownVisible = true;\r\n    });\r\n  }\r\n\r\n  public blurHandler(event: any) {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n\r\n      if (this.selectOnBlur) {\r\n        component.selectOne(component.filteredList[component.itemIndex]);\r\n      }\r\n\r\n      if (this.closeOnFocusOut) {\r\n        this.hideAutoCompleteDropdown(event);\r\n      }\r\n    }\r\n  }\r\n\r\n  public hideAutoCompleteDropdown = (event?: any): void => {\r\n    if (this.componentRef) {\r\n      let currentItem: any;\r\n      const hasRevertValue = (typeof this.revertValue !== 'undefined');\r\n      if (this.inputEl && hasRevertValue && this.acceptUserInput === false) {\r\n        currentItem = this.componentRef.instance.findItemFromSelectValue(this.inputEl.value);\r\n      }\r\n      this.componentRef.destroy();\r\n      this.componentRef = undefined;\r\n\r\n      if (this.inputEl && hasRevertValue && this.acceptUserInput === false && currentItem === null) {\r\n        this.selectNewValue(this.revertValue);\r\n      } else if (this.inputEl && this.acceptUserInput === true && typeof currentItem === 'undefined' && event && event.target.value) {\r\n        this.enterNewText(event.target.value);\r\n      }\r\n    }\r\n    this.dropdownJustHidden = true;\r\n    setTimeout(() => this.dropdownJustHidden = false, 100);\r\n  }\r\n\r\n  public styleAutoCompleteDropdown = () => {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n\r\n      /* setting width/height auto complete */\r\n      const thisElBCR = this.el.getBoundingClientRect();\r\n      const thisInputElBCR = this.inputEl.getBoundingClientRect();\r\n      const closeToBottom = thisInputElBCR.bottom + 100 > window.innerHeight;\r\n      const directionOfStyle = this.isRtl ? 'right' : 'left';\r\n\r\n      this.acDropdownEl.style.width = thisInputElBCR.width + 'px';\r\n      this.acDropdownEl.style.position = 'absolute';\r\n      this.acDropdownEl.style.zIndex = this.zIndex;\r\n      this.acDropdownEl.style[directionOfStyle] = '0';\r\n      this.acDropdownEl.style.display = 'inline-block';\r\n\r\n      if (closeToBottom) {\r\n        this.acDropdownEl.style.bottom = `${thisInputElBCR.height}px`;\r\n      } else {\r\n        this.acDropdownEl.style.top = `${thisInputElBCR.height}px`;\r\n      }\r\n    }\r\n  }\r\n\r\n  public setToStringFunction(item: any): any {\r\n    if (item && typeof item === 'object') {\r\n      let displayVal;\r\n\r\n      if (typeof this.valueFormatter === 'string') {\r\n        const matches = this.valueFormatter.match(/[a-zA-Z0-9_\\$]+/g);\r\n        let formatted = this.valueFormatter;\r\n        if (matches && typeof item !== 'string') {\r\n          matches.forEach((key) => {\r\n            formatted = formatted.replace(key, item[key]);\r\n          });\r\n        }\r\n        displayVal = formatted;\r\n      } else if (typeof this.valueFormatter === 'function') {\r\n        displayVal = this.valueFormatter(item);\r\n      } else if (this.displayPropertyName) {\r\n        displayVal = item[this.displayPropertyName];\r\n      } else if (typeof this.listFormatter === 'string' && this.listFormatter.match(/^\\w+$/)) {\r\n        displayVal = item[this.listFormatter];\r\n      } else {\r\n        displayVal = item.value;\r\n      }\r\n      item.toString = () => displayVal;\r\n    }\r\n    return item;\r\n  }\r\n\r\n  public selectNewValue = (item: any) => {\r\n    // make displayable value\r\n    if (item && typeof item === 'object') {\r\n      item = this.setToStringFunction(item);\r\n    }\r\n\r\n    this.renderValue(item);\r\n\r\n    // make return value\r\n    let val = item;\r\n    if (this.selectValueOf && item[this.selectValueOf]) {\r\n      val = item[this.selectValueOf];\r\n    }\r\n    if ((this.parentForm && this.formControlName) || this.extFormControl) {\r\n      if (!!val) {\r\n        this.formControl.patchValue(val);\r\n      }\r\n    }\r\n    if (val !== this.ngModel) {\r\n      this.ngModelChange.emit(val);\r\n    }\r\n    this.valueChanged.emit(val);\r\n    this.hideAutoCompleteDropdown();\r\n    setTimeout(() => {\r\n      if (this.reFocusAfterSelect) {\r\n        this.inputEl.focus();\r\n      }\r\n\r\n      return this.inputEl;\r\n    });\r\n  }\r\n\r\n  public selectCustomValue = (text: string) => {\r\n    this.customSelected.emit(text);\r\n    this.hideAutoCompleteDropdown();\r\n    setTimeout(() => {\r\n      if (this.reFocusAfterSelect) {\r\n        this.inputEl.focus();\r\n      }\r\n\r\n      return this.inputEl;\r\n    });\r\n  }\r\n\r\n  public enterNewText = (value: any) => {\r\n    this.renderValue(value);\r\n    this.ngModelChange.emit(value);\r\n    this.valueChanged.emit(value);\r\n    this.hideAutoCompleteDropdown();\r\n  }\r\n\r\n  private keydownEventHandler = (evt: any) => {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n      component.inputElKeyHandler(evt);\r\n    }\r\n  }\r\n\r\n  private inputEventHandler = (evt: any) => {\r\n    if (this.componentRef) {\r\n      const component = this.componentRef.instance;\r\n      component.dropdownVisible = true;\r\n      component.keyword = evt.target.value;\r\n      component.reloadListInDelay(evt);\r\n    } else {\r\n      this.showAutoCompleteDropdown();\r\n    }\r\n  }\r\n\r\n  private renderValue(item: any) {\r\n    if (!!this.inputEl) {\r\n      this.inputEl.value = '' + item;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NguiAutoCompleteComponent } from './auto-complete.component';\r\nimport { NguiAutoCompleteDirective } from './auto-complete.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NguiAutoCompleteComponent,\r\n    NguiAutoCompleteDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    NguiAutoCompleteComponent,\r\n    NguiAutoCompleteDirective\r\n  ]\r\n})\r\nexport class NguiAutoCompleteModule { }\r\n","/*\r\n * Public API Surface of auto-complete\r\n */\r\n\r\nexport * from './lib/auto-complete.service';\r\nexport * from './lib/auto-complete.component';\r\nexport * from './lib/auto-complete.directive';\r\nexport * from './lib/auto-complete.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}