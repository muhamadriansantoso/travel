{"version":3,"file":"ngx-clipboard.umd.js","sources":["ng:/ngx-clipboard/lib/ngx-clipboard.service.ts","ng:/ngx-clipboard/lib/ngx-clipboard.directive.ts","ng:/ngx-clipboard/lib/ngx-clipboard-if-supported.directive.ts","ng:/ngx-clipboard/lib/ngx-clipboard.module.ts"],"names":["Subject","Injectable","Inject","DOCUMENT","Optional","WINDOW","EventEmitter","Directive","Input","Output","HostListener","ViewContainerRef","TemplateRef","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { WINDOW } from 'ngx-window-token';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { ClipboardParams, IClipboardResponse } from './interface';\r\n\r\n/**\r\n * The following code is heavily copied from https://github.com/zenorocha/clipboard.js\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ClipboardService {\r\n    private copySubject = new Subject<IClipboardResponse>();\r\n    public copyResponse$: Observable<IClipboardResponse> = this.copySubject.asObservable();\r\n    private tempTextArea: HTMLTextAreaElement | undefined;\r\n    private config: ClipboardParams = {};\r\n\r\n    constructor(@Inject(DOCUMENT) public document: any, @Optional() @Inject(WINDOW) private window: any) {}\r\n\r\n    public configure(config: ClipboardParams) {\r\n        this.config = config;\r\n    }\r\n\r\n    public copy(content: string): void {\r\n        if (!this.isSupported || !content) {\r\n            return this.pushCopyResponse({ isSuccess: false, content });\r\n        }\r\n        const copyResult = this.copyFromContent(content);\r\n        if (copyResult) {\r\n            return this.pushCopyResponse({ content, isSuccess: copyResult });\r\n        }\r\n        return this.pushCopyResponse({ isSuccess: false, content });\r\n    }\r\n\r\n    public get isSupported(): boolean {\r\n        return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n    }\r\n\r\n    public isTargetValid(element: HTMLInputElement | HTMLTextAreaElement): boolean {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    }\r\n\r\n    /**\r\n     * Attempts to copy from an input `targetElm`\r\n     */\r\n    public copyFromInputElement(targetElm: HTMLInputElement | HTMLTextAreaElement, isFocus = true): boolean {\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            const re = this.copyText();\r\n            this.clearSelection(isFocus ? targetElm : undefined, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is a hack for IE11 to return `true` even if copy fails.\r\n     */\r\n    public isCopySuccessInIE11(): boolean {\r\n        const clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     */\r\n    public copyFromContent(content: string, container: HTMLElement = this.document.body): boolean {\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            } catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n\r\n        const toReturn = this.copyFromInputElement(this.tempTextArea, false);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        return toReturn;\r\n    }\r\n\r\n    /**\r\n     * Remove temporary textarea if any exists.\r\n     */\r\n    public destroy(container: HTMLElement = this.document.body): void {\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the target html input element.\r\n     */\r\n    private selectTarget(inputElement: HTMLInputElement | HTMLTextAreaElement): number | undefined {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    }\r\n\r\n    private copyText(): boolean {\r\n        return this.document.execCommand('copy');\r\n    }\r\n\r\n    /**\r\n     * Moves focus away from `target` and back to the trigger, removes current selection.\r\n     */\r\n    private clearSelection(inputElement: HTMLInputElement | HTMLTextAreaElement, window: Window): void {\r\n        inputElement && inputElement.focus();\r\n        window.getSelection().removeAllRanges();\r\n    }\r\n\r\n    /**\r\n     * Creates a fake textarea for copy command.\r\n     */\r\n    private createTempTextArea(doc: Document, window: Window): HTMLTextAreaElement {\r\n        const isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        let ta: HTMLTextAreaElement;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        const yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    }\r\n\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     */\r\n    public pushCopyResponse(response: IClipboardResponse): void {\r\n        this.copySubject.next(response);\r\n    }\r\n\r\n    /**\r\n     * @deprecated use pushCopyResponse instead.\r\n     */\r\n    public pushCopyReponse(response: IClipboardResponse): void {\r\n        this.pushCopyResponse(response);\r\n    }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\n\r\nimport { IClipboardResponse } from './interface';\r\nimport { ClipboardService } from './ngx-clipboard.service';\r\n\r\n@Directive({\r\n    selector: '[ngxClipboard]'\r\n})\r\nexport class ClipboardDirective implements OnInit, OnDestroy {\r\n    // tslint:disable-next-line:no-input-rename\r\n    @Input('ngxClipboard')\r\n    public targetElm: HTMLInputElement | HTMLTextAreaElement;\r\n    @Input()\r\n    public container: HTMLElement;\r\n\r\n    @Input()\r\n    public cbContent: string;\r\n\r\n    @Input()\r\n    public cbSuccessMsg: string;\r\n\r\n    @Output()\r\n    public cbOnSuccess: EventEmitter<IClipboardResponse> = new EventEmitter<IClipboardResponse>();\r\n\r\n    @Output()\r\n    public cbOnError: EventEmitter<any> = new EventEmitter<any>();\r\n    constructor(private clipboardSrv: ClipboardService) {}\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    public ngOnInit() {}\r\n\r\n    public ngOnDestroy() {\r\n        this.clipboardSrv.destroy(this.container);\r\n    }\r\n\r\n    @HostListener('click', ['$event.target'])\r\n    public onClick(event: Event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        } else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        } else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @param succeeded\r\n     */\r\n    private handleResult(succeeded: boolean, copiedContent: string | undefined, event: Event) {\r\n        let response: IClipboardResponse = {\r\n            isSuccess: succeeded,\r\n            event\r\n        };\r\n\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        } else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n\r\n        this.clipboardSrv.pushCopyResponse(response);\r\n    }\r\n}\r\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { ClipboardService } from './ngx-clipboard.service';\r\n\r\n@Directive({\r\n    selector: '[ngxClipboardIfSupported]'\r\n})\r\nexport class ClipboardIfSupportedDirective implements OnInit {\r\n    constructor(\r\n        private _clipboardService: ClipboardService,\r\n        private _viewContainerRef: ViewContainerRef,\r\n        private _templateRef: TemplateRef<any>\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ClipboardIfSupportedDirective } from './ngx-clipboard-if-supported.directive';\r\nimport { ClipboardDirective } from './ngx-clipboard.directive';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\r\n    exports: [ClipboardDirective, ClipboardIfSupportedDirective]\r\n})\r\nexport class ClipboardModule {}\r\n"]}