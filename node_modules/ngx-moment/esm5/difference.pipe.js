/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */
import { Pipe } from '@angular/core';
import * as moment from 'moment';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
var momentConstructor = moment;
var DifferencePipe = /** @class */ (function () {
    function DifferencePipe() {
    }
    /**
     * @param {?} value
     * @param {?} otherValue
     * @param {?=} unit
     * @param {?=} precision
     * @return {?}
     */
    DifferencePipe.prototype.transform = /**
     * @param {?} value
     * @param {?} otherValue
     * @param {?=} unit
     * @param {?=} precision
     * @return {?}
     */
    function (value, otherValue, unit, precision) {
        /** @type {?} */
        var date = momentConstructor(value);
        /** @type {?} */
        var date2 = (otherValue !== null) ? momentConstructor(otherValue) : momentConstructor();
        return date.diff(date2, unit, precision);
    };
DifferencePipe.ɵfac = function DifferencePipe_Factory(t) { return new (t || DifferencePipe)(); };
DifferencePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "amDifference", type: DifferencePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DifferencePipe, [{
        type: Pipe,
        args: [{ name: 'amDifference' }]
    }], function () { return []; }, null); })();
    return DifferencePipe;
}());
export { DifferencePipe };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlmZmVyZW5jZS5waXBlLmpzIiwic291cmNlcyI6WyJuZzovbmd4LW1vbWVudC9kaWZmZXJlbmNlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxPQUFPLEVBQUMsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEtBQUssTUFBTSxNQUFNLFFBQVEsQ0FBQztBQUNqQzs7QUFDZ0IsSUFBVixpQkFBaUIsR0FBRyxNQUFNO0FBRWhDO0FBQ2tCLElBRGxCO0FBQTRCLElBWTVCLENBQUM7QUFDRDtBQUFRO0FBQXdCO0FBQTZCO0FBQXdCO0FBQTZCO0FBQW1CO0FBQVEsSUFYM0ksa0NBQVM7QUFBTztBQUNqQjtBQUE2QjtBQUN0QjtBQUE2QjtBQUN4QjtBQUFRLElBSG5CLFVBQVUsS0FBMkIsRUFDM0IsVUFBZ0MsRUFDaEMsSUFBNkIsRUFDN0IsU0FBbUI7QUFBSTtBQUVuQixZQUFOLElBQUksR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUM7QUFDekM7QUFBeUIsWUFBZixLQUFLLEdBQUcsQ0FBQyxVQUFVLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRTtBQUM3RixRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQzdDLElBQUUsQ0FBQztrREFYRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFOzs7OztnREFDckI7QUFBQyxJQVdWLHFCQUFDO0FBQ0EsQ0FEQSxBQVpELElBWUM7O0FBakJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQVlBLEFBQUEsQUFWQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBWEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQVlBLEFBQUEsQUFBQSxBQVpBLEFBWUEsQUFYQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyogbmd4LW1vbWVudCAoYykgMjAxNSwgMjAxNiBVcmkgU2hha2VkIC8gTUlUIExpY2VuY2UgKi9cclxuXHJcbmltcG9ydCB7UGlwZSwgUGlwZVRyYW5zZm9ybX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIG1vbWVudCBmcm9tICdtb21lbnQnO1xyXG5cclxuY29uc3QgbW9tZW50Q29uc3RydWN0b3IgPSBtb21lbnQ7XHJcblxyXG5AUGlwZSh7IG5hbWU6ICdhbURpZmZlcmVuY2UnIH0pXHJcbmV4cG9ydCBjbGFzcyBEaWZmZXJlbmNlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xyXG4gIHRyYW5zZm9ybSh2YWx1ZTogRGF0ZSB8IG1vbWVudC5Nb21lbnQsXHJcbiAgICAgICAgICAgIG90aGVyVmFsdWU6IERhdGUgfCBtb21lbnQuTW9tZW50LFxyXG4gICAgICAgICAgICB1bml0PzogbW9tZW50LnVuaXRPZlRpbWUuRGlmZixcclxuICAgICAgICAgICAgcHJlY2lzaW9uPzogYm9vbGVhbik6IG51bWJlciB7XHJcblxyXG4gICAgY29uc3QgZGF0ZSA9IG1vbWVudENvbnN0cnVjdG9yKHZhbHVlKTtcclxuICAgIGNvbnN0IGRhdGUyID0gKG90aGVyVmFsdWUgIT09IG51bGwpID8gbW9tZW50Q29uc3RydWN0b3Iob3RoZXJWYWx1ZSkgOiBtb21lbnRDb25zdHJ1Y3RvcigpO1xyXG5cclxuICAgIHJldHVybiBkYXRlLmRpZmYoZGF0ZTIsIHVuaXQsIHByZWNpc2lvbik7XHJcbiAgfVxyXG59XHJcbiJdfQ==