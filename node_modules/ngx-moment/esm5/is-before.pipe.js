/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import * as moment from 'moment';
import { Pipe } from '@angular/core';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
var momentConstructor = moment;
var IsBeforePipe = /** @class */ (function () {
    function IsBeforePipe() {
    }
    /**
     * @param {?} value
     * @param {?} otherValue
     * @param {?=} unit
     * @return {?}
     */
    IsBeforePipe.prototype.transform = /**
     * @param {?} value
     * @param {?} otherValue
     * @param {?=} unit
     * @return {?}
     */
    function (value, otherValue, unit) {
        return momentConstructor(value).isBefore(momentConstructor(otherValue), unit);
    };
IsBeforePipe.ɵfac = function IsBeforePipe_Factory(t) { return new (t || IsBeforePipe)(); };
IsBeforePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "amIsBefore", type: IsBeforePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IsBeforePipe, [{
        type: Pipe,
        args: [{
                name: 'amIsBefore'
            }]
    }], function () { return []; }, null); })();
    return IsBeforePipe;
}());
export { IsBeforePipe };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtYmVmb3JlLnBpcGUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtbW9tZW50L2lzLWJlZm9yZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEtBQUssTUFBTSxNQUFNLFFBQVEsQ0FBQztBQUVqQyxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRDs7QUFDZ0IsSUFBVixpQkFBaUIsR0FBRyxNQUFNO0FBRWhDO0FBR2dCLElBSGhCO0FBQ2tCLElBVWxCLENBQUM7QUFDRDtBQUFRO0FBQXdCO0FBQTZCO0FBQXdCO0FBQW1CO0FBQVEsSUFQOUcsZ0NBQVM7QUFBTztBQUNqQjtBQUE2QjtBQUNkO0FBQW1CO0FBQVEsSUFGekMsVUFBVSxLQUEyQixFQUNuQyxVQUFnQyxFQUNoQyxJQUFnQztBQUFJLFFBQ3BDLE9BQU8saUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2xGLElBQUUsQ0FBQztnREFURixJQUFJLFNBQUMsc0JBQ0osSUFBSSxFQUFFO1NBQVksa0JBQ25COzs7Ozs7Z0RBQ1E7QUFBQyxJQVFWLG1CQUFDO0FBQ0EsQ0FEQSxBQVhELElBV0M7O0FBakJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQVdBLEFBQUEsQUFOQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVRBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFTQSxBQUFBLEFBQUEsQUFYQSxBQVdBLEFBUkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG1vbWVudCBmcm9tICdtb21lbnQnO1xyXG5cclxuaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuY29uc3QgbW9tZW50Q29uc3RydWN0b3IgPSBtb21lbnQ7XHJcblxyXG5AUGlwZSh7XHJcbiAgbmFtZTogJ2FtSXNCZWZvcmUnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJc0JlZm9yZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuXHJcbiAgdHJhbnNmb3JtKHZhbHVlOiBEYXRlIHwgbW9tZW50Lk1vbWVudCxcclxuICAgIG90aGVyVmFsdWU6IERhdGUgfCBtb21lbnQuTW9tZW50LFxyXG4gICAgdW5pdD86IG1vbWVudC51bml0T2ZUaW1lLlN0YXJ0T2YpOiBib29sZWFuIHtcclxuICAgIHJldHVybiBtb21lbnRDb25zdHJ1Y3Rvcih2YWx1ZSkuaXNCZWZvcmUobW9tZW50Q29uc3RydWN0b3Iob3RoZXJWYWx1ZSksIHVuaXQpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19