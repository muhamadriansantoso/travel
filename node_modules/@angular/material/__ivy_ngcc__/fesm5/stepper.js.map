{"version":3,"file":"stepper.js","sources":["../../../../../../src/material/stepper/step-label.ts","../../../../../../src/material/stepper/stepper-intl.ts","../../../../../../src/material/stepper/step-header.ts","../../../../../../src/material/stepper/stepper-animations.ts","../../../../../../src/material/stepper/stepper-icon.ts","../../../../../../src/material/stepper/stepper.ts","../../../../../../src/material/stepper/stepper-button.ts","../../../../../../src/material/stepper/stepper-module.ts","../../../../../../src/material/stepper/public-api.ts","../../../../../../src/material/stepper/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAED,IAMkC,gCAAY;AAChC,IAJd;AACoB;AAEH,KAAgC;AACkB;gBAJlE,SAAS,SAAC,kBACT,QAAQ,EAAE,gBAAgB,OAC3B;+BAC+C;;;;;;;0BAChD;AAAC,gBADgD,fAAA,CAAf,YAAY;AACvC;ACfP;AAAC;AACA;AACA;AACA;AACA;AACA;AAOD;AACA;AAC6B,IAD7B;AACY;AAEJ;AAAY;AACM;AAEA,QAAf;AAAI,QAAG,GAAkB,IAAI,OAAO,EAAQ,CAAC;AAE7C,QACT,kBAAa,GAAW,UAAU,CAAC;AAItB,KAHd;AAIW,KAXL;gBAHN,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC,zDAGxB,yBAhBR;;;;;gDAKM;AAAC,CAQP,IAUC;AAGD;AACA,SAAgB;AAAY,qBAAqB,CAAC,UAA0B,5BAC1E,OAAO,UAAU,IAAI,IAAI,cAAc,EAAE,CAAC;AAGrC,CAFN;AAGsB;AAAvB,IAAa;AAAiB,QAAQ,GAAG,PACvC,OAAO,EAAE,cAAc;AACpB,IAAH,IAAI,EAAE,CAAC,CAAC,IAAI,QAAQ,EAAE,EAAE;AAAC,GAAG,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC,3BACxD,UAAU,EAAE,iCAAiC;AAEtC,CADR;AAC8C;ACrC/C;AAAC;AACA;AACA;AACA;AACA;AACA;AACA;AAED,IA6BmC,iCAAa;AAAkB,IA8BhE,uBACS,KAAqB,EACpB;AAAI,SAAuB,EACnC,WAAoC,EACpC,iBAAoC,jCAJtC,YAKE,kBAAM,WAAW,CAAC,SAGnB;AAGC,QAVO,WAAK,GAAL,KAAK,CAAgB;AACF,QAAlB,mBAAa;AAAE,CAAf,aAAa,CAAc,PAInC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE;AAAE,EAAE,CAAC,CAAC,IACzC,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAAC;AAAE,OAAO,CAAC,cAAM,OAAA,iBAAiB,CAAC,YAAY,EAAE,GAAA,CAAC,CAAC;AAIlE,KAHxB;AAEY,IAAb;AAAE,iCAAS,GAAX,5BACE,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;AAC/B,QAAN,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC;AAAI,CAAC,WAAW,CAAC,CAAC,TACrD;AAIK;AAAO,IADb,6BAAK;AAAL,QACE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;AAAS,EAAE,EAAE,SAAS,CAAC,CAAC,VAC1D;AAEwD;AAAO,IAChE,oCAAY,GAAZ;AAA0B,QACxB,OAAO,IAAI,CAAC,KAAK,YAAY,YAAY,GAAG,IAAI;AAAC,EAAE,IAAI,CAAC,KAAK,CAAC,RAC/D;AAE6D;AAAO,IACrE,sCAAc,GAAd;AAAmC,QACjC,OAAO,IAAI,CAAC,KAAK,YAAY,YAAY,GAAG,IAAI,CAAC;AAAE,GAAG,GAAG,IAAI,CAAC,NAC/D;AAID;AAAO,IADP;AACgB,CADD,GAAf,IACE,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;AAGlC,KAFL;AAEqC;AAAO,IAC7C,uCAAe,GAAf;AACD,QAAG,OAAO;AAEO,YADZ;AAAK,EAAE,IAAI,CAAC,KAAK,AACjB,MAAM,EAAE,IAAI,CAAC;AAAM,YACnB,QAAQ,EAAE,IAAI,CAAC;AAAM,EAAE,OACxB,CAAC;AAGc,KAFjB;AAEC,IAAF;AAAG,4CAAoB,GAAvB,UAAwB,KAAgB,tDACtC,IAAI,KAAK,IAAI,QAAQ,EAAE;AAG3B,YAFM,OAAO,MAAG,IAAI,CAAC;AAAG,EAAE,GAAG,CAAC,CAAE,CAAC,CAC5B;AAEA,QADD;AAAE,EAAE,KAAK,IAAI,MAAM,EAAE,PACnB,OAAO,QAAQ,CAAC;AACpB,SAAG;AACc,QAAf;AAAE,EAAE,KAAK,IAAI,OAAO,EAAE,RACpB,OAAO,SAAS,CAAC;AACrB,SAAG;AAEH,QADE;AAAE,KAAK,KAAK,CAAC,NACd;AAEW,MAxDZ;gBA1CD,hBA0CE;EA1CO,SAAC,mBACT,QAAQ,EAAE,iBAAiB,zDAyCH,gBA/ClB,cAAc;QAOpB,RANC,gBAdK,YAAY;uBAsBlB,IAAI,EAAE,7BAtBkB,gBAKxB,UAAU;AACR,gBAHF;AAAc,GAAG;AAGf;AACC,wBA0BF,KAAK;AAAQ,wBAGb,KAAK;AAAK,+BAGV;AAAG,EAAE,8BAGL,KAAK;AAAI,wBAGT,KAAK;AAAa,2BAGlB,KAAK;AAAE,yBAGP,KAAK;AAAO,2BAGZ,KAAK;AAAG,gCAGR;AAAK;AAEK,IAwDb;;ysBA/FiC,2EAG7B,OAAO,EAAE,qCAAqC,lBAC9C,MAAM,EAAE,KAAK,wDACd,sCACD,aAAa,EAAE,iBAAiB,CAAC,IAAI,dACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM,8EAChD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAwFD;AAAC,iBADA,hBAAA,CAtFkC,aAAa;AAAW;ACrC3D;AAAC;AACA;AACA;AACA;AACA;AACA;AAWD;AACA;AAAI;AACA;AAEJ;AAAa,oBAAoB,GAG7B;AACA,IACF,wBAAwB,EAAE,OAAO,CAAC,gBAAgB,EAAE;AACvB,QAA3B,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE;AAAa,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC,/BACvF,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAC,CAAC,CAAC;AACnD,QAAhB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,yBAAyB,EAAE,UAAU;AAAC,CAAC,QAAQ,EAAC,CAAC,CAAC,LAClF,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,sCAAsC,CAAC,CAAC;AAGhE,KAFN,CAAC;AAEiE;AAAQ,IAC3E,sBAAsB,EAAE,OAAO,CAAC,gBAAgB,EAAE;AACrB,QAA3B,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE;AAAO,GAAG,EAAE,QAAQ,EAAC,CAAC,CAAC,TAC/D,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;AAC3D,QAAA,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAC,CAAC;AAAC,QAC7D,UAAU,CAAC,eAAe,EAAE,OAAO,CAAC;AAA6B,SAAS,CAAC,CAAC,NAC7E,CAAC;AAEuE,CAD1E;AACG;ACxCJ;AAAC;AACA;AACA;AACA;AACA;AACA;AAgBD;AACA;AAAI;AAEJ;AAAI,IAOF,wBAAmB,WAA+C;AAEhE,QAFiB,gBAAW,GAAX,WAAW,CAAoC;AAAI,KAAA;AAExC,KALQ;gBAJvC,hBAIwC;EAJ/B,SAAC,oBACT,QAAQ,EAAE,zCAIQ,gBArBM,WAAW;WAiBI,NACxC,LAjBO;AAA8B;AACtC,uBAmBG,KAAK,SAAC;AAAC,eAAe;AAED,IACxB;;;;;;;;;;;oBACA;AAAC,kBADA,jBARD;AACa;ACzBb;AAAC;AACA;AACA;AACA;AACA;AACA;AACA;AAED,IAqD6B,2BAAO;AAAkB;AACpC,IAIhB,iBAAkD,OAAmB,EACrC,kBAAqC,EACb,cAA+B;AACrF,QAHF,YAGE,kBAAM,OAAO,EAAE,cAAc,CAAC;AAElC,GADG,KAH+B,wBAAkB,GAAlB,kBAAkB,CAAmB;AACvD;AAAuD,KAEpE;AAEY;AAAM,IACnB,8BAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;AAC7D,QAAnB,IAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAAO,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAEpB;AACI;AAEtC,QAAzB,IAAM,gBAAgB,GAAG,CAAC,EAAE,OAAO,IAAI;AAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,3BAE3E,OAAO,kBAAkB,IAAI,gBAAgB,CAAC;AAK/B,KAJhB;AAI0C,MAxBrC;gBAZP,hBAYQ;EAZC,SAAC,aACT,QAAQ,EAAE,UAAU,5CAWU,gBAI6B,UAAU,uBAAxD;QAdb,kEAAwB,xBACxB,SAAS,EAAE,7DAaK,GAAG,SAAC,UAAU,CAAC,cAAM,OAAA,UAAU,GAAA,CAAC,1CAzB1C,iBAAiB,uBA0BV,QAAQ;uBAbnB,EAAC,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,VAC1C,EAAC,OAAO,EAAE,nEAaT,gDAAU,QAAQ,YAAI;EAd0B,EAAC,DACjC,EAAE,WAAW,EAAE,OAAO,EAAC,iCACzC,5DAY2B,GAAG,SAAC,sBAAsB;AAIvD;IAfC,aAAa,EAAE,QACf,3BAcS,4BATR;KAN+B,CAAC,IAAI,NAC7B,EAAE,SAAS,wCACnB,vDAII,SAAS,SAAC,YAAY;GAJX,EAAE,LAMV,IAkBT;qBAxB0C,CAAC,MAAM,TAChD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAwBD;AACA,WAFC,VAAA,CAtB4B,OAAO,GAsBnC;AAGI;AAAa,IACc,8BAAU;AAAkB,IAD5D;AAA+B,QAA/B;AAAoB,iDAgDnB;AAGa,QAvCO,mBAAa,GAAuB,IAAI,YAAY,EAAQ,CAAC;AAExD;AAChB,QAGR,oBAAc,GAAwD,EAAE,CAAC;AAEtB;AACzC,QAAV,oBAAc,GAAG,IAAI,OAAO,EAAkB,CAAC;AAGvC;AAA8C,KAwBvD;AAGC,IA5BA;AAAE,qCAAgB,GAAlB,hCAAA,iBAmBC;AAE8B,QApB7B,IAAI,CAAC,MAAM,CAAC;AAAM,CAAC,CAAC,UAAC,EAAmB,EAAlB,cAAI,EAAE;AAAY,gBAAD,JAAM,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,WAAW;AACxF,SADwF,CAAC,CAAC;AAE1C;AAAY,QACxD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;AACnD,YAAV,KAAI,CAAC,aAAa,EAAE,CAAC;AAIhB,SAHN,CAAC,CAAC;AAEe,QAAlB;AAAI,CAAC,cAAc,CAAC,IAAI;AAChB;AACE;AACE,QACV,oBAAoB,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC;AAAO,EAAE,KAAK,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,GAAA,CAAC,EACtF,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,UAAA,KAAK,5FACf,IAAK,KAAK,CAAC,OAAoC,KAAK,SAAS,EAAE;AAOpD,gBANT,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;AAC/B,aAAI;AAIU,SAHZ,CAAC,CAAC;AACL,KAAC;AAEE,MA3CkC;gBADtC,SAAS,zBAC8B,8BAErC;AAHQ,EAAC,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,/DAGjE,QAAQ,SAAC,aAAa,LAG1B,eAAe,SAAC,OAAO,EAAE,EAAC;GANsD,EAAE,UAAU,EAAC,CAAC,EAAC,pBAM1D,EAAE,IAAI,EAAC,iBAG5C,eAAe,SAAC,cAAc,EAAE,EAAC,WAAW,EAAE,IAAI;AAAC,gCAGnD,MAAM;AAAuD,gCAG7D,KAAK;AAAM;AAEK,IA+BnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACA;AACA,cAFC,bAAA,CA/C+B,UAAU,GA+CzC;AAEK;AACG,IAoBiC,wCAAU;AACrC,IAtBf;AAC4B,QAD5B;AACiB,uCA6BhB;AAGuB,QATtB,mBAAa,GAAqB,KAAK,CAAC;AAEL;AACd,KAGtB;AAGC,KAkCymD;gBAnE1mD,SAAS,SAAC,lCAmEimD,gCA5CzmD,KAAK;gBAtBN,QAAQ,EAAE,1BAuBR;AAEH,IAID;EA7BoC,EAClC,QAAQ,EAAE,sBAAsB,wBAChC,sDAEA,MAAM,EAAE,CAAC,eAAe,CAAC;;;;;;;;;mBAFa;wCAGtC;AAAI,EAAE;GACJ,OAAO,EAAE,wBAAwB,LACjC;2BAAwC,EAAE;WAAwB,PAClE;QAA2C,EAAE;MAA2B,oBACxE;aAAkB,EAAE,YAAY;;kBAChC,MAAM,EAAE,SAAS;6BAClB;yBACD,UAAU,EAAE,CAAC,oBAAoB,CAAC,wBAAwB,CAAC,pCAC3D,SAAS,EAAE;4BACT,EAAC;MAAO,EAAE,UAAU,EAAE,UACtB;AADiC,EAAE,oBAAoB,EAAC,vBACvD,OAAO,EAAE,UAAU,EAAE;EAAW,EAAE,oBAAoB,EAAC;kBACzD;;;OACD,aAAa,EAAE,iBAAiB,CAAC,IAAI,dACrC,eAAe;CAAE,uBAAuB,CAAC,MAAM;uBAChD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAWD;AACA,wBAFC,vBAAA,CATyC,UAAU,GASnD;AAGE;AAAgB,IAkBqB,sCAAU;AAElD,IADE,4BACc,GAAmB,EAC/B;AAAM,WAA8B;AACG,IACvC,UAAoC,EAClB,SAAe;AAElC,QAPD,YAME;AAAS,SAAH,GAAG,EAAE,iBAAiB,EAAE,UAAU,EAAE,SAAS,CAAC,SAErD,xDADC,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC;AAGa;AACV,KAHnC;AAEY,KAK2iF;gBAnCzjF,hBAmC0jF;EAnCjjF,SAAC,wBACT,QAAQ,EAAE,7CAkCskF,gBAnM1kF,cAAc,uBAqLjB,QAAQ;IApBqB,IAChC,QAAQ,EAAE,oBAAoB,wBAC9B,9DAkBa,gBAxKb,iBAAiB;AAGf,gBAEF,UAAU;SAmJV,MAAM,EAAE,CAAC,lBAlJF;GAkJiB,CAAC,JAhJlB,kBAoKJ,MAAM,SAAC,QAAQ;AACH,IAQjB;;;;;;;;;0WA/BsC,0EAGpC,IAAI,EAAE,6CACJ,OAAO,EAAE,sBAAsB,HAC/B,kBAAkB,EAAE,UAAU,2BAC9B,MAAM,EAAE,SAAS,oCAClB,0CACD,UAAU,EAAE,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,lCACzD,SAAS,EAAE,wEACT,EAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,kBAAkB,EAAC,vBACtD,EAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,kBAAkB,EAAC,uBACvD,gFACD,aAAa,EAAE,iBAAiB,CAAC,IAAI,dACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM,8EAChD;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAiBE;AAAC,mBADH,lBAAA,CAfuC,UAAU;AAEjD;AC7LD;AAAC;AACA;AACA;AACA;AACA;AACA;AAMD;AACA;AAGI,IAIgC,kCAAc;AAGtC,IAVZ;AACsB;AAEhB,KAKL;AAEiE;gBAVjE,SAAS,SAAC,oBACT,QAAQ,EAAE,wBAAwB,EAClC,IAAI,EAAE;+BACJ,QAAQ,EAAE,MAAM,SACjB,yCACD,MAAM,EAAE,CAAC,MAAM,CAAC,IACjB,8CAED;;;;;;;;;;;;;0BACA;AACA,kBAFC,jBAAA,CADmC,cAAc,GACjD;AAED;AACA;AAGI,IAIoC,sCAAkB;AAE7C,IATb;AAC0B;AAEhB,KAKT;AACkE;gBATlE,SAAS,SAAC,wBACT,QAAQ,EAAE,4BAA4B,FACtC,IAAI,EAAE;uBACJ,QAAQ,EAAE,MAAM,SACjB,yCACD,MAAM,EAAE,CAAC,MAAM,CAAC,IACjB,8CAED;;;;;;;;;;;;;0BACA;AAAC,sBADA,rBAAA,CADuC,kBAAkB;AAEpD;AChCN;AAAC;AACA;AACA;AACA;AACA;AACA;AAGD;AAAI,IAeJ;AAGE,KAgC8B;AACJ;gBApC3B,QAAQ,SAAC,uBACR,OAAO,EAAE;kBACP,eAAe,gBACf,YAAY,6BACZ,YAAY,0BACZ,eAAe,uBACf,gBAAgB,yBAChB;UAAa;UACb,eAAe;oBAChB;;KACD,OAAO,EAAE;gBACP;IAAe,QACf;GAAoB,WACpB;OAAkB;mBAClB,OAAO;oCACP,YAAY,gCACZ,UAAU,uBACV,cAAc,wBACd,kBAAkB;iBAClB;EAAa;YACb;IAAc;WACf;yBACD;SAAY,EAAE;kBACZ,oBAAoB,GACpB,kBAAkB;CAClB,OAAO;;GACP,YAAY;sBACZ;MAAU;MACV,cAAc;mBACd,kBAAkB,kBAClB,aAAa;qBACb;KAAc;IACf;;GACD,SAAS,EAAE,CAAC;oBAAyB,EAAE,FACxC;eADyD,CAAC;;kCAE5B;oBAAC,JAnChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAAK;AAAC;ACvBN;AACE;AAAC;AAAI;AACA;AAEH;AAAG,GAEJ;AAIG;ACVN;AACA;AAAC,GACE;AACH;AAES;AAAI;AAAC;AAAiR","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header mat-focus-indicator',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  /** Whether the ripple should be disabled. */\n  @Input() disableRipple: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Focuses the step header. */\n  focus() {\n    this._focusMonitor.focusVia(this._elementRef, 'program');\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  _getDefaultTextForState(state: StepState): string {\n    if (state == 'number') {\n      return `${this.index + 1}`;\n    }\n    if (state == 'edit') {\n      return 'create';\n    }\n    if (state == 'error') {\n      return 'warning';\n    }\n    return state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [\n    {provide: ErrorStateMatcher, useExisting: MatStep},\n    {provide: CdkStep, useExisting: MatStep},\n  ],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({selector: '[matStepper]', providers: [{provide: CdkStepper, useExisting: MatStepper}]})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep, {descendants: true}) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon, {descendants: true}) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether ripples should be disabled for the step headers. */\n  @Input() disableRipple: boolean;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._stateChanged();\n    });\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatHorizontalStepper},\n    {provide: CdkStepper, useExisting: MatHorizontalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n\n@Component({\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [\n    {provide: MatStepper, useExisting: MatVerticalStepper},\n    {provide: CdkStepper, useExisting: MatVerticalStepper}\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {Directive} from '@angular/core';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperNext extends CdkStepperNext {\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  },\n  inputs: ['type']\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper-module';\nexport * from './step-label';\nexport * from './stepper';\nexport * from './stepper-button';\nexport * from './step-header';\nexport * from './stepper-intl';\nexport * from './stepper-animations';\nexport * from './stepper-icon';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}