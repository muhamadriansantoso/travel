/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef } from '@angular/core';
import { NgWizardStep } from '../../utils/interfaces';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class NgWizardStepComponent extends NgWizardStep {
}
NgWizardStepComponent.ɵfac = function NgWizardStepComponent_Factory(t) { return ɵNgWizardStepComponent_BaseFactory(t || NgWizardStepComponent); };
NgWizardStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgWizardStepComponent, selectors: [["ng-wizard-step"]], features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: NgWizardStep, useExisting: forwardRef(( /**
                     * @return {?}
                     */() => NgWizardStepComponent)) }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, "tab-pane", "step-content", 2, "display", "block"]], template: function NgWizardStepComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""] });
const ɵNgWizardStepComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NgWizardStepComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardStepComponent, [{
        type: Component,
        args: [{
                selector: 'ng-wizard-step',
                template: "<div class=\"tab-pane step-content\" style=\"display: block\">\n    <ng-content></ng-content>\n</div>",
                providers: [
                    { provide: NgWizardStep, useExisting: forwardRef(( /**
                             * @return {?}
                             */() => NgWizardStepComponent)) }
                ],
                styles: [""]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctd2l6YXJkLXN0ZXAuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovbmctd2l6YXJkL2xpYi9jb3JlL3dpemFyZC1zdGVwL25nLXdpemFyZC1zdGVwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7O0FBVXRELE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxZQUFZO0FBQ3ZEO2lEQVRDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsZ0JBQWdCLGtCQUMxQjsrRkFBOEMsa0JBRTlDLFNBQVMsRUFBRSxzQkFDVCxFQUFFLE9BQU87QUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFVBQVU7O2dDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQXFCLEVBQUMsRUFBRSxrQkFDaEYsNENBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBVkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBVUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBUkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ1dpemFyZFN0ZXAgfSBmcm9tICcuLi8uLi91dGlscy9pbnRlcmZhY2VzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmctd2l6YXJkLXN0ZXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vbmctd2l6YXJkLXN0ZXAuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9uZy13aXphcmQtc3RlcC5jb21wb25lbnQuY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHsgcHJvdmlkZTogTmdXaXphcmRTdGVwLCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBOZ1dpemFyZFN0ZXBDb21wb25lbnQpIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZ1dpemFyZFN0ZXBDb21wb25lbnQgZXh0ZW5kcyBOZ1dpemFyZFN0ZXAge1xufVxuIl19