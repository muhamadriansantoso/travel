/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { STEP_STATE, STEP_STATUS } from './enums';
import { Input, HostBinding } from '@angular/core';
/**
 * @record
 */
import * as ɵngcc0 from '@angular/core';
export function Language() { }
if (false) {
    /** @type {?|undefined} */
    Language.prototype.next;
    /** @type {?|undefined} */
    Language.prototype.previous;
}
/**
 * @record
 */
export function ToolbarSettings() { }
if (false) {
    /** @type {?|undefined} */
    ToolbarSettings.prototype.toolbarPosition;
    /** @type {?|undefined} */
    ToolbarSettings.prototype.toolbarButtonPosition;
    /** @type {?|undefined} */
    ToolbarSettings.prototype.showNextButton;
    /** @type {?|undefined} */
    ToolbarSettings.prototype.showPreviousButton;
    /** @type {?|undefined} */
    ToolbarSettings.prototype.toolbarExtraButtons;
}
/**
 * @record
 */
export function ToolbarButton() { }
if (false) {
    /** @type {?} */
    ToolbarButton.prototype.text;
    /** @type {?} */
    ToolbarButton.prototype.class;
    /** @type {?|undefined} */
    ToolbarButton.prototype.event;
}
/**
 * @record
 */
export function AnchorSettings() { }
if (false) {
    /** @type {?|undefined} */
    AnchorSettings.prototype.anchorClickable;
    /** @type {?|undefined} */
    AnchorSettings.prototype.enableAllAnchors;
    /** @type {?|undefined} */
    AnchorSettings.prototype.markDoneStep;
    /** @type {?|undefined} */
    AnchorSettings.prototype.markAllPreviousStepsAsDone;
    /** @type {?|undefined} */
    AnchorSettings.prototype.removeDoneStepOnNavigateBack;
    /** @type {?|undefined} */
    AnchorSettings.prototype.enableAnchorOnDoneStep;
}
/**
 * @record
 */
export function NgWizardConfig() { }
if (false) {
    /** @type {?|undefined} */
    NgWizardConfig.prototype.selected;
    /** @type {?|undefined} */
    NgWizardConfig.prototype.keyNavigation;
    /** @type {?|undefined} */
    NgWizardConfig.prototype.cycleSteps;
    /** @type {?|undefined} */
    NgWizardConfig.prototype.lang;
    /** @type {?|undefined} */
    NgWizardConfig.prototype.toolbarSettings;
    /** @type {?|undefined} */
    NgWizardConfig.prototype.anchorSettings;
    /** @type {?|undefined} */
    NgWizardConfig.prototype.theme;
}
/**
 * @abstract
 */
export class NgWizardStep {
    /**
     * @return {?}
     */
    get hidden() {
        return this.status != STEP_STATUS.active;
    }
}
NgWizardStep.ɵfac = function NgWizardStep_Factory(t) { return new (t || NgWizardStep)(); };
NgWizardStep.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgWizardStep, hostVars: 1, hostBindings: function NgWizardStep_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("hidden", ctx.hidden);
    } }, inputs: { title: "title", description: "description", state: "state" } });
NgWizardStep.propDecorators = {
    title: [{ type: Input }],
    description: [{ type: Input }],
    state: [{ type: Input }],
    hidden: [{ type: HostBinding, args: ['hidden',] }]
};

if (false) {
    /** @type {?} */
    NgWizardStep.prototype.index;
    /** @type {?} */
    NgWizardStep.prototype.title;
    /** @type {?} */
    NgWizardStep.prototype.description;
    /** @type {?} */
    NgWizardStep.prototype.state;
    /** @type {?} */
    NgWizardStep.prototype.initialState;
    /** @type {?} */
    NgWizardStep.prototype.status;
    /** @type {?} */
    NgWizardStep.prototype.initialStatus;
}
/**
 * @record
 */
export function StepChangedArgs() { }
if (false) {
    /** @type {?} */
    StepChangedArgs.prototype.step;
    /** @type {?} */
    StepChangedArgs.prototype.previousStep;
    /** @type {?} */
    StepChangedArgs.prototype.direction;
    /** @type {?} */
    StepChangedArgs.prototype.position;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZXMiOlsibmc6L25nLXdpemFyZC9saWIvdXRpbHMvaW50ZXJmYWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUEyRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQzNILE9BQU8sRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25EO0FBQ0c7QUFBVzs7QUFBZCw4QkFHQztBQUNEO0FBQ1k7QUFDSixJQUxKLHdCQUFjO0FBQ2xCO0FBR0ssSUFIRCw0QkFBa0I7QUFDdEI7QUFDQTtBQUNHO0FBQVc7QUFBZCxxQ0FNQztBQUNEO0FBQ1k7QUFDRixJQVJOLDBDQUFtQztBQUFDO0FBQ3BDLElBQUEsZ0RBQWdEO0FBQUM7QUFDcEMsSUFBYix5Q0FBeUI7QUFBQztBQUMxQixJQUFBLDZDQUE2QjtBQUFDO0FBQ2xDLElBQUksOENBQXNDO0FBQUM7QUFBRTtBQUFJO0FBQVc7QUFHNUQsbUNBSUM7QUFDRDtBQUNZO0FBQXFCLElBTDdCLDZCQUFhO0FBQ2pCO0FBQ0UsSUFERSw4QkFBYztBQUNsQjtBQUdJLElBSEEsOEJBQW1CO0FBQ3ZCO0FBQ0E7QUFDRztBQUFXO0FBQWQsb0NBT0M7QUFDRDtBQUNZO0FBQ0gsSUFUTCx5Q0FBMEI7QUFBQztBQUErQixJQUMxRCwwQ0FBMkI7QUFBQztBQUErQixJQUMzRCxzQ0FBdUI7QUFBQztBQUNiLElBQVgsb0RBQXFDO0FBQUM7QUFBK0IsSUFDckUsc0RBQXVDO0FBQUM7QUFBK0IsSUFDdkUsZ0RBQWlDO0FBQUM7QUFBRTtBQUFJO0FBQVc7QUFHdkQsb0NBUUM7QUFDRDtBQUNZO0FBQ04sSUFWRixrQ0FBa0I7QUFBQztBQUErQixJQUNsRCx1Q0FBd0I7QUFBQztBQUErQixJQUN4RCxvQ0FBcUI7QUFBQztBQUErQixJQUNyRCw4QkFBZ0I7QUFBQztBQUErQixJQUNoRCx5Q0FBa0M7QUFDdEM7QUFBK0IsSUFBM0Isd0NBQWdDO0FBQ3BDO0FBQStCLElBQTNCLCtCQUFjO0FBQUM7QUFBRTtBQUFJO0FBQWE7QUFHdEMsTUFBTSxPQUFnQixZQUFZO0FBQ2xDO0FBQVE7QUFFRDtBQUNMLElBWUUsSUFDVyxNQUFNO0FBQUssUUFDbEIsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUM7QUFDakQsSUFBSSxDQUFDO0FBQ0w7Ozs7bUZBQUM7QUFDRDtBQUMrQixvQkFuQjFCLEtBQUs7QUFDUiwwQkFFRyxLQUFLO0FBQ1Isb0JBRUcsS0FBSztBQUNSLHFCQU1HLFdBQVcsU0FBQyxRQUFRO0FBQ3JCO0FBQUU7QUFBQztBQUFhO0FBQ2QsSUFqQkYsNkJBQWM7QUFDbEI7QUFFTyxJQURILDZCQUNjO0FBQ2xCO0FBRU8sSUFESCxtQ0FDb0I7QUFDeEI7QUFFTyxJQURILDZCQUNtQjtBQUN2QjtBQUFxQixJQUFqQixvQ0FBMEI7QUFDOUI7QUFDb0IsSUFBaEIsOEJBQXFCO0FBQ3pCO0FBQXFCLElBQWpCLHFDQUE0QjtBQUNoQztBQUNDO0FBQUk7QUFBVztBQU1oQixxQ0FLQztBQUNEO0FBQWE7QUFBcUIsSUFMOUIsK0JBQW1CO0FBQ3ZCO0FBQXFCLElBQWpCLHVDQUEyQjtBQUMvQjtBQUFxQixJQUFqQixvQ0FBa0I7QUFDdEI7QUFDQSxJQURJLG1DQUFnQjs7QUFuRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBR0EsQUFGQSxBQUFBLEFBQ0EsQUFBQSxBQUdBLEFBTUEsQUFMQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUdBLEFBSUEsQUFIQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFHQSxBQU9BLEFBTkEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBR0EsQUFRQSxBQVBBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQWdCQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFoQkEsQUFBQSxBQUdBLEFBQUEsQUFHQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFmQSxBQUFBLEFBRUEsQUFDQSxBQUVBLEFBQ0EsQUFFQSxBQUNBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBUUEsQUFLQSxBQUpBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUT09MQkFSX1BPU0lUSU9OLCBUT09MQkFSX0JVVFRPTl9QT1NJVElPTiwvKiBUUkFOU0lUSU9OX0VGRkVDVCwqLyBUSEVNRSwgU1RFUF9TVEFURSwgU1RFUF9TVEFUVVMgfSBmcm9tICcuL2VudW1zJztcbmltcG9ydCB7IElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIExhbmd1YWdlIHtcbiAgICBuZXh0Pzogc3RyaW5nO1xuICAgIHByZXZpb3VzPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRvb2xiYXJTZXR0aW5ncyB7XG4gICAgdG9vbGJhclBvc2l0aW9uPzogVE9PTEJBUl9QT1NJVElPTjsgLy8gbm9uZSwgdG9wLCBib3R0b20sIGJvdGhcbiAgICB0b29sYmFyQnV0dG9uUG9zaXRpb24/OiBUT09MQkFSX0JVVFRPTl9QT1NJVElPTjsgLy8gc3RhcnQsIGVuZFxuICAgIHNob3dOZXh0QnV0dG9uPzogYm9vbGVhbjsgLy8gc2hvdy9oaWRlIGEgTmV4dCBidXR0b25cbiAgICBzaG93UHJldmlvdXNCdXR0b24/OiBib29sZWFuOyAvLyBzaG93L2hpZGUgYSBQcmV2aW91cyBidXR0b25cbiAgICB0b29sYmFyRXh0cmFCdXR0b25zPzogVG9vbGJhckJ1dHRvbltdOyAvLyBFeHRyYSBidXR0b25zIHRvIHNob3cgb24gdG9vbGJhciwgYXJyYXkgb2YgaW5wdXQvYnV0dG9ucyBlbGVtZW50c1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRvb2xiYXJCdXR0b24ge1xuICAgIHRleHQ6IHN0cmluZztcbiAgICBjbGFzczogc3RyaW5nO1xuICAgIGV2ZW50PzogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBbmNob3JTZXR0aW5ncyB7XG4gICAgYW5jaG9yQ2xpY2thYmxlPzogYm9vbGVhbjsgLy8gRW5hYmxlL0Rpc2FibGUgYW5jaG9yIG5hdmlnYXRpb25cbiAgICBlbmFibGVBbGxBbmNob3JzPzogYm9vbGVhbjsgLy8gQWN0aXZhdGVzIGFsbCBhbmNob3JzIGNsaWNrYWJsZSBhbGwgdGltZXNcbiAgICBtYXJrRG9uZVN0ZXA/OiBib29sZWFuOyAvLyBBZGQgZG9uZSBjc3NcbiAgICBtYXJrQWxsUHJldmlvdXNTdGVwc0FzRG9uZT86IGJvb2xlYW47IC8vIFdoZW4gYSBzdGVwIHNlbGVjdGVkLCBhbGwgcHJldmlvdXMgc3RlcHMgYXJlIG1hcmtlZCBkb25lXG4gICAgcmVtb3ZlRG9uZVN0ZXBPbk5hdmlnYXRlQmFjaz86IGJvb2xlYW47IC8vIFdoaWxlIG5hdmlnYXRlIGJhY2sgZG9uZSBzdGVwIGFmdGVyIGFjdGl2ZSBzdGVwIHdpbGwgYmUgY2xlYXJlZFxuICAgIGVuYWJsZUFuY2hvck9uRG9uZVN0ZXA/OiBib29sZWFuOyAvLyBFbmFibGUvRGlzYWJsZSB0aGUgZG9uZSBzdGVwcyBuYXZpZ2F0aW9uXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmdXaXphcmRDb25maWcge1xuICAgIHNlbGVjdGVkPzogbnVtYmVyOyAvLyBJbml0aWFsIHNlbGVjdGVkIHN0ZXAsIDAgPSBmaXJzdCBzdGVwXG4gICAga2V5TmF2aWdhdGlvbj86IGJvb2xlYW47IC8vIEVuYWJsZS9EaXNhYmxlIGtleWJvYXJkIG5hdmlnYXRpb24obGVmdCBhbmQgcmlnaHQga2V5cyBhcmUgdXNlZCBpZiBlbmFibGVkKVxuICAgIGN5Y2xlU3RlcHM/OiBib29sZWFuOyAvLyBBbGxvd3MgdG8gY3ljbGUgdGhlIG5hdmlnYXRpb24gb2Ygc3RlcHNcbiAgICBsYW5nPzogTGFuZ3VhZ2U7IC8vIExhbmd1YWdlIHZhcmlhYmxlcyBmb3IgYnV0dG9uXG4gICAgdG9vbGJhclNldHRpbmdzPzogVG9vbGJhclNldHRpbmdzO1xuICAgIGFuY2hvclNldHRpbmdzPzogQW5jaG9yU2V0dGluZ3M7XG4gICAgdGhlbWU/OiBUSEVNRTsgLy8gdGhlbWUgZm9yIHRoZSB3aXphcmQsIHJlbGF0ZWQgY3NzIG5lZWQgdG8gaW5jbHVkZSBmb3Igb3RoZXIgdGhhbiBkZWZhdWx0IHRoZW1lXG59XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZ1dpemFyZFN0ZXAge1xuICAgIGluZGV4OiBudW1iZXI7XG5cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKVxuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKVxuICAgIHN0YXRlPzogU1RFUF9TVEFURTtcbiAgICBpbml0aWFsU3RhdGU/OiBTVEVQX1NUQVRFO1xuXG4gICAgc3RhdHVzPzogU1RFUF9TVEFUVVM7XG4gICAgaW5pdGlhbFN0YXR1cz86IFNURVBfU1RBVFVTO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdoaWRkZW4nKVxuICAgIHB1YmxpYyBnZXQgaGlkZGVuKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0dXMgIT0gU1RFUF9TVEFUVVMuYWN0aXZlO1xuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBTdGVwQ2hhbmdlZEFyZ3Mge1xuICAgIHN0ZXA6IE5nV2l6YXJkU3RlcCxcbiAgICBwcmV2aW91c1N0ZXA6IE5nV2l6YXJkU3RlcCxcbiAgICBkaXJlY3Rpb246IHN0cmluZyxcbiAgICBwb3NpdGlvbjogc3RyaW5nXG59XG4iXX0=