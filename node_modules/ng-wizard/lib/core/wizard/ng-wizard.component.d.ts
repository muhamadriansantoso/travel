import { AfterContentInit, OnDestroy, EventEmitter, QueryList } from '@angular/core';
import { Subscription } from 'rxjs';
import { NgWizardService } from '../ng-wizard.service';
import { NgWizardConfig, NgWizardStep, ToolbarButton, StepChangedArgs } from '../../utils/interfaces';
import { THEME } from '../../utils/enums';
import * as ɵngcc0 from '@angular/core';
export declare class NgWizardComponent implements OnDestroy, AfterContentInit {
    private ngService;
    steps: QueryList<NgWizardStep>;
    _pConfig: NgWizardConfig;
    pConfig: NgWizardConfig;
    config: NgWizardConfig;
    stepChanged: EventEmitter<StepChangedArgs>;
    themeChanged: EventEmitter<THEME>;
    reseted: EventEmitter<void>;
    styles: {
        main?: string;
        step?: string;
        previousButton?: string;
        nextButton?: string;
        toolbarTop?: string;
        toolbarBottom?: string;
    };
    showToolbarTop: boolean;
    showPreviousButton: boolean;
    showNextButton: boolean;
    showToolbarBottom: boolean;
    showExtraButtons: boolean;
    current_index: number;
    currentStep: NgWizardStep;
    resetWizardWatcher: Subscription;
    showNextStepWatcher: Subscription;
    showPreviousStepWatcher: Subscription;
    setThemeWatcher: Subscription;
    constructor(ngService: NgWizardService);
    ngAfterContentInit(): void;
    _init(): void;
    _initSteps(): void;
    _backupStepStates(): void;
    _restoreStepStates(): void;
    _initStyles(): void;
    _setToolbar(): void;
    _setEvents(): void;
    _getStepCssClass(selectedStep: NgWizardStep): string;
    _showSelectedStep(event: Event, selectedStep: NgWizardStep): boolean;
    _showNextStep(event?: Event): void;
    _showPreviousStep(event?: Event): void;
    _showStep(index: number): void;
    _loadStepContent(selectedStep: NgWizardStep): void;
    _setAnchor(selectedStep: NgWizardStep): void;
    _setButtons(index: number): void;
    _extraButtonClicked(button: ToolbarButton): void;
    _keyNav(event: KeyboardEvent): void;
    _setTheme(theme: THEME): boolean;
    _reset(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgWizardComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgWizardComponent, "ng-wizard", never, { "pConfig": "config"; }, { "stepChanged": "stepChanged"; "themeChanged": "themeChanged"; "reseted": "reseted"; }, ["steps"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctd2l6YXJkLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuZy13aXphcmQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBRdWVyeUxpc3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE5nV2l6YXJkU2VydmljZSB9IGZyb20gJy4uL25nLXdpemFyZC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTmdXaXphcmRDb25maWcsIE5nV2l6YXJkU3RlcCwgVG9vbGJhckJ1dHRvbiwgU3RlcENoYW5nZWRBcmdzIH0gZnJvbSAnLi4vLi4vdXRpbHMvaW50ZXJmYWNlcyc7XHJcbmltcG9ydCB7IFRIRU1FIH0gZnJvbSAnLi4vLi4vdXRpbHMvZW51bXMnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ1dpemFyZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgQWZ0ZXJDb250ZW50SW5pdCB7XHJcbiAgICBwcml2YXRlIG5nU2VydmljZTtcclxuICAgIHN0ZXBzOiBRdWVyeUxpc3Q8TmdXaXphcmRTdGVwPjtcclxuICAgIF9wQ29uZmlnOiBOZ1dpemFyZENvbmZpZztcclxuICAgIHBDb25maWc6IE5nV2l6YXJkQ29uZmlnO1xyXG4gICAgY29uZmlnOiBOZ1dpemFyZENvbmZpZztcclxuICAgIHN0ZXBDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8U3RlcENoYW5nZWRBcmdzPjtcclxuICAgIHRoZW1lQ2hhbmdlZDogRXZlbnRFbWl0dGVyPFRIRU1FPjtcclxuICAgIHJlc2V0ZWQ6IEV2ZW50RW1pdHRlcjx2b2lkPjtcclxuICAgIHN0eWxlczoge1xyXG4gICAgICAgIG1haW4/OiBzdHJpbmc7XHJcbiAgICAgICAgc3RlcD86IHN0cmluZztcclxuICAgICAgICBwcmV2aW91c0J1dHRvbj86IHN0cmluZztcclxuICAgICAgICBuZXh0QnV0dG9uPzogc3RyaW5nO1xyXG4gICAgICAgIHRvb2xiYXJUb3A/OiBzdHJpbmc7XHJcbiAgICAgICAgdG9vbGJhckJvdHRvbT86IHN0cmluZztcclxuICAgIH07XHJcbiAgICBzaG93VG9vbGJhclRvcDogYm9vbGVhbjtcclxuICAgIHNob3dQcmV2aW91c0J1dHRvbjogYm9vbGVhbjtcclxuICAgIHNob3dOZXh0QnV0dG9uOiBib29sZWFuO1xyXG4gICAgc2hvd1Rvb2xiYXJCb3R0b206IGJvb2xlYW47XHJcbiAgICBzaG93RXh0cmFCdXR0b25zOiBib29sZWFuO1xyXG4gICAgY3VycmVudF9pbmRleDogbnVtYmVyO1xyXG4gICAgY3VycmVudFN0ZXA6IE5nV2l6YXJkU3RlcDtcclxuICAgIHJlc2V0V2l6YXJkV2F0Y2hlcjogU3Vic2NyaXB0aW9uO1xyXG4gICAgc2hvd05leHRTdGVwV2F0Y2hlcjogU3Vic2NyaXB0aW9uO1xyXG4gICAgc2hvd1ByZXZpb3VzU3RlcFdhdGNoZXI6IFN1YnNjcmlwdGlvbjtcclxuICAgIHNldFRoZW1lV2F0Y2hlcjogU3Vic2NyaXB0aW9uO1xyXG4gICAgY29uc3RydWN0b3IobmdTZXJ2aWNlOiBOZ1dpemFyZFNlcnZpY2UpO1xyXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQ7XHJcbiAgICBfaW5pdCgpOiB2b2lkO1xyXG4gICAgX2luaXRTdGVwcygpOiB2b2lkO1xyXG4gICAgX2JhY2t1cFN0ZXBTdGF0ZXMoKTogdm9pZDtcclxuICAgIF9yZXN0b3JlU3RlcFN0YXRlcygpOiB2b2lkO1xyXG4gICAgX2luaXRTdHlsZXMoKTogdm9pZDtcclxuICAgIF9zZXRUb29sYmFyKCk6IHZvaWQ7XHJcbiAgICBfc2V0RXZlbnRzKCk6IHZvaWQ7XHJcbiAgICBfZ2V0U3RlcENzc0NsYXNzKHNlbGVjdGVkU3RlcDogTmdXaXphcmRTdGVwKTogc3RyaW5nO1xyXG4gICAgX3Nob3dTZWxlY3RlZFN0ZXAoZXZlbnQ6IEV2ZW50LCBzZWxlY3RlZFN0ZXA6IE5nV2l6YXJkU3RlcCk6IGJvb2xlYW47XHJcbiAgICBfc2hvd05leHRTdGVwKGV2ZW50PzogRXZlbnQpOiB2b2lkO1xyXG4gICAgX3Nob3dQcmV2aW91c1N0ZXAoZXZlbnQ/OiBFdmVudCk6IHZvaWQ7XHJcbiAgICBfc2hvd1N0ZXAoaW5kZXg6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBfbG9hZFN0ZXBDb250ZW50KHNlbGVjdGVkU3RlcDogTmdXaXphcmRTdGVwKTogdm9pZDtcclxuICAgIF9zZXRBbmNob3Ioc2VsZWN0ZWRTdGVwOiBOZ1dpemFyZFN0ZXApOiB2b2lkO1xyXG4gICAgX3NldEJ1dHRvbnMoaW5kZXg6IG51bWJlcik6IHZvaWQ7XHJcbiAgICBfZXh0cmFCdXR0b25DbGlja2VkKGJ1dHRvbjogVG9vbGJhckJ1dHRvbik6IHZvaWQ7XHJcbiAgICBfa2V5TmF2KGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZDtcclxuICAgIF9zZXRUaGVtZSh0aGVtZTogVEhFTUUpOiBib29sZWFuO1xyXG4gICAgX3Jlc2V0KCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG59XHJcbiJdfQ==