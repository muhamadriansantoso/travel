(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),exports, require('@angular/core'), require('rxjs'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ng-wizard', ['@angular/core','@angular/common','exports', '@angular/core', 'rxjs', '@angular/common'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common,global['ng-wizard'] = {}, global.ng.core, global.rxjs, global.ng.common));
}(this, function (ɵngcc0,ɵngcc1,exports, core, rxjs, common) { 
var _c0 = ["*"];
function NgWizardComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    var _r971 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_li_2_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r971); var step_r968 = ctx.$implicit; var ctx_r970 = ɵngcc0.ɵɵnextContext(); return ctx_r970._showSelectedStep($event, step_r968); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelement(3, "br");
    ɵngcc0.ɵɵelementStart(4, "small");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var step_r968 = ctx.$implicit;
    var i_r969 = ctx.index;
    var ctx_r965 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r965._getStepCssClass(step_r968));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("href", "#step-", i_r969, "", ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(step_r968.title);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(step_r968.description);
} }
function NgWizardComponent_div_3_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r976 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_3_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r976); var ctx_r975 = ɵngcc0.ɵɵnextContext(2); return ctx_r975._showPreviousStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r972 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r972.styles.previousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r972.config.lang.previous);
} }
function NgWizardComponent_div_3_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r978 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_3_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r978); var ctx_r977 = ɵngcc0.ɵɵnextContext(2); return ctx_r977._showNextStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r973 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r973.styles.nextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r973.config.lang.next);
} }
function NgWizardComponent_div_3_div_4_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r983 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_3_div_4_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r983); var button_r980 = ctx.$implicit; var ctx_r982 = ɵngcc0.ɵɵnextContext(3); return ctx_r982._extraButtonClicked(button_r980); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var button_r980 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", button_r980.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(button_r980.text);
} }
function NgWizardComponent_div_3_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_3_div_4_button_1_Template, 2, 2, "button", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r974 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r974.config.toolbarSettings.toolbarExtraButtons);
} }
function NgWizardComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_3_button_2_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_button_3_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_3_div_4_Template, 2, 1, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r966 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r966.styles.toolbarTop);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r966.showPreviousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r966.showNextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r966.showExtraButtons);
} }
function NgWizardComponent_div_6_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r988 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_6_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r988); var ctx_r987 = ɵngcc0.ɵɵnextContext(2); return ctx_r987._showPreviousStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r984 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r984.styles.previousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r984.config.lang.previous);
} }
function NgWizardComponent_div_6_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r990 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_6_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r990); var ctx_r989 = ɵngcc0.ɵɵnextContext(2); return ctx_r989._showNextStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r985 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r985.styles.nextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r985.config.lang.next);
} }
function NgWizardComponent_div_6_div_4_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r995 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_6_div_4_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r995); var button_r992 = ctx.$implicit; var ctx_r994 = ɵngcc0.ɵɵnextContext(3); return ctx_r994._extraButtonClicked(button_r992); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var button_r992 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", button_r992.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(button_r992.text);
} }
function NgWizardComponent_div_6_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_6_div_4_button_1_Template, 2, 2, "button", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r986 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r986.config.toolbarSettings.toolbarExtraButtons);
} }
function NgWizardComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_6_button_2_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_6_button_3_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_6_div_4_Template, 2, 1, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r967 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r967.styles.toolbarBottom);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r967.showPreviousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r967.showNextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r967.showExtraButtons);
} }
'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {string} */
    var TOOLBAR_POSITION = {
        none: 'none',
        top: 'top',
        bottom: 'bottom',
        both: 'both',
    };
    /** @enum {string} */
    var TOOLBAR_BUTTON_POSITION = {
        start: 'start',
        end: 'end',
    };
    /** @enum {string} */
    var THEME = {
        default: 'default',
        arrows: 'arrows',
        circles: 'circles',
        dots: 'dots',
    };
    /** @enum {string} */
    var STEP_STATE = {
        normal: 'normal',
        disabled: 'disabled',
        error: 'error',
        hidden: 'hidden',
    };
    /** @enum {string} */
    var STEP_STATUS = {
        untouched: 'untouched',
        done: 'done',
        active: 'active',
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var DEFAULT_CONFIG = {
        selected: 0,
        keyNavigation: true,
        cycleSteps: false,
        lang: {
            next: 'Next',
            previous: 'Previous'
        },
        toolbarSettings: {
            toolbarPosition: TOOLBAR_POSITION.bottom,
            toolbarButtonPosition: TOOLBAR_BUTTON_POSITION.end,
            showNextButton: true,
            showPreviousButton: true,
            toolbarExtraButtons: []
        },
        anchorSettings: {
            anchorClickable: true,
            enableAllAnchors: false,
            markDoneStep: true,
            markAllPreviousStepsAsDone: true,
            removeDoneStepOnNavigateBack: false,
            enableAnchorOnDoneStep: true
        },
        theme: THEME.default,
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var NG_WIZARD_CONFIG_TOKEN = new core.InjectionToken('ngWizardCustom.config');

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6
    // Merge a `source` object to a `target` recursively
    /**
     * @param {?} target
     * @param {?} source
     * @return {?}
     */
    function merge(target, source) {
        var e_1, _a;
        try {
            // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties
            for (var _b = __values(Object.keys(source)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (source[key] instanceof Object && key in target) {
                    Object.assign(source[key], merge(target[key], source[key]));
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // Join `target` and modified `source`
        Object.assign(target || {}, source);
        return target;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgWizardService = /** @class */ (function () {
        function NgWizardService(config) {
            this.config = config;
            this.defaultConfig = __assign({}, DEFAULT_CONFIG);
            if (this.config) {
                this.defaultConfig = merge(this.defaultConfig, this.config);
            }
            // Observable sources
            this.resetWizard = new rxjs.Subject();
            this.showNextStep = new rxjs.Subject();
            this.showPreviousStep = new rxjs.Subject();
            this.setTheme = new rxjs.Subject();
            // Observable streams
            this.resetWizard$ = this.resetWizard.asObservable();
            this.showNextStep$ = this.showNextStep.asObservable();
            this.showPreviousStep$ = this.showPreviousStep.asObservable();
            this.setTheme$ = this.setTheme.asObservable();
        }
        /**
         * @return {?}
         */
        NgWizardService.prototype.getDefaultConfig = /**
         * @return {?}
         */
        function () {
            return __assign({}, this.defaultConfig);
        };
        /**
         * @return {?}
         */
        NgWizardService.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.resetWizard.next();
        };
        /**
         * @return {?}
         */
        NgWizardService.prototype.next = /**
         * @return {?}
         */
        function () {
            this.showNextStep.next();
        };
        /**
         * @return {?}
         */
        NgWizardService.prototype.previous = /**
         * @return {?}
         */
        function () {
            this.showPreviousStep.next();
        };
        /**
         * @param {?} theme
         * @return {?}
         */
        NgWizardService.prototype.theme = /**
         * @param {?} theme
         * @return {?}
         */
        function (theme) {
            this.setTheme.next(theme);
        };
        /** @nocollapse */
        NgWizardService.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [NG_WIZARD_CONFIG_TOKEN,] }] }
        ]; };
        /** @nocollapse */ NgWizardService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function NgWizardService_Factory() { return new NgWizardService(core.ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8)); }, token: NgWizardService, providedIn: "root" });
NgWizardService.ɵfac = function NgWizardService_Factory(t) { return new (t || NgWizardService)(ɵngcc0.ɵɵinject(NG_WIZARD_CONFIG_TOKEN, 8)); };
NgWizardService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgWizardService, factory: function (t) { return NgWizardService.ɵfac(t); }, providedIn: 'root' });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardService, [{
        type: core.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [NG_WIZARD_CONFIG_TOKEN]
            }] }]; }, null); })();
        return NgWizardService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @abstract
     */
    var NgWizardStep = /** @class */ (function () {
        function NgWizardStep() {
        }
        Object.defineProperty(NgWizardStep.prototype, "hidden", {
            get: /**
             * @return {?}
             */
            function () {
                return this.status != STEP_STATUS.active;
            },
            enumerable: true,
            configurable: true
        });
        NgWizardStep.propDecorators = {
            title: [{ type: core.Input }],
            description: [{ type: core.Input }],
            state: [{ type: core.Input }],
            hidden: [{ type: core.HostBinding, args: ['hidden',] }]
        };
NgWizardStep.ɵfac = function NgWizardStep_Factory(t) { return new (t || NgWizardStep)(); };
NgWizardStep.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgWizardStep, hostVars: 1, hostBindings: function NgWizardStep_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("hidden", ctx.hidden);
    } }, inputs: { title: "title", description: "description", state: "state" } });

        return NgWizardStep;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgWizardStepComponent = /** @class */ (function (_super) {
        __extends(NgWizardStepComponent, _super);
        function NgWizardStepComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
NgWizardStepComponent.ɵfac = function NgWizardStepComponent_Factory(t) { return ɵNgWizardStepComponent_BaseFactory(t || NgWizardStepComponent); };
NgWizardStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgWizardStepComponent, selectors: [["ng-wizard-step"]], features: [ɵngcc0.ɵɵProvidersFeature([
            { provide: NgWizardStep, useExisting: core.forwardRef(( /**
                     * @return {?}
                     */function () { return NgWizardStepComponent; })) }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, "tab-pane", "step-content", 2, "display", "block"]], template: function NgWizardStepComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, styles: [""] });
var ɵNgWizardStepComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(NgWizardStepComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardStepComponent, [{
        type: core.Component,
        args: [{
                selector: 'ng-wizard-step',
                template: "<div class=\"tab-pane step-content\" style=\"display: block\">\n    <ng-content></ng-content>\n</div>",
                providers: [
                    { provide: NgWizardStep, useExisting: core.forwardRef(( /**
                             * @return {?}
                             */function () { return NgWizardStepComponent; })) }
                ],
                styles: [""]
            }]
    }], null, null); })();
        return NgWizardStepComponent;
    }(NgWizardStep));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgWizardComponent = /** @class */ (function () {
        function NgWizardComponent(ngService) {
            this.ngService = ngService;
            this.stepChanged = new core.EventEmitter();
            this.themeChanged = new core.EventEmitter();
            this.reseted = new core.EventEmitter();
            this.styles = {};
            this.showToolbarTop = false;
            this.showPreviousButton = false;
            this.showNextButton = false;
            this.showToolbarBottom = false;
            this.showExtraButtons = false;
            this.current_index = null; // Active step index
        }
        Object.defineProperty(NgWizardComponent.prototype, "pConfig", {
            get: /**
             * @return {?}
             */
            function () {
                return this._pConfig || {};
            },
            set: /**
             * @param {?} config
             * @return {?}
             */
            function (config) {
                this._pConfig = config;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        NgWizardComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this._backupStepStates();
            this._init();
            // Set toolbar
            this._setToolbar();
            // Assign plugin events
            this._setEvents();
            this.resetWizardWatcher = this.ngService.resetWizard$
                .subscribe((/**
             * @return {?}
             */
            function () {
                _this._reset();
            }));
            this.showNextStepWatcher = this.ngService.showNextStep$
                .subscribe((/**
             * @return {?}
             */
            function () {
                _this._showNextStep();
            }));
            this.showPreviousStepWatcher = this.ngService.showPreviousStep$
                .subscribe((/**
             * @return {?}
             */
            function () {
                _this._showPreviousStep();
            }));
            this.setThemeWatcher = this.ngService.setTheme$
                .subscribe((/**
             * @param {?} theme
             * @return {?}
             */
            function (theme) {
                _this._setTheme(theme);
            }));
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._init = /**
         * @return {?}
         */
        function () {
            // set config
            /** @type {?} */
            var defaultConfig = this.ngService.getDefaultConfig();
            this.config = merge(defaultConfig, this.pConfig);
            // set step states
            this._initSteps();
            // Set the elements
            this._initStyles();
            // Show the initial step
            this._showStep(this.config.selected);
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._initSteps = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.steps.forEach((/**
             * @param {?} step
             * @param {?} index
             * @return {?}
             */
            function (step, index) {
                step.index = index;
                step.status = step.status || STEP_STATUS.untouched;
                step.state = step.state || STEP_STATE.normal;
            }));
            // Mark previous steps of the active step as done
            if (this.config.selected > 0
                && this.config.anchorSettings.markDoneStep
                && this.config.anchorSettings.markAllPreviousStepsAsDone) {
                this.steps.forEach((/**
                 * @param {?} step
                 * @return {?}
                 */
                function (step) {
                    if (step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden) {
                        step.status = step.index < _this.config.selected ? STEP_STATUS.done : step.status;
                    }
                }));
            }
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._backupStepStates = /**
         * @return {?}
         */
        function () {
            this.steps.forEach((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                step.initialStatus = step.status;
                step.initialState = step.state;
            }));
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._restoreStepStates = /**
         * @return {?}
         */
        function () {
            this.steps.forEach((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                step.status = step.initialStatus;
                step.state = step.initialState;
            }));
        };
        // PRIVATE FUNCTIONS
        // PRIVATE FUNCTIONS
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._initStyles = 
        // PRIVATE FUNCTIONS
        /**
         * @return {?}
         */
        function () {
            // Set the main element
            this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
            // Set anchor elements
            this.styles.step = 'nav-item'; // li
            // Make the anchor clickable
            if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {
                this.styles.step += ' clickable';
            }
            // Set the toolbar styles
            this.styles.toolbarTop = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-top justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;
            this.styles.toolbarBottom = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-bottom justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;
            // Set previous&next buttons 
            this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';
            this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._setToolbar = /**
         * @return {?}
         */
        function () {
            this.showToolbarTop = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.top ||
                this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;
            this.showToolbarBottom = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.bottom ||
                this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;
            this.showPreviousButton = this.config.toolbarSettings.showPreviousButton;
            this.showNextButton = this.config.toolbarSettings.showNextButton;
            this.showExtraButtons = this.config.toolbarSettings.toolbarExtraButtons && this.config.toolbarSettings.toolbarExtraButtons.length > 0;
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._setEvents = /**
         * @return {?}
         */
        function () {
            //TODO: keyNavigation
            // Keyboard navigation event
            if (this.config.keyNavigation) ;
        };
        /**
         * @param {?} selectedStep
         * @return {?}
         */
        NgWizardComponent.prototype._getStepCssClass = /**
         * @param {?} selectedStep
         * @return {?}
         */
        function (selectedStep) {
            /** @type {?} */
            var stepClass = this.styles.step;
            switch (selectedStep.state) {
                case STEP_STATE.disabled:
                    stepClass += ' disabled';
                    break;
                case STEP_STATE.error:
                    stepClass += ' danger';
                    break;
                case STEP_STATE.hidden:
                    stepClass += ' hidden';
                    break;
            }
            switch (selectedStep.status) {
                case STEP_STATUS.done:
                    stepClass += ' done';
                    break;
                case STEP_STATUS.active:
                    stepClass += ' active';
                    break;
            }
            return stepClass;
        };
        /**
         * @param {?} event
         * @param {?} selectedStep
         * @return {?}
         */
        NgWizardComponent.prototype._showSelectedStep = /**
         * @param {?} event
         * @param {?} selectedStep
         * @return {?}
         */
        function (event, selectedStep) {
            event.preventDefault();
            if (!this.config.anchorSettings.anchorClickable) {
                return;
            }
            if (!this.config.anchorSettings.enableAnchorOnDoneStep && selectedStep.status == STEP_STATUS.done) {
                return true;
            }
            if (selectedStep.index != this.current_index) {
                if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {
                    this._showStep(selectedStep.index);
                }
                else {
                    if (selectedStep.status == STEP_STATUS.done) {
                        this._showStep(selectedStep.index);
                    }
                }
            }
        };
        /**
         * @param {?=} event
         * @return {?}
         */
        NgWizardComponent.prototype._showNextStep = /**
         * @param {?=} event
         * @return {?}
         */
        function (event) {
            var _this = this;
            if (event) {
                event.preventDefault();
            }
            // Find the next not disabled & hidden step
            /** @type {?} */
            var filteredSteps = this.steps.filter((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                return step.index > (_this.current_index == null ? -1 : _this.current_index)
                    && step.state != STEP_STATE.disabled
                    && step.state != STEP_STATE.hidden;
            }));
            if (filteredSteps.length == 0) {
                if (!this.config.cycleSteps) {
                    return;
                }
                this._showStep(0);
            }
            else {
                this._showStep(filteredSteps.shift().index);
            }
        };
        /**
         * @param {?=} event
         * @return {?}
         */
        NgWizardComponent.prototype._showPreviousStep = /**
         * @param {?=} event
         * @return {?}
         */
        function (event) {
            var _this = this;
            if (event) {
                event.preventDefault();
            }
            // Find the previous not disabled & hidden step
            /** @type {?} */
            var filteredSteps = this.steps.filter((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                return step.index < (_this.current_index == null && _this.config.cycleSteps ? _this.steps.length : _this.current_index)
                    && step.state != STEP_STATE.disabled
                    && step.state != STEP_STATE.hidden;
            }));
            if (filteredSteps.length == 0) {
                if (!this.config.cycleSteps) {
                    return;
                }
                this._showStep(this.steps.length - 1);
            }
            else {
                this._showStep(filteredSteps.pop().index);
            }
        };
        /**
         * @param {?} index
         * @return {?}
         */
        NgWizardComponent.prototype._showStep = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            // If step not found, skip
            if (index >= this.steps.length || index < 0) {
                return;
            }
            // If current step is requested again, skip
            if (index == this.current_index) {
                return;
            }
            /** @type {?} */
            var selectedStep = this.steps.toArray()[index];
            // If it is a disabled or hidden step, skip
            if (selectedStep.state == STEP_STATE.disabled || selectedStep.state == STEP_STATE.hidden) {
                return;
            }
            // Load step content
            this._loadStepContent(selectedStep);
        };
        /**
         * @param {?} selectedStep
         * @return {?}
         */
        NgWizardComponent.prototype._loadStepContent = /**
         * @param {?} selectedStep
         * @return {?}
         */
        function (selectedStep) {
            // Get the direction of step navigation
            /** @type {?} */
            var stepDirection = (this.current_index != null && this.current_index != selectedStep.index) ? (this.current_index < selectedStep.index ? "forward" : "backward") : '';
            /** @type {?} */
            var stepPosition = (selectedStep.index == 0) ? 'first' : (selectedStep.index == this.steps.length - 1 ? 'final' : 'middle');
            // Update controls
            this._setAnchor(selectedStep);
            // Set the buttons based on the step
            this._setButtons(selectedStep.index);
            // Trigger "stepChanged" event
            this.stepChanged.emit({
                step: selectedStep,
                previousStep: this.currentStep,
                direction: stepDirection,
                position: stepPosition
            });
            // Update the current index
            this.current_index = selectedStep.index;
            this.currentStep = selectedStep;
        };
        /**
         * @param {?} selectedStep
         * @return {?}
         */
        NgWizardComponent.prototype._setAnchor = /**
         * @param {?} selectedStep
         * @return {?}
         */
        function (selectedStep) {
            // Current step anchor > Remove other classes and add done class
            if (this.currentStep) {
                this.currentStep.status = STEP_STATUS.untouched;
                if (this.config.anchorSettings.markDoneStep) {
                    this.currentStep.status = STEP_STATUS.done;
                    if (this.config.anchorSettings.removeDoneStepOnNavigateBack) {
                        this.steps.forEach((/**
                         * @param {?} step
                         * @return {?}
                         */
                        function (step) {
                            if (step.index > selectedStep.index) {
                                step.status = STEP_STATUS.untouched;
                            }
                        }));
                    }
                }
            }
            // Next step anchor > Remove other classes and add active class
            selectedStep.status = STEP_STATUS.active;
        };
        /**
         * @param {?} index
         * @return {?}
         */
        NgWizardComponent.prototype._setButtons = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            // Previous/Next Button enable/disable based on step
            if (!this.config.cycleSteps) {
                if (0 >= index) {
                    this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev disabled';
                }
                else {
                    this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';
                }
                if (this.steps.length - 1 <= index) {
                    this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next disabled';
                }
                else {
                    this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';
                }
            }
        };
        /**
         * @param {?} button
         * @return {?}
         */
        NgWizardComponent.prototype._extraButtonClicked = /**
         * @param {?} button
         * @return {?}
         */
        function (button) {
            if (button.event) {
                button.event();
            }
        };
        // HELPER FUNCTIONS
        // HELPER FUNCTIONS
        /**
         * @param {?} event
         * @return {?}
         */
        NgWizardComponent.prototype._keyNav = 
        // HELPER FUNCTIONS
        /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            // Keyboard navigation
            switch (event.which) {
                case 37:
                    // left
                    this._showPreviousStep(event);
                    event.preventDefault();
                    break;
                case 39:
                    // right
                    this._showNextStep(event);
                    event.preventDefault();
                    break;
                default:
                    return; // exit this handler for other keys
            }
        };
        /*
        _showLoader() {
          this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';
        }
      
        _hideLoader() {
          this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
        }
        */
        // PUBLIC FUNCTIONS
        /*
          _showLoader() {
            this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';
          }
        
          _hideLoader() {
            this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
          }
          */
        // PUBLIC FUNCTIONS
        /**
         * @param {?} theme
         * @return {?}
         */
        NgWizardComponent.prototype._setTheme = /*
          _showLoader() {
            this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';
          }
        
          _hideLoader() {
            this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
          }
          */
        // PUBLIC FUNCTIONS
        /**
         * @param {?} theme
         * @return {?}
         */
        function (theme) {
            if (this.config.theme == theme) {
                return false;
            }
            this.config.theme = theme;
            this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
            // Trigger "themeChanged" event
            this.themeChanged.emit(this.config.theme);
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype._reset = /**
         * @return {?}
         */
        function () {
            // Reset all elements and classes
            this.current_index = null;
            this.currentStep = null;
            this._restoreStepStates();
            this._init();
            // Trigger "reseted" event
            this.reseted.emit();
        };
        /**
         * @return {?}
         */
        NgWizardComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            if (this.resetWizardWatcher) {
                this.resetWizardWatcher.unsubscribe();
            }
            if (this.showNextStepWatcher) {
                this.showNextStepWatcher.unsubscribe();
            }
            if (this.showPreviousStepWatcher) {
                this.showPreviousStepWatcher.unsubscribe();
            }
            if (this.setThemeWatcher) {
                this.setThemeWatcher.unsubscribe();
            }
        };
        /** @nocollapse */
        NgWizardComponent.ctorParameters = function () { return [
            { type: NgWizardService }
        ]; };
        NgWizardComponent.propDecorators = {
            steps: [{ type: core.ContentChildren, args: [NgWizardStep,] }],
            pConfig: [{ type: core.Input, args: ['config',] }],
            stepChanged: [{ type: core.Output }],
            themeChanged: [{ type: core.Output }],
            reseted: [{ type: core.Output }]
        };
NgWizardComponent.ɵfac = function NgWizardComponent_Factory(t) { return new (t || NgWizardComponent)(ɵngcc0.ɵɵdirectiveInject(NgWizardService)); };
NgWizardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgWizardComponent, selectors: [["ng-wizard"]], contentQueries: function NgWizardComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, NgWizardStep, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.steps = _t);
    } }, inputs: { pConfig: ["config", "pConfig"] }, outputs: { stepChanged: "stepChanged", themeChanged: "themeChanged", reseted: "reseted" }, ngContentSelectors: _c0, decls: 7, vars: 4, consts: [["id", "ngwizard", 3, "ngClass"], [1, "nav", "nav-tabs", "step-anchor"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass", 4, "ngIf"], [1, "ng-wizard-container", "tab-content"], [3, "ngClass"], [1, "nav-link", 3, "href", "click"], ["role", "group", 1, "btn-group", "mr-2", "ng-wizard-btn-group"], ["type", "button", 3, "ngClass", "click", 4, "ngIf"], ["class", "btn-group mr-2 ng-wizard-btn-group-extra", "role", "group", 4, "ngIf"], ["type", "button", 3, "ngClass", "click"], ["role", "group", 1, "btn-group", "mr-2", "ng-wizard-btn-group-extra"], ["type", "button", 3, "ngClass", "click", 4, "ngFor", "ngForOf"]], template: function NgWizardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 1);
        ɵngcc0.ɵɵtemplate(2, NgWizardComponent_li_2_Template, 6, 4, "li", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_Template, 5, 4, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵprojection(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, NgWizardComponent_div_6_Template, 5, 4, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.styles.main);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.steps);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showToolbarTop);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showToolbarBottom);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf], styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardComponent, [{
        type: core.Component,
        args: [{
                selector: 'ng-wizard',
                template: "<div id=\"ngwizard\" [ngClass]=\"styles.main\">\n    <ul class=\"nav nav-tabs step-anchor\">\n        <li *ngFor=\"let step of steps; let i = index\" [ngClass]=\"_getStepCssClass(step)\">\n            <a href=\"#step-{{ i }}\" (click)=\"_showSelectedStep($event, step)\"\n                class=\"nav-link\">{{ step.title }}<br /><small>{{ step.description }}</small></a>\n        </li>\n    </ul>\n\n    <div *ngIf=\"showToolbarTop\" [ngClass]=\"styles.toolbarTop\">\n        <div class=\"btn-group mr-2 ng-wizard-btn-group\" role=\"group\">\n            <button *ngIf=\"showPreviousButton\" [ngClass]=\"styles.previousButton\" type=\"button\"\n                (click)=\"_showPreviousStep($event)\">{{ config.lang.previous }}</button>\n            <button *ngIf=\"showNextButton\" [ngClass]=\"styles.nextButton\" type=\"button\"\n                (click)=\"_showNextStep($event)\">{{ config.lang.next }}</button>\n        </div>\n\n        <div *ngIf=\"showExtraButtons\" class=\"btn-group mr-2 ng-wizard-btn-group-extra\" role=\"group\">\n            <button *ngFor=\"let button of config.toolbarSettings.toolbarExtraButtons; let j = index\"\n                [ngClass]=\"button.class\" type=\"button\" (click)=\"_extraButtonClicked(button)\">{{ button.text }}</button>\n        </div>\n    </div>\n\n    <div class=\"ng-wizard-container tab-content\">\n        <ng-content></ng-content>\n    </div>\n\n    <div *ngIf=\"showToolbarBottom\" [ngClass]=\"styles.toolbarBottom\">\n        <div class=\"btn-group mr-2 ng-wizard-btn-group\" role=\"group\">\n            <button *ngIf=\"showPreviousButton\" [ngClass]=\"styles.previousButton\" type=\"button\"\n                (click)=\"_showPreviousStep($event)\">{{ config.lang.previous }}</button>\n            <button *ngIf=\"showNextButton\" [ngClass]=\"styles.nextButton\" type=\"button\"\n                (click)=\"_showNextStep($event)\">{{ config.lang.next }}</button>\n        </div>\n\n        <div *ngIf=\"showExtraButtons\" class=\"btn-group mr-2 ng-wizard-btn-group-extra\" role=\"group\">\n            <button *ngFor=\"let button of config.toolbarSettings.toolbarExtraButtons; let j = index\"\n                [ngClass]=\"button.class\" type=\"button\" (click)=\"_extraButtonClicked(button)\">{{ button.text }}</button>\n        </div>\n    </div>\n</div>",
                styles: [""]
            }]
    }], function () { return [{ type: NgWizardService }]; }, { stepChanged: [{
            type: core.Output
        }], themeChanged: [{
            type: core.Output
        }], reseted: [{
            type: core.Output
        }], pConfig: [{
            type: core.Input,
            args: ['config']
        }], steps: [{
            type: core.ContentChildren,
            args: [NgWizardStep]
        }] }); })();
        return NgWizardComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgWizardModule = /** @class */ (function () {
        function NgWizardModule() {
        }
        /**
         * forRoot
         * @returns A module with its provider dependencies
         */
        /**
         * forRoot
         * @param {?} ngWizardConfig
         * @return {?} A module with its provider dependencies
         */
        NgWizardModule.forRoot = /**
         * forRoot
         * @param {?} ngWizardConfig
         * @return {?} A module with its provider dependencies
         */
        function (ngWizardConfig) {
            return {
                ngModule: NgWizardModule,
                providers: [
                    {
                        provide: NG_WIZARD_CONFIG_TOKEN,
                        useValue: ngWizardConfig
                    }
                ]
            };
        };
NgWizardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgWizardModule });
NgWizardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgWizardModule_Factory(t) { return new (t || NgWizardModule)(); }, imports: [[common.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgWizardModule, { declarations: [NgWizardComponent,
        NgWizardStepComponent], imports: [ɵngcc1.CommonModule], exports: [NgWizardComponent,
        NgWizardStepComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule],
                declarations: [NgWizardComponent, NgWizardStepComponent],
                exports: [NgWizardComponent, NgWizardStepComponent]
            }]
    }], function () { return []; }, null); })();
        return NgWizardModule;
    }());

    exports.NgWizardModule = NgWizardModule;
    exports.NgWizardService = NgWizardService;
    exports.STEP_STATE = STEP_STATE;
    exports.THEME = THEME;
    exports.TOOLBAR_BUTTON_POSITION = TOOLBAR_BUTTON_POSITION;
    exports.TOOLBAR_POSITION = TOOLBAR_POSITION;
    exports.ɵa = NgWizardStep;
    exports.ɵb = NG_WIZARD_CONFIG_TOKEN;
    exports.ɵc = NgWizardComponent;
    exports.ɵd = NgWizardStepComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=ng-wizard.umd.js.map