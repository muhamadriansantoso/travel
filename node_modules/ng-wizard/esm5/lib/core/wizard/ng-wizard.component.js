/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ContentChildren, QueryList } from '@angular/core';
import { NgWizardService } from '../ng-wizard.service';
import { NgWizardStep } from '../../utils/interfaces';
import { TOOLBAR_POSITION, STEP_STATE, STEP_STATUS } from '../../utils/enums';
import { merge } from '../../utils/functions';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function NgWizardComponent_li_2_Template(rf, ctx) { if (rf & 1) {
    var _r699 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_li_2_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r699); var step_r696 = ctx.$implicit; var ctx_r698 = ɵngcc0.ɵɵnextContext(); return ctx_r698._showSelectedStep($event, step_r696); });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelement(3, "br");
    ɵngcc0.ɵɵelementStart(4, "small");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var step_r696 = ctx.$implicit;
    var i_r697 = ctx.index;
    var ctx_r693 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r693._getStepCssClass(step_r696));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("href", "#step-", i_r697, "", ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(step_r696.title);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(step_r696.description);
} }
function NgWizardComponent_div_3_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r704 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_3_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r704); var ctx_r703 = ɵngcc0.ɵɵnextContext(2); return ctx_r703._showPreviousStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r700 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r700.styles.previousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r700.config.lang.previous);
} }
function NgWizardComponent_div_3_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r706 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_3_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r706); var ctx_r705 = ɵngcc0.ɵɵnextContext(2); return ctx_r705._showNextStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r701 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r701.styles.nextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r701.config.lang.next);
} }
function NgWizardComponent_div_3_div_4_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r711 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_3_div_4_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r711); var button_r708 = ctx.$implicit; var ctx_r710 = ɵngcc0.ɵɵnextContext(3); return ctx_r710._extraButtonClicked(button_r708); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var button_r708 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", button_r708.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(button_r708.text);
} }
function NgWizardComponent_div_3_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_3_div_4_button_1_Template, 2, 2, "button", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r702 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r702.config.toolbarSettings.toolbarExtraButtons);
} }
function NgWizardComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_3_button_2_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_button_3_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_3_div_4_Template, 2, 1, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r694 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r694.styles.toolbarTop);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r694.showPreviousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r694.showNextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r694.showExtraButtons);
} }
function NgWizardComponent_div_6_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r716 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_6_button_2_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r716); var ctx_r715 = ɵngcc0.ɵɵnextContext(2); return ctx_r715._showPreviousStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r712 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r712.styles.previousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r712.config.lang.previous);
} }
function NgWizardComponent_div_6_button_3_Template(rf, ctx) { if (rf & 1) {
    var _r718 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_6_button_3_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r718); var ctx_r717 = ɵngcc0.ɵɵnextContext(2); return ctx_r717._showNextStep($event); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r713 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r713.styles.nextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r713.config.lang.next);
} }
function NgWizardComponent_div_6_div_4_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r723 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function NgWizardComponent_div_6_div_4_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r723); var button_r720 = ctx.$implicit; var ctx_r722 = ɵngcc0.ɵɵnextContext(3); return ctx_r722._extraButtonClicked(button_r720); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var button_r720 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngClass", button_r720.class);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(button_r720.text);
} }
function NgWizardComponent_div_6_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵtemplate(1, NgWizardComponent_div_6_div_4_button_1_Template, 2, 2, "button", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r714 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r714.config.toolbarSettings.toolbarExtraButtons);
} }
function NgWizardComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵtemplate(2, NgWizardComponent_div_6_button_2_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_6_button_3_Template, 2, 2, "button", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, NgWizardComponent_div_6_div_4_Template, 2, 1, "div", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r695 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r695.styles.toolbarBottom);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r695.showPreviousButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r695.showNextButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r695.showExtraButtons);
} }
var _c0 = ["*"];
var NgWizardComponent = /** @class */ (function () {
    function NgWizardComponent(ngService) {
        this.ngService = ngService;
        this.stepChanged = new EventEmitter();
        this.themeChanged = new EventEmitter();
        this.reseted = new EventEmitter();
        this.styles = {};
        this.showToolbarTop = false;
        this.showPreviousButton = false;
        this.showNextButton = false;
        this.showToolbarBottom = false;
        this.showExtraButtons = false;
        this.current_index = null; // Active step index
    }
    Object.defineProperty(NgWizardComponent.prototype, "pConfig", {
        get: /**
         * @return {?}
         */
        function () {
            return this._pConfig || {};
        },
        set: /**
         * @param {?} config
         * @return {?}
         */
        function (config) {
            this._pConfig = config;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgWizardComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._backupStepStates();
        this._init();
        // Set toolbar
        this._setToolbar();
        // Assign plugin events
        this._setEvents();
        this.resetWizardWatcher = this.ngService.resetWizard$
            .subscribe((/**
         * @return {?}
         */
        function () {
            _this._reset();
        }));
        this.showNextStepWatcher = this.ngService.showNextStep$
            .subscribe((/**
         * @return {?}
         */
        function () {
            _this._showNextStep();
        }));
        this.showPreviousStepWatcher = this.ngService.showPreviousStep$
            .subscribe((/**
         * @return {?}
         */
        function () {
            _this._showPreviousStep();
        }));
        this.setThemeWatcher = this.ngService.setTheme$
            .subscribe((/**
         * @param {?} theme
         * @return {?}
         */
        function (theme) {
            _this._setTheme(theme);
        }));
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._init = /**
     * @return {?}
     */
    function () {
        // set config
        /** @type {?} */
        var defaultConfig = this.ngService.getDefaultConfig();
        this.config = merge(defaultConfig, this.pConfig);
        // set step states
        this._initSteps();
        // Set the elements
        this._initStyles();
        // Show the initial step
        this._showStep(this.config.selected);
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._initSteps = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.steps.forEach((/**
         * @param {?} step
         * @param {?} index
         * @return {?}
         */
        function (step, index) {
            step.index = index;
            step.status = step.status || STEP_STATUS.untouched;
            step.state = step.state || STEP_STATE.normal;
        }));
        // Mark previous steps of the active step as done
        if (this.config.selected > 0
            && this.config.anchorSettings.markDoneStep
            && this.config.anchorSettings.markAllPreviousStepsAsDone) {
            this.steps.forEach((/**
             * @param {?} step
             * @return {?}
             */
            function (step) {
                if (step.state != STEP_STATE.disabled && step.state != STEP_STATE.hidden) {
                    step.status = step.index < _this.config.selected ? STEP_STATUS.done : step.status;
                }
            }));
        }
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._backupStepStates = /**
     * @return {?}
     */
    function () {
        this.steps.forEach((/**
         * @param {?} step
         * @return {?}
         */
        function (step) {
            step.initialStatus = step.status;
            step.initialState = step.state;
        }));
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._restoreStepStates = /**
     * @return {?}
     */
    function () {
        this.steps.forEach((/**
         * @param {?} step
         * @return {?}
         */
        function (step) {
            step.status = step.initialStatus;
            step.state = step.initialState;
        }));
    };
    // PRIVATE FUNCTIONS
    // PRIVATE FUNCTIONS
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._initStyles = 
    // PRIVATE FUNCTIONS
    /**
     * @return {?}
     */
    function () {
        // Set the main element
        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
        // Set anchor elements
        this.styles.step = 'nav-item'; // li
        // Make the anchor clickable
        if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {
            this.styles.step += ' clickable';
        }
        // Set the toolbar styles
        this.styles.toolbarTop = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-top justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;
        this.styles.toolbarBottom = 'btn-toolbar ng-wizard-toolbar ng-wizard-toolbar-bottom justify-content-' + this.config.toolbarSettings.toolbarButtonPosition;
        // Set previous&next buttons 
        this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';
        this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._setToolbar = /**
     * @return {?}
     */
    function () {
        this.showToolbarTop = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.top ||
            this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;
        this.showToolbarBottom = this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.bottom ||
            this.config.toolbarSettings.toolbarPosition == TOOLBAR_POSITION.both;
        this.showPreviousButton = this.config.toolbarSettings.showPreviousButton;
        this.showNextButton = this.config.toolbarSettings.showNextButton;
        this.showExtraButtons = this.config.toolbarSettings.toolbarExtraButtons && this.config.toolbarSettings.toolbarExtraButtons.length > 0;
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._setEvents = /**
     * @return {?}
     */
    function () {
        //TODO: keyNavigation
        // Keyboard navigation event
        if (this.config.keyNavigation) {
            // $(document).keyup(function (e) {
            //   mi._keyNav(e);
            // });
        }
    };
    /**
     * @param {?} selectedStep
     * @return {?}
     */
    NgWizardComponent.prototype._getStepCssClass = /**
     * @param {?} selectedStep
     * @return {?}
     */
    function (selectedStep) {
        /** @type {?} */
        var stepClass = this.styles.step;
        switch (selectedStep.state) {
            case STEP_STATE.disabled:
                stepClass += ' disabled';
                break;
            case STEP_STATE.error:
                stepClass += ' danger';
                break;
            case STEP_STATE.hidden:
                stepClass += ' hidden';
                break;
        }
        switch (selectedStep.status) {
            case STEP_STATUS.done:
                stepClass += ' done';
                break;
            case STEP_STATUS.active:
                stepClass += ' active';
                break;
        }
        return stepClass;
    };
    /**
     * @param {?} event
     * @param {?} selectedStep
     * @return {?}
     */
    NgWizardComponent.prototype._showSelectedStep = /**
     * @param {?} event
     * @param {?} selectedStep
     * @return {?}
     */
    function (event, selectedStep) {
        event.preventDefault();
        if (!this.config.anchorSettings.anchorClickable) {
            return;
        }
        if (!this.config.anchorSettings.enableAnchorOnDoneStep && selectedStep.status == STEP_STATUS.done) {
            return true;
        }
        if (selectedStep.index != this.current_index) {
            if (this.config.anchorSettings.enableAllAnchors && this.config.anchorSettings.anchorClickable) {
                this._showStep(selectedStep.index);
            }
            else {
                if (selectedStep.status == STEP_STATUS.done) {
                    this._showStep(selectedStep.index);
                }
            }
        }
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    NgWizardComponent.prototype._showNextStep = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (event) {
            event.preventDefault();
        }
        // Find the next not disabled & hidden step
        /** @type {?} */
        var filteredSteps = this.steps.filter((/**
         * @param {?} step
         * @return {?}
         */
        function (step) {
            return step.index > (_this.current_index == null ? -1 : _this.current_index)
                && step.state != STEP_STATE.disabled
                && step.state != STEP_STATE.hidden;
        }));
        if (filteredSteps.length == 0) {
            if (!this.config.cycleSteps) {
                return;
            }
            this._showStep(0);
        }
        else {
            this._showStep(filteredSteps.shift().index);
        }
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    NgWizardComponent.prototype._showPreviousStep = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (event) {
            event.preventDefault();
        }
        // Find the previous not disabled & hidden step
        /** @type {?} */
        var filteredSteps = this.steps.filter((/**
         * @param {?} step
         * @return {?}
         */
        function (step) {
            return step.index < (_this.current_index == null && _this.config.cycleSteps ? _this.steps.length : _this.current_index)
                && step.state != STEP_STATE.disabled
                && step.state != STEP_STATE.hidden;
        }));
        if (filteredSteps.length == 0) {
            if (!this.config.cycleSteps) {
                return;
            }
            this._showStep(this.steps.length - 1);
        }
        else {
            this._showStep(filteredSteps.pop().index);
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    NgWizardComponent.prototype._showStep = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        // If step not found, skip
        if (index >= this.steps.length || index < 0) {
            return;
        }
        // If current step is requested again, skip
        if (index == this.current_index) {
            return;
        }
        /** @type {?} */
        var selectedStep = this.steps.toArray()[index];
        // If it is a disabled or hidden step, skip
        if (selectedStep.state == STEP_STATE.disabled || selectedStep.state == STEP_STATE.hidden) {
            return;
        }
        // Load step content
        this._loadStepContent(selectedStep);
    };
    /**
     * @param {?} selectedStep
     * @return {?}
     */
    NgWizardComponent.prototype._loadStepContent = /**
     * @param {?} selectedStep
     * @return {?}
     */
    function (selectedStep) {
        // Get the direction of step navigation
        /** @type {?} */
        var stepDirection = (this.current_index != null && this.current_index != selectedStep.index) ? (this.current_index < selectedStep.index ? "forward" : "backward") : '';
        /** @type {?} */
        var stepPosition = (selectedStep.index == 0) ? 'first' : (selectedStep.index == this.steps.length - 1 ? 'final' : 'middle');
        // Update controls
        this._setAnchor(selectedStep);
        // Set the buttons based on the step
        this._setButtons(selectedStep.index);
        // Trigger "stepChanged" event
        this.stepChanged.emit({
            step: selectedStep,
            previousStep: this.currentStep,
            direction: stepDirection,
            position: stepPosition
        });
        // Update the current index
        this.current_index = selectedStep.index;
        this.currentStep = selectedStep;
    };
    /**
     * @param {?} selectedStep
     * @return {?}
     */
    NgWizardComponent.prototype._setAnchor = /**
     * @param {?} selectedStep
     * @return {?}
     */
    function (selectedStep) {
        // Current step anchor > Remove other classes and add done class
        if (this.currentStep) {
            this.currentStep.status = STEP_STATUS.untouched;
            if (this.config.anchorSettings.markDoneStep) {
                this.currentStep.status = STEP_STATUS.done;
                if (this.config.anchorSettings.removeDoneStepOnNavigateBack) {
                    this.steps.forEach((/**
                     * @param {?} step
                     * @return {?}
                     */
                    function (step) {
                        if (step.index > selectedStep.index) {
                            step.status = STEP_STATUS.untouched;
                        }
                    }));
                }
            }
        }
        // Next step anchor > Remove other classes and add active class
        selectedStep.status = STEP_STATUS.active;
    };
    /**
     * @param {?} index
     * @return {?}
     */
    NgWizardComponent.prototype._setButtons = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        // Previous/Next Button enable/disable based on step
        if (!this.config.cycleSteps) {
            if (0 >= index) {
                this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev disabled';
            }
            else {
                this.styles.previousButton = 'btn btn-secondary ng-wizard-btn-prev';
            }
            if (this.steps.length - 1 <= index) {
                this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next disabled';
            }
            else {
                this.styles.nextButton = 'btn btn-secondary ng-wizard-btn-next';
            }
        }
    };
    /**
     * @param {?} button
     * @return {?}
     */
    NgWizardComponent.prototype._extraButtonClicked = /**
     * @param {?} button
     * @return {?}
     */
    function (button) {
        if (button.event) {
            button.event();
        }
    };
    // HELPER FUNCTIONS
    // HELPER FUNCTIONS
    /**
     * @param {?} event
     * @return {?}
     */
    NgWizardComponent.prototype._keyNav = 
    // HELPER FUNCTIONS
    /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        // Keyboard navigation
        switch (event.which) {
            case 37:
                // left
                this._showPreviousStep(event);
                event.preventDefault();
                break;
            case 39:
                // right
                this._showNextStep(event);
                event.preventDefault();
                break;
            default:
                return; // exit this handler for other keys
        }
    };
    /*
    _showLoader() {
      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';
    }
  
    _hideLoader() {
      this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
    }
    */
    // PUBLIC FUNCTIONS
    /*
      _showLoader() {
        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';
      }
    
      _hideLoader() {
        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
      }
      */
    // PUBLIC FUNCTIONS
    /**
     * @param {?} theme
     * @return {?}
     */
    NgWizardComponent.prototype._setTheme = /*
      _showLoader() {
        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme + ' ng-wizard-loading';
      }
    
      _hideLoader() {
        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
      }
      */
    // PUBLIC FUNCTIONS
    /**
     * @param {?} theme
     * @return {?}
     */
    function (theme) {
        if (this.config.theme == theme) {
            return false;
        }
        this.config.theme = theme;
        this.styles.main = 'ng-wizard-main ng-wizard-theme-' + this.config.theme;
        // Trigger "themeChanged" event
        this.themeChanged.emit(this.config.theme);
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype._reset = /**
     * @return {?}
     */
    function () {
        // Reset all elements and classes
        this.current_index = null;
        this.currentStep = null;
        this._restoreStepStates();
        this._init();
        // Trigger "reseted" event
        this.reseted.emit();
    };
    /**
     * @return {?}
     */
    NgWizardComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.resetWizardWatcher) {
            this.resetWizardWatcher.unsubscribe();
        }
        if (this.showNextStepWatcher) {
            this.showNextStepWatcher.unsubscribe();
        }
        if (this.showPreviousStepWatcher) {
            this.showPreviousStepWatcher.unsubscribe();
        }
        if (this.setThemeWatcher) {
            this.setThemeWatcher.unsubscribe();
        }
    };
    /** @nocollapse */
    NgWizardComponent.ctorParameters = function () { return [
        { type: NgWizardService }
    ]; };
    NgWizardComponent.propDecorators = {
        steps: [{ type: ContentChildren, args: [NgWizardStep,] }],
        pConfig: [{ type: Input, args: ['config',] }],
        stepChanged: [{ type: Output }],
        themeChanged: [{ type: Output }],
        reseted: [{ type: Output }]
    };
NgWizardComponent.ɵfac = function NgWizardComponent_Factory(t) { return new (t || NgWizardComponent)(ɵngcc0.ɵɵdirectiveInject(NgWizardService)); };
NgWizardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgWizardComponent, selectors: [["ng-wizard"]], contentQueries: function NgWizardComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, NgWizardStep, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.steps = _t);
    } }, inputs: { pConfig: ["config", "pConfig"] }, outputs: { stepChanged: "stepChanged", themeChanged: "themeChanged", reseted: "reseted" }, ngContentSelectors: _c0, decls: 7, vars: 4, consts: [["id", "ngwizard", 3, "ngClass"], [1, "nav", "nav-tabs", "step-anchor"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass", 4, "ngIf"], [1, "ng-wizard-container", "tab-content"], [3, "ngClass"], [1, "nav-link", 3, "href", "click"], ["role", "group", 1, "btn-group", "mr-2", "ng-wizard-btn-group"], ["type", "button", 3, "ngClass", "click", 4, "ngIf"], ["class", "btn-group mr-2 ng-wizard-btn-group-extra", "role", "group", 4, "ngIf"], ["type", "button", 3, "ngClass", "click"], ["role", "group", 1, "btn-group", "mr-2", "ng-wizard-btn-group-extra"], ["type", "button", 3, "ngClass", "click", 4, "ngFor", "ngForOf"]], template: function NgWizardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "ul", 1);
        ɵngcc0.ɵɵtemplate(2, NgWizardComponent_li_2_Template, 6, 4, "li", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, NgWizardComponent_div_3_Template, 5, 4, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵprojection(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, NgWizardComponent_div_6_Template, 5, 4, "div", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.styles.main);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.steps);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showToolbarTop);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showToolbarBottom);
    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf], styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardComponent, [{
        type: Component,
        args: [{
                selector: 'ng-wizard',
                template: "<div id=\"ngwizard\" [ngClass]=\"styles.main\">\n    <ul class=\"nav nav-tabs step-anchor\">\n        <li *ngFor=\"let step of steps; let i = index\" [ngClass]=\"_getStepCssClass(step)\">\n            <a href=\"#step-{{ i }}\" (click)=\"_showSelectedStep($event, step)\"\n                class=\"nav-link\">{{ step.title }}<br /><small>{{ step.description }}</small></a>\n        </li>\n    </ul>\n\n    <div *ngIf=\"showToolbarTop\" [ngClass]=\"styles.toolbarTop\">\n        <div class=\"btn-group mr-2 ng-wizard-btn-group\" role=\"group\">\n            <button *ngIf=\"showPreviousButton\" [ngClass]=\"styles.previousButton\" type=\"button\"\n                (click)=\"_showPreviousStep($event)\">{{ config.lang.previous }}</button>\n            <button *ngIf=\"showNextButton\" [ngClass]=\"styles.nextButton\" type=\"button\"\n                (click)=\"_showNextStep($event)\">{{ config.lang.next }}</button>\n        </div>\n\n        <div *ngIf=\"showExtraButtons\" class=\"btn-group mr-2 ng-wizard-btn-group-extra\" role=\"group\">\n            <button *ngFor=\"let button of config.toolbarSettings.toolbarExtraButtons; let j = index\"\n                [ngClass]=\"button.class\" type=\"button\" (click)=\"_extraButtonClicked(button)\">{{ button.text }}</button>\n        </div>\n    </div>\n\n    <div class=\"ng-wizard-container tab-content\">\n        <ng-content></ng-content>\n    </div>\n\n    <div *ngIf=\"showToolbarBottom\" [ngClass]=\"styles.toolbarBottom\">\n        <div class=\"btn-group mr-2 ng-wizard-btn-group\" role=\"group\">\n            <button *ngIf=\"showPreviousButton\" [ngClass]=\"styles.previousButton\" type=\"button\"\n                (click)=\"_showPreviousStep($event)\">{{ config.lang.previous }}</button>\n            <button *ngIf=\"showNextButton\" [ngClass]=\"styles.nextButton\" type=\"button\"\n                (click)=\"_showNextStep($event)\">{{ config.lang.next }}</button>\n        </div>\n\n        <div *ngIf=\"showExtraButtons\" class=\"btn-group mr-2 ng-wizard-btn-group-extra\" role=\"group\">\n            <button *ngFor=\"let button of config.toolbarSettings.toolbarExtraButtons; let j = index\"\n                [ngClass]=\"button.class\" type=\"button\" (click)=\"_extraButtonClicked(button)\">{{ button.text }}</button>\n        </div>\n    </div>\n</div>",
                styles: [""]
            }]
    }], function () { return [{ type: NgWizardService }]; }, { stepChanged: [{
            type: Output
        }], themeChanged: [{
            type: Output
        }], reseted: [{
            type: Output
        }], pConfig: [{
            type: Input,
            args: ['config']
        }], steps: [{
            type: ContentChildren,
            args: [NgWizardStep]
        }] }); })();
    return NgWizardComponent;
}());
export { NgWizardComponent };
if (false) {
    /** @type {?} */
    NgWizardComponent.prototype.steps;
    /** @type {?} */
    NgWizardComponent.prototype._pConfig;
    /** @type {?} */
    NgWizardComponent.prototype.config;
    /** @type {?} */
    NgWizardComponent.prototype.stepChanged;
    /** @type {?} */
    NgWizardComponent.prototype.themeChanged;
    /** @type {?} */
    NgWizardComponent.prototype.reseted;
    /** @type {?} */
    NgWizardComponent.prototype.styles;
    /** @type {?} */
    NgWizardComponent.prototype.showToolbarTop;
    /** @type {?} */
    NgWizardComponent.prototype.showPreviousButton;
    /** @type {?} */
    NgWizardComponent.prototype.showNextButton;
    /** @type {?} */
    NgWizardComponent.prototype.showToolbarBottom;
    /** @type {?} */
    NgWizardComponent.prototype.showExtraButtons;
    /** @type {?} */
    NgWizardComponent.prototype.current_index;
    /** @type {?} */
    NgWizardComponent.prototype.currentStep;
    /** @type {?} */
    NgWizardComponent.prototype.resetWizardWatcher;
    /** @type {?} */
    NgWizardComponent.prototype.showNextStepWatcher;
    /** @type {?} */
    NgWizardComponent.prototype.showPreviousStepWatcher;
    /** @type {?} */
    NgWizardComponent.prototype.setThemeWatcher;
    /**
     * @type {?}
     * @private
     */
    NgWizardComponent.prototype.ngService;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,