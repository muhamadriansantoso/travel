/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgWizardErrorType } from './ng-wizard-error-type.enum';
/**
 * @abstract
 */
export class NgWizardError extends Error {
    /**
     * @protected
     * @param {?} type
     * @param {?} message
     */
    constructor(type, message) {
        super(message);
        this.wizardComponentName = '';
        this.wizardPath = '';
        this.stepComponentName = '';
        this.type = type;
    }
}
if (false) {
    /** @type {?} */
    NgWizardError.prototype.type;
    /** @type {?} */
    NgWizardError.prototype.wizardComponentName;
    /** @type {?} */
    NgWizardError.prototype.wizardPath;
    /** @type {?} */
    NgWizardError.prototype.stepComponentName;
}
export class NoWizardRoute extends NgWizardError {
    /**
     * @param {?} wizardComponentName
     */
    constructor(wizardComponentName) {
        super(NgWizardErrorType.NO_WIZARD_ROUTE, `No route configuration for the ${wizardComponentName} found.`);
        this.wizardComponentName = wizardComponentName;
    }
}
if (false) {
    /** @type {?} */
    NoWizardRoute.prototype.wizardComponentName;
}
export class NoChildRoutes extends NgWizardError {
    /**
     * @param {?} wizardComponentName
     * @param {?} wizardPath
     */
    constructor(wizardComponentName, wizardPath) {
        super(NgWizardErrorType.NO_CHILD_ROUTES, `No child routes for the ${wizardComponentName} found.`);
        this.wizardComponentName = wizardComponentName;
        this.wizardPath = wizardPath;
    }
}
if (false) {
    /** @type {?} */
    NoChildRoutes.prototype.wizardComponentName;
    /** @type {?} */
    NoChildRoutes.prototype.wizardPath;
}
export class NoWsInterface extends NgWizardError {
    /**
     * @param {?} stepComponentName
     */
    constructor(stepComponentName) {
        super(NgWizardErrorType.NO_WS_INTERFACE, `The ${stepComponentName} does not extend the NgWizardStep class or implement the NgWizardStepInterface.`);
        this.stepComponentName = stepComponentName;
    }
}
if (false) {
    /** @type {?} */
    NoWsInterface.prototype.stepComponentName;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctd2l6YXJkLmVycm9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGNtZGFwL25nLXdpemFyZC8iLCJzb3VyY2VzIjpbImxpYi9uZy13aXphcmQtZXJyb3Ivbmctd2l6YXJkLmVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7OztBQUVoRSxNQUFNLE9BQWdCLGFBQWMsU0FBUSxLQUFLOzs7Ozs7SUFPL0MsWUFBc0IsSUFBdUIsRUFBRSxPQUFlO1FBQzVELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUxWLHdCQUFtQixHQUFHLEVBQUUsQ0FBQztRQUN6QixlQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLHNCQUFpQixHQUFHLEVBQUUsQ0FBQztRQUk1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0NBQ0Y7OztJQVZDLDZCQUErQjs7SUFFL0IsNENBQWdDOztJQUNoQyxtQ0FBdUI7O0lBQ3ZCLDBDQUE4Qjs7QUFRaEMsTUFBTSxPQUFPLGFBQWMsU0FBUSxhQUFhOzs7O0lBQzlDLFlBQW1CLG1CQUEyQjtRQUM1QyxLQUFLLENBQ0gsaUJBQWlCLENBQUMsZUFBZSxFQUNqQyxrQ0FBa0MsbUJBQW1CLFNBQVMsQ0FDL0QsQ0FBQztRQUplLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBUTtJQUs5QyxDQUFDO0NBQ0Y7OztJQU5hLDRDQUFrQzs7QUFRaEQsTUFBTSxPQUFPLGFBQWMsU0FBUSxhQUFhOzs7OztJQUM5QyxZQUFtQixtQkFBMkIsRUFBUyxVQUFrQjtRQUN2RSxLQUFLLENBQ0gsaUJBQWlCLENBQUMsZUFBZSxFQUNqQywyQkFBMkIsbUJBQW1CLFNBQVMsQ0FDeEQsQ0FBQztRQUplLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBUTtRQUFTLGVBQVUsR0FBVixVQUFVLENBQVE7SUFLekUsQ0FBQztDQUNGOzs7SUFOYSw0Q0FBa0M7O0lBQUUsbUNBQXlCOztBQVEzRSxNQUFNLE9BQU8sYUFBYyxTQUFRLGFBQWE7Ozs7SUFDOUMsWUFBbUIsaUJBQXlCO1FBQzFDLEtBQUssQ0FDSCxpQkFBaUIsQ0FBQyxlQUFlLEVBQ2pDLE9BQU8saUJBQWlCLGlGQUFpRixDQUMxRyxDQUFDO1FBSmUsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFRO0lBSzVDLENBQUM7Q0FDRjs7O0lBTmEsMENBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdXaXphcmRFcnJvclR5cGUgfSBmcm9tICcuL25nLXdpemFyZC1lcnJvci10eXBlLmVudW0nO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIE5nV2l6YXJkRXJyb3IgZXh0ZW5kcyBFcnJvciB7XHJcbiAgcHVibGljIHR5cGU6IE5nV2l6YXJkRXJyb3JUeXBlO1xyXG5cclxuICBwdWJsaWMgd2l6YXJkQ29tcG9uZW50TmFtZSA9ICcnO1xyXG4gIHB1YmxpYyB3aXphcmRQYXRoID0gJyc7XHJcbiAgcHVibGljIHN0ZXBDb21wb25lbnROYW1lID0gJyc7XHJcblxyXG4gIHByb3RlY3RlZCBjb25zdHJ1Y3Rvcih0eXBlOiBOZ1dpemFyZEVycm9yVHlwZSwgbWVzc2FnZTogc3RyaW5nKSB7XHJcbiAgICBzdXBlcihtZXNzYWdlKTtcclxuICAgIHRoaXMudHlwZSA9IHR5cGU7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTm9XaXphcmRSb3V0ZSBleHRlbmRzIE5nV2l6YXJkRXJyb3Ige1xyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB3aXphcmRDb21wb25lbnROYW1lOiBzdHJpbmcpIHtcclxuICAgIHN1cGVyKFxyXG4gICAgICBOZ1dpemFyZEVycm9yVHlwZS5OT19XSVpBUkRfUk9VVEUsXHJcbiAgICAgIGBObyByb3V0ZSBjb25maWd1cmF0aW9uIGZvciB0aGUgJHt3aXphcmRDb21wb25lbnROYW1lfSBmb3VuZC5gLFxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBOb0NoaWxkUm91dGVzIGV4dGVuZHMgTmdXaXphcmRFcnJvciB7XHJcbiAgY29uc3RydWN0b3IocHVibGljIHdpemFyZENvbXBvbmVudE5hbWU6IHN0cmluZywgcHVibGljIHdpemFyZFBhdGg6IHN0cmluZykge1xyXG4gICAgc3VwZXIoXHJcbiAgICAgIE5nV2l6YXJkRXJyb3JUeXBlLk5PX0NISUxEX1JPVVRFUyxcclxuICAgICAgYE5vIGNoaWxkIHJvdXRlcyBmb3IgdGhlICR7d2l6YXJkQ29tcG9uZW50TmFtZX0gZm91bmQuYCxcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTm9Xc0ludGVyZmFjZSBleHRlbmRzIE5nV2l6YXJkRXJyb3Ige1xyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBzdGVwQ29tcG9uZW50TmFtZTogc3RyaW5nKSB7XHJcbiAgICBzdXBlcihcclxuICAgICAgTmdXaXphcmRFcnJvclR5cGUuTk9fV1NfSU5URVJGQUNFLFxyXG4gICAgICBgVGhlICR7c3RlcENvbXBvbmVudE5hbWV9IGRvZXMgbm90IGV4dGVuZCB0aGUgTmdXaXphcmRTdGVwIGNsYXNzIG9yIGltcGxlbWVudCB0aGUgTmdXaXphcmRTdGVwSW50ZXJmYWNlLmAsXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iXX0=