{"version":3,"file":"cmdap-ng-wizard.js","sources":["ng:/@cmdap/ng-wizard/lib/ng-wizard.utils.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard-error/ng-wizard-error-type.enum.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard-error/ng-wizard.error.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard.service.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard.component.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard-error/ng-wizard-error.component.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard-navigation/ng-wizard-navigation.component.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard-buttons/ng-wizard-buttons.component.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard.module.ts","ng:/@cmdap/ng-wizard/lib/ng-wizard-step/ng-wizard-step.ts"],"names":["utils.mergeWizardOptions","utils.componentImplementsNgWizardStepInterface","utils.getStepDataForUrl","utils.getStepDataForPath","utils.getWizardStepOptions"],"mappings":"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AAA,AAAA,AAAA,AAAA,AAAA,AACA,AAQA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AACA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AACA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAMA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAMA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAOA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AASA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAKA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAtLA,AAAA,AATA,AAAA,ACDA,AAOA,AAAA,AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AArBA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AALA,AAAA,ACDA,AASA,AAAA,AALA,AAQA,AAAA,AAAA,AAAA,AAAA,AACA,AATA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAEA,AAEA,AAAA,ACVA,AAUA,AAAA,AAMA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAzoBA,AAAA,AAXA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,ACjBA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AACA,AACA","sourcesContent":["import { Route } from '@angular/router';\r\nimport { ComponentRef } from '@angular/core';\r\nimport { NgWizardStepData } from './ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardOptions } from './ng-wizard-options/ng-wizard-options.interface';\r\nimport { NgWizardStepOptions } from './ng-wizard-step/ng-wizard-step-options';\r\n\r\n/**\r\n * Returns true if the component extends the NgWizardStep class or implements the NgWizardStepInterface.\r\n *\r\n * @param componentRef The reference to the component to verify\r\n */\r\nexport function componentImplementsNgWizardStepInterface(componentRef: ComponentRef<any>): boolean {\r\n  return 'wsIsValid' in componentRef && 'wsOnNext' in componentRef && 'wsOnPrevious' in componentRef;\r\n}\r\n\r\n/**\r\n * Returns the NgWizardStepData with the given path in the stepData list or undefined if none is\r\n * found.\r\n *\r\n * @param stepData The list with NgWizardStepDatas\r\n * @param path The path you want to get the NgWizardStepData for\r\n */\r\nexport function getStepDataForPath(stepData: NgWizardStepData[], path: string) {\r\n  return stepData.find(data => data.path === path);\r\n}\r\n\r\n/**\r\n * Returns the NgWizardStepData for the given url in the stepData list or undefined if none is\r\n * found.\r\n *\r\n * @param stepData The list with NgWizardStepDatas\r\n * @param url The url which you want to get the NgWizardStepData for\r\n */\r\nexport function getStepDataForUrl(stepData: NgWizardStepData[], url: string) {\r\n  // gets 'path' in the url '/wizard/path?key=value'\r\n  const path = url.split('/').pop().split('?')[0];\r\n  return getStepDataForPath(stepData, path);\r\n}\r\n\r\n/**\r\n * Returns the default wizard options.\r\n */\r\nexport function getDefaultWizardOptions(): NgWizardOptions {\r\n  return {\r\n    navBar: {\r\n      icons: {\r\n        previous: '<i class=\"material-icons ng-wizard-icon\">done</i>',\r\n        current: '<i class=\"material-icons ng-wizard-icon\">create</i>',\r\n        next: '<i class=\"material-icons ng-wizard-icon\">lock</i>',\r\n      },\r\n    },\r\n    buttons: {\r\n      previous: {\r\n        label: '<i class=\"material-icons ng-wizard-icon\">chevron_left</i> Previous',\r\n      },\r\n      next: {\r\n        label: 'Next <i class=\"material-icons ng-wizard-icon\">chevron_right</i>',\r\n      },\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Merges the wizard options in the wizard route's config with the default wizard options.\r\n *\r\n * @param wizardOptions The wizard options in the wizard route's config\r\n */\r\nexport function mergeWizardOptions(wizardOptions: {}): NgWizardOptions {\r\n  if (!wizardOptions) {\r\n    return getDefaultWizardOptions();\r\n  }\r\n\r\n  return { ...getDefaultWizardOptions(), ...wizardOptions };\r\n}\r\n\r\n/**\r\n * Returns the options passed to the wizard step route with an added title attribute.\r\n *\r\n * @param route The wizard step route configuration\r\n */\r\nexport function getWizardStepOptions(route: Route): NgWizardStepOptions {\r\n  if (!route.data) {\r\n    return { title: getStepTitleFromRoute(route) };\r\n  }\r\n\r\n  return {\r\n    ...route.data,\r\n    title: getStepTitleFromRoute(route),\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the step title based on the Route configuration.\r\n * If the route has a data.title attribute it will be returned.\r\n * Else the path will be capitalized and '-' or '_' characters will be replaces by spaces.\r\n *\r\n * @param route The Angular Route object\r\n */\r\nexport function getStepTitleFromRoute(route: Route): string {\r\n  if (route.data && route.data.title) {\r\n    return route.data.title;\r\n  }\r\n  return capitalize(insertSpaces(route.path));\r\n}\r\n\r\n/**\r\n * Capitalizes the first character of the passed value.\r\n */\r\nfunction capitalize(value: string): string {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  return value.charAt(0).toUpperCase() + value.slice(1).toLowerCase();\r\n}\r\n\r\n/**\r\n * Replaces '-' and '_' characters by spaces.\r\n */\r\nfunction insertSpaces(value: string): string {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  return value.replace(/[-_]/g, ' ').trim();\r\n}\r\n","// TODO: evaluate if this is useful\r\nexport enum NgWizardErrorType {\r\n  NO_WIZARD_ROUTE,\r\n  NO_CHILD_ROUTES,\r\n  NO_WS_INTERFACE,\r\n}\r\n","import { NgWizardErrorType } from './ng-wizard-error-type.enum';\r\n\r\nexport abstract class NgWizardError extends Error {\r\n  public type: NgWizardErrorType;\r\n\r\n  public wizardComponentName = '';\r\n  public wizardPath = '';\r\n  public stepComponentName = '';\r\n\r\n  protected constructor(type: NgWizardErrorType, message: string) {\r\n    super(message);\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport class NoWizardRoute extends NgWizardError {\r\n  constructor(public wizardComponentName: string) {\r\n    super(\r\n      NgWizardErrorType.NO_WIZARD_ROUTE,\r\n      `No route configuration for the ${wizardComponentName} found.`,\r\n    );\r\n  }\r\n}\r\n\r\nexport class NoChildRoutes extends NgWizardError {\r\n  constructor(public wizardComponentName: string, public wizardPath: string) {\r\n    super(\r\n      NgWizardErrorType.NO_CHILD_ROUTES,\r\n      `No child routes for the ${wizardComponentName} found.`,\r\n    );\r\n  }\r\n}\r\n\r\nexport class NoWsInterface extends NgWizardError {\r\n  constructor(public stepComponentName: string) {\r\n    super(\r\n      NgWizardErrorType.NO_WS_INTERFACE,\r\n      `The ${stepComponentName} does not extend the NgWizardStep class or implement the NgWizardStepInterface.`,\r\n    );\r\n  }\r\n}\r\n","import { ComponentRef, Injectable } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport * as utils from './ng-wizard.utils';\r\nimport { NoChildRoutes, NoWizardRoute, NoWsInterface } from './ng-wizard-error/ng-wizard.error';\r\nimport { NgWizardStepData } from './ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardStep } from './ng-wizard-step/ng-wizard-step';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgWizardOptions } from './ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Injectable()\r\nexport class NgWizardService {\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  private wizardRoute: Route;\r\n  private stepData: NgWizardStepData[] = [];\r\n  private currentStepData: NgWizardStepData;\r\n  private currentComponent: NgWizardStep;\r\n\r\n  private stepDataChanges = new BehaviorSubject<NgWizardStepData[]>([]);\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  /**\r\n   * Initializes the wizard by parsing the wizard's child routes found in Angular's router config\r\n   * into a list of NgWizardStepData.\r\n   * @param wizardComponentName The name of the wizard component\r\n   */\r\n  public loadWizardRoutes(wizardComponentName: string) {\r\n    this.wizardRoute = this.getWizardRoute(wizardComponentName);\r\n    if (!this.wizardRoute) {\r\n      throw new NoWizardRoute(wizardComponentName);\r\n    }\r\n    this.wizardOptions = utils.mergeWizardOptions(this.wizardRoute.data);\r\n    this.loadChildRoutes(this.wizardRoute);\r\n  }\r\n\r\n  /**\r\n   * Checks and stores the currently displayed component.\r\n   * @param componentRef A reference to the currently displayed component\r\n   */\r\n  public registerActiveComponent(componentRef: ComponentRef<any>) {\r\n    if (!utils.componentImplementsNgWizardStepInterface(componentRef)) {\r\n      throw new NoWsInterface(componentRef.constructor.name);\r\n    }\r\n\r\n    // Cast to unknown before casting to NgWizardStep to let typescript know we checked and approve\r\n    // this conversion.\r\n    this.currentComponent = (componentRef as unknown) as NgWizardStep;\r\n    this.currentStepData = utils.getStepDataForUrl(this.stepData, this.router.url);\r\n    this.currentStepData.componentRef = componentRef;\r\n    this.resetCurrentStep();\r\n    this.currentStepData.isCurrent = true;\r\n    this.onStepDataChange();\r\n  }\r\n\r\n  /**\r\n   * Calls the current component's wsOnPrevious() or wsOnNext()) methods and navigates to the given\r\n   * step if the component does not abort or its state is invalid (for next navigation).\r\n   *\r\n   * @param stepData The NgWizardStepData of the the step to navigate to\r\n   */\r\n  public navigateToStep(stepData: NgWizardStepData) {\r\n    let goAhead;\r\n    if (this.currentStepData.order > stepData.order) {\r\n      goAhead = this.currentComponent.wsOnPrevious();\r\n    } else {\r\n      goAhead = this.currentComponent.wsIsValid() && this.currentComponent.wsOnNext();\r\n    }\r\n    if (goAhead === false) {\r\n      return;\r\n    }\r\n\r\n    let stepPath = stepData.path;\r\n    // If the wizard is added to a specific path in the application we have to join that path and\r\n    // the step's path as the path to navigate to.\r\n    // The Angular Router's relativeTo option does not seem to work when using the hash location\r\n    // strategy.\r\n    if (this.wizardRoute.path) {\r\n      stepPath = [this.wizardRoute.path, stepData.path].join('/');\r\n    }\r\n\r\n    if (stepData.options.cleanQueryParameters) {\r\n      return this.router.navigate([stepPath], { queryParams: {} });\r\n    } else {\r\n      return this.router.navigate([stepPath], { queryParamsHandling: 'merge' });\r\n    }\r\n    return this.router.navigate([stepPath], { queryParamsHandling: 'merge' });\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to the next step.\r\n   */\r\n  public navigateToNextStep() {\r\n    const nextStepData = utils.getStepDataForPath(this.stepData, this.currentStepData.nextStep);\r\n    return this.navigateToStep(nextStepData);\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to the previous step.\r\n   */\r\n  public navigateToPreviousStep() {\r\n    const previousStepData = utils.getStepDataForPath(this.stepData, this.currentStepData.previousStep);\r\n\r\n    return this.navigateToStep(previousStepData);\r\n  }\r\n\r\n  /**\r\n   * Utility method to navigate to a specific route path (external to the wizard)\r\n   */\r\n  public navigateToPath(path: string) {\r\n    return this.router.navigate([path], { queryParamsHandling: 'merge' });\r\n  }\r\n\r\n  /**\r\n   * Returns the step data changes as an observable.\r\n   */\r\n  public getStepDataChangesAsObservable(): Observable<NgWizardStepData[]> {\r\n    return this.stepDataChanges.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Returns the current step data as an observable.\r\n   */\r\n  // TODO: Write a unit test for this method\r\n  public getCurrentStepDataAsObservable(): Observable<NgWizardStepData> {\r\n    return this.getStepDataChangesAsObservable().pipe(\r\n      map((stepDatas) => stepDatas.find((stepData) => stepData.isCurrent)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the Angular Route for the wizard component found in Angular's router config.\r\n   * @param wizardComponentName The name of the wizard component\r\n   */\r\n  private getWizardRoute(wizardComponentName: string): Route {\r\n    return this.router.config.find((route) => route.component && route.component.name === wizardComponentName);\r\n  }\r\n\r\n  /**\r\n   * Parses the child routes of the wizard component route and stores them as a list of\r\n   * NgWizardStepData.\r\n   * @param wizardRoute The Angular Route for the wizard component\r\n   */\r\n  private loadChildRoutes(wizardRoute: Route) {\r\n    if (!wizardRoute.children) {\r\n      throw new NoChildRoutes(wizardRoute.component.name, wizardRoute.path);\r\n    }\r\n\r\n    const childRoutes = wizardRoute.children.filter((route) => route.component);\r\n\r\n    this.stepData = [];\r\n    for (let i = 0; i < childRoutes.length; i++) {\r\n      this.registerStep(i, childRoutes[i], childRoutes[i - 1], childRoutes[i + 1]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stores a child route as an NgWizardStepData.\r\n   * @param index The index in the list of child routes\r\n   * @param stepRoute The child route\r\n   * @param previousStep The previous child route (undefined if first child route)\r\n   * @param nextStep The next child route (undefined if last child route)\r\n   */\r\n  private registerStep(index: number, stepRoute: Route, previousStep: Route, nextStep: Route) {\r\n    this.stepData.push({\r\n      order: index + 1,\r\n      componentName: stepRoute.component.name,\r\n      path: stepRoute.path,\r\n      previousStep: previousStep ? previousStep.path : undefined,\r\n      nextStep: nextStep ? nextStep.path : undefined,\r\n      isCurrent: false,\r\n      options: utils.getWizardStepOptions(stepRoute),\r\n    });\r\n    this.onStepDataChange();\r\n  }\r\n\r\n  /**\r\n   * Emits a step data change event to the subscribers when the step data changes.\r\n   */\r\n  private onStepDataChange() {\r\n    this.stepDataChanges.next(this.stepData);\r\n  }\r\n\r\n  /**\r\n   * Sets the isCurrent attribute of all step data to false.\r\n   */\r\n  private resetCurrentStep() {\r\n    this.stepData.map((stepData) => {\r\n      stepData.isCurrent = false;\r\n      return stepData;\r\n    });\r\n  }\r\n}\r\n","import { Component, ComponentRef } from '@angular/core';\r\nimport { NgWizardService } from './ng-wizard.service';\r\n\r\n@Component({\r\n  selector: 'ng-wizard',\r\n  templateUrl: './ng-wizard.component.html',\r\n})\r\nexport class NgWizardComponent {\r\n  public error: Error;\r\n\r\n  constructor(private service: NgWizardService) {\r\n    try {\r\n      this.service.loadWizardRoutes(this.constructor.name);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n\r\n  public onActivate(componentRef: ComponentRef<any>) {\r\n    try {\r\n      this.service.registerActiveComponent(componentRef);\r\n    } catch (error) {\r\n      this.error = error;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NgWizardErrorType } from './ng-wizard-error-type.enum';\r\nimport { NgWizardError } from './ng-wizard.error';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-error',\r\n  templateUrl: './ng-wizard-error.component.html',\r\n  styleUrls: ['./ng-wizard-error.component.scss']\r\n})\r\nexport class NgWizardErrorComponent {\r\n  @Input() public error: NgWizardError;\r\n\r\n  public NgWizardErrorType = NgWizardErrorType;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardService } from '../ng-wizard.service';\r\nimport { NgWizardStepData } from '../ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { NgWizardOptions } from '../ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-navigation',\r\n  templateUrl: './ng-wizard-navigation.component.html',\r\n  styleUrls: ['./ng-wizard-navigation.component.scss']\r\n})\r\nexport class NgWizardNavigationComponent implements OnInit {\r\n  public stepData$;\r\n  public currentStepData;\r\n\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  constructor(private service: NgWizardService) { }\r\n\r\n  ngOnInit() {\r\n    this.stepData$ = this.service.getStepDataChangesAsObservable();\r\n    this.service.getCurrentStepDataAsObservable().subscribe(stepData => this.currentStepData = stepData);\r\n    this.wizardOptions = this.service.wizardOptions;\r\n  }\r\n\r\n  public goToStep(stepData: NgWizardStepData) {\r\n    if ((this.currentStepData && this.currentStepData.options && this.currentStepData.options.disableNavigation)\r\n        || stepData.order >= this.currentStepData.order) {\r\n      return;\r\n    }\r\n    this.service.navigateToStep(stepData);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgWizardService } from '../ng-wizard.service';\r\nimport { NgWizardStepData } from '../ng-wizard-step/ng-wizard-step-data.interface';\r\nimport { Observable } from 'rxjs';\r\nimport { NgWizardOptions } from '../ng-wizard-options/ng-wizard-options.interface';\r\n\r\n@Component({\r\n  selector: 'ng-wizard-buttons',\r\n  templateUrl: './ng-wizard-buttons.component.html',\r\n  styleUrls: ['./ng-wizard-buttons.component.scss'],\r\n})\r\nexport class NgWizardButtonsComponent implements OnInit {\r\n  public currentStepData$: Observable<NgWizardStepData>;\r\n\r\n  public wizardOptions: NgWizardOptions;\r\n\r\n  constructor(private service: NgWizardService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentStepData$ = this.service.getCurrentStepDataAsObservable();\r\n    this.wizardOptions = this.service.wizardOptions;\r\n  }\r\n\r\n  goToNextStep() {\r\n    this.service.navigateToNextStep();\r\n  }\r\n\r\n  goToPreviousStep() {\r\n    this.service.navigateToPreviousStep();\r\n  }\r\n\r\n  goToPath(path: string) {\r\n    this.service.navigateToPath(path);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgWizardComponent } from './ng-wizard.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgWizardErrorComponent } from './ng-wizard-error/ng-wizard-error.component';\r\nimport { NgWizardNavigationComponent } from './ng-wizard-navigation/ng-wizard-navigation.component';\r\nimport { NgWizardButtonsComponent } from './ng-wizard-buttons/ng-wizard-buttons.component';\r\nimport { NgWizardService } from './ng-wizard.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgWizardComponent,\r\n    NgWizardErrorComponent,\r\n    NgWizardNavigationComponent,\r\n    NgWizardButtonsComponent,\r\n  ],\r\n  imports: [CommonModule, RouterModule],\r\n  providers: [NgWizardService],\r\n  exports: [NgWizardComponent],\r\n})\r\nexport class NgWizardModule {}\r\n","import { NgWizardStepInterface } from './ng-wizard-step.interface';\r\n\r\nexport abstract class NgWizardStep implements NgWizardStepInterface {\r\n  wsIsValid(): boolean {\r\n    return true;\r\n  }\r\n\r\n  wsOnNext(): void | boolean {\r\n    return;\r\n  }\r\n\r\n  wsOnPrevious(): void | boolean {\r\n    return;\r\n  }\r\n}\r\n"]}