/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { NgWizardService } from './ng-wizard.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ng-wizard-error/ng-wizard-error.component';
import * as ɵngcc2 from './ng-wizard-navigation/ng-wizard-navigation.component';
import * as ɵngcc3 from '@angular/router';
import * as ɵngcc4 from './ng-wizard-buttons/ng-wizard-buttons.component';
var NgWizardComponent = /** @class */ (function () {
    function NgWizardComponent(service) {
        this.service = service;
        try {
            this.service.loadWizardRoutes(this.constructor.name);
        }
        catch (error) {
            this.error = error;
        }
    }
    /**
     * @param {?} componentRef
     * @return {?}
     */
    NgWizardComponent.prototype.onActivate = /**
     * @param {?} componentRef
     * @return {?}
     */
    function (componentRef) {
        try {
            this.service.registerActiveComponent(componentRef);
        }
        catch (error) {
            this.error = error;
        }
    };
    /** @nocollapse */
    NgWizardComponent.ctorParameters = function () { return [
        { type: NgWizardService }
    ]; };
NgWizardComponent.ɵfac = function NgWizardComponent_Factory(t) { return new (t || NgWizardComponent)(ɵngcc0.ɵɵdirectiveInject(NgWizardService)); };
NgWizardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgWizardComponent, selectors: [["ng-wizard"]], decls: 6, vars: 1, consts: [[1, "ng-wizard-container"], [3, "error"], [1, "ng-wizard-content-container"], [3, "activate"]], template: function NgWizardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "ng-wizard-error", 1);
        ɵngcc0.ɵɵelement(2, "ng-wizard-navigation");
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "router-outlet", 3);
        ɵngcc0.ɵɵlistener("activate", function NgWizardComponent_Template_router_outlet_activate_4_listener($event) { return ctx.onActivate($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(5, "ng-wizard-buttons");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("error", ctx.error);
    } }, directives: [ɵngcc1.NgWizardErrorComponent, ɵngcc2.NgWizardNavigationComponent, ɵngcc3.RouterOutlet, ɵngcc4.NgWizardButtonsComponent], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgWizardComponent, [{
        type: Component,
        args: [{
                selector: 'ng-wizard',
                template: "<div class=\"ng-wizard-container\">\r\n  <ng-wizard-error [error]=\"error\"></ng-wizard-error>\r\n  <ng-wizard-navigation></ng-wizard-navigation>\r\n  <div class=\"ng-wizard-content-container\">\r\n    <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\r\n  </div>\r\n  <ng-wizard-buttons></ng-wizard-buttons>\r\n</div>\r\n"
            }]
    }], function () { return [{ type: NgWizardService }]; }, null); })();
    return NgWizardComponent;
}());
export { NgWizardComponent };
if (false) {
    /** @type {?} */
    NgWizardComponent.prototype.error;
    /**
     * @type {?}
     * @private
     */
    NgWizardComponent.prototype.service;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctd2l6YXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L0BjbWRhcC9uZy13aXphcmQvbGliL25nLXdpemFyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBQ3hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7O0FBRXREO0FBRWUsSUFLYiwyQkFBb0IsT0FBd0I7QUFDOUMsUUFEc0IsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7QUFBQyxRQUMzQyxJQUFJO0FBQ1IsWUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0QsU0FBSztBQUFDLFFBQUEsT0FBTyxLQUFLLEVBQUU7QUFDcEIsWUFBTSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUN6QixTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0g7QUFDTztBQUErQjtBQUNwQztBQUNGLElBRlMsc0NBQVU7QUFBTztBQUN4QjtBQUNTO0FBQVEsSUFGakIsVUFBa0IsWUFBK0I7QUFDbkQsUUFBSSxJQUFJO0FBQ1IsWUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3pELFNBQUs7QUFBQyxRQUFBLE9BQU8sS0FBSyxFQUFFO0FBQ3BCLFlBQU0sSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7QUFDekIsU0FBSztBQUNMLElBQUUsQ0FBQyxDQWpCSztBQUFDOzhCQUpSLFNBQVMsU0FBQyxoREFJcUI7UUFIOUIsUUFBUSxFQUFFLFdBQVcsN0JBTWMsZ0JBVDVCLGVBQWU7QUFBRztPQUl6QjtpTkFBeUMsa0JBQzFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUVBTG1DO0FBQUMsSUF3QnJDLHdCQUFDO0FBQ0EsQ0FEQSxBQXRCRCxJQXNCQztBQUNELFNBbkJhLGlCQUFpQjtBQUM3QjtBQUFhO0FBRUgsSUFGVCxrQ0FBb0I7QUFDdEI7QUFDTztBQUFpQjtBQUFnQjtBQUFRLElBQWxDLG9DQUFnQzs7QUFWQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQXJCQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUxBLEFBQUEsQUF3QkEsQUFBQSxBQUFBLEFBdEJBLEFBc0JBLEFBbEJBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29tcG9uZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5nV2l6YXJkU2VydmljZSB9IGZyb20gJy4vbmctd2l6YXJkLnNlcnZpY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICduZy13aXphcmQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9uZy13aXphcmQuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdXaXphcmRDb21wb25lbnQge1xyXG4gIHB1YmxpYyBlcnJvcjogRXJyb3I7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2VydmljZTogTmdXaXphcmRTZXJ2aWNlKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICB0aGlzLnNlcnZpY2UubG9hZFdpemFyZFJvdXRlcyh0aGlzLmNvbnN0cnVjdG9yLm5hbWUpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhpcy5lcnJvciA9IGVycm9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIG9uQWN0aXZhdGUoY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8YW55Pikge1xyXG4gICAgdHJ5IHtcclxuICAgICAgdGhpcy5zZXJ2aWNlLnJlZ2lzdGVyQWN0aXZlQ29tcG9uZW50KGNvbXBvbmVudFJlZik7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICB0aGlzLmVycm9yID0gZXJyb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==