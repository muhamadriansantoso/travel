/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input } from '@angular/core';
/**
 * A directive to provide a simple way of hiding and showing elements on the page.
 */
import * as ɵngcc0 from '@angular/core';
var NgbCollapse = /** @class */ (function () {
    function NgbCollapse() {
        /**
         * If `true`, will collapse the element or show it otherwise.
         */
        this.collapsed = false;
    }
    NgbCollapse.propDecorators = {
        collapsed: [{ type: Input, args: ['ngbCollapse',] }]
    };
NgbCollapse.ɵfac = function NgbCollapse_Factory(t) { return new (t || NgbCollapse)(); };
NgbCollapse.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbCollapse, selectors: [["", "ngbCollapse", ""]], hostVars: 4, hostBindings: function NgbCollapse_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("collapse", true)("show", !ctx.collapsed);
    } }, inputs: { collapsed: ["ngbCollapse", "collapsed"] }, exportAs: ["ngbCollapse"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCollapse, [{
        type: Directive,
        args: [{
                selector: '[ngbCollapse]',
                exportAs: 'ngbCollapse',
                host: { '[class.collapse]': 'true', '[class.show]': '!collapsed' }
            }]
    }], function () { return []; }, { collapsed: [{
            type: Input,
            args: ['ngbCollapse']
        }] }); })();
    return NgbCollapse;
}());
export { NgbCollapse };
if (false) {
    /**
     * If `true`, will collapse the element or show it otherwise.
     * @type {?}
     */
    NgbCollapse.prototype.collapsed;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFwc2UuanMiLCJzb3VyY2VzIjpbIm5nOi9AbmctYm9vdHN0cmFwL25nLWJvb3RzdHJhcC9jb2xsYXBzZS9jb2xsYXBzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDL0M7QUFDRztBQUMrRTs7QUFFbEY7QUFFSyxJQUZMO0FBQ1k7QUFBWTtBQUVjO0FBQVksUUFNMUIsY0FBUyxHQUFHLEtBQUssQ0FBQztBQUMxQyxJQUFBLENBQUMsQUFMUTtBQUFDO1lBTFQsU0FBUyxTQUFDLHNCQUNULFFBQVEsNURBTUUsNEJBRVQsS0FBSyxTQUFDLGFBQWE7Q0FSVixEQVFnQjtTQVJELHNCQUN6QixRQUFRLEVBQUUsYUFBYSxzQkFDdkIsSUFBSSxFQUFFLEVBQUM7YUFBa0IsRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBQyxrQkFDakU7Ozs7Ozs7Ozs7Ozs7b0JBS2lDO0FBQUMsSUFDbkMsa0JBQUM7QUFDQSxDQURBLEFBVkQsSUFVQztBQUNELFNBTmEsV0FBVztBQUN2QjtBQUNPO0FBQVE7QUFFSjtBQUFpQjtBQUFRLElBQW5DLGdDQUF3QztBQUMxQztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBBIGRpcmVjdGl2ZSB0byBwcm92aWRlIGEgc2ltcGxlIHdheSBvZiBoaWRpbmcgYW5kIHNob3dpbmcgZWxlbWVudHMgb24gdGhlIHBhZ2UuXG4gKi9cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tuZ2JDb2xsYXBzZV0nLFxuICBleHBvcnRBczogJ25nYkNvbGxhcHNlJyxcbiAgaG9zdDogeydbY2xhc3MuY29sbGFwc2VdJzogJ3RydWUnLCAnW2NsYXNzLnNob3ddJzogJyFjb2xsYXBzZWQnfVxufSlcbmV4cG9ydCBjbGFzcyBOZ2JDb2xsYXBzZSB7XG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHdpbGwgY29sbGFwc2UgdGhlIGVsZW1lbnQgb3Igc2hvdyBpdCBvdGhlcndpc2UuXG4gICAqL1xuICBASW5wdXQoJ25nYkNvbGxhcHNlJykgY29sbGFwc2VkID0gZmFsc2U7XG59XG4iXX0=