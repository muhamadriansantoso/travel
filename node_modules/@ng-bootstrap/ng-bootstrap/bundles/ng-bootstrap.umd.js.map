{"version":3,"file":"ng-bootstrap.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng:/@ng-bootstrap/ng-bootstrap/util/util.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng:/@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng:/@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng:/@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng:/@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng:/@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng:/@ng-bootstrap/ng-bootstrap/util/key.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keyboard-service.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng:/@ng-bootstrap/ng-bootstrap/util/autoclose.ts","ng:/@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng:/@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input-config.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng:/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","ng:/@ng-bootstrap/ng-bootstrap/util/popup.ts","ng:/@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng:/@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav-config.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav-outlet.ts","ng:/@ng-bootstrap/ng-bootstrap/nav/nav.module.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng:/@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng:/@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng:/@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng:/@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng:/@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng:/@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker-i18n.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng:/@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast-config.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast.ts","ng:/@ng-bootstrap/ng-bootstrap/toast/toast.module.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng:/@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng:/@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng:/@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng:/@ng-bootstrap/ng-bootstrap/index.ts"],"names":["Injectable","Directive","TemplateRef","Input","ContentChildren","EventEmitter","Component","ViewEncapsulation","Output","Optional","Host","NgModule","CommonModule","ChangeDetectionStrategy","Renderer2","ElementRef","NG_VALUE_ACCESSOR","forwardRef","ChangeDetectorRef","nextId","Subject","BehaviorSubject","isPlatformBrowser","combineLatest","map","startWith","distinctUntilChanged","switchMap","timer","NEVER","takeUntil","Inject","PLATFORM_ID","NgZone","HostListener","tslib_1.__extends","LOCALE_ID","getLocaleDayNames","FormStyle","TranslationWidth","getLocaleMonthNames","formatDate","filter","tslib_1.__values","take","fromEvent","merge","ViewChild","ContentChild","tap","withLatestFrom","delay","race","NGB_DATEPICKER_VALUE_ACCESSOR","NG_VALIDATORS","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","mod","GREGORIAN_EPOCH","isGregorianLeapYear","fromGregorian","toGregorian","FormsModule","Injector","ApplicationRef","RendererFactory2","Attribute","Observable","share","getLocaleDayPeriods","InjectionToken"],"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cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc;AAChF;AACM,QAAJ,cAAc,EAAE,cAAc,EAAE,c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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An optional class applied to the accordion card element that wraps both panel title and content.\n   *\n   * @since 5.3.0\n   */\n  @Input() cardClass: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (Ã) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Subject, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  @HostListener('mouseenter')\n  mouseEnter() {\n    this._mouseHover$.next(true);\n  }\n\n  @HostListener('mouseleave')\n  mouseLeave() {\n    this._mouseHover$.next(false);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest(\n                                  this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                  this._wrap$, this.slides.changes.pipe(startWith(null)))\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest(this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$)\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) =>\n                        ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventDirection, NgbSlideEventSource} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends\n    Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                     'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct: NgbDateStruct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nexport const NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n\n  /**\n   * First dates of months currently displayed by the datepicker\n   *\n   * @since 5.3.0\n   */\n  readonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\nexport class NgbDatepickerContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\n\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * Please use 'dateSelect' output instead, this will be deprecated in version 6.0 due to collision with native\n   * 'select' event.\n   */\n  @Output() select = this.dateSelect;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n  get calendar(): NgbCalendar { return this._calendar; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date: NgbDateStruct): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n    const {state, calendar} = datepicker;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n  selector: 'ngb-datepicker-month',\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month.scss'],\n  template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  @Input()\n  set month(month: NgbDateStruct) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  viewModel: MonthViewModel;\n\n  constructor(\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _elWithFocus = null;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n        }\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n        }\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['×©× ×', '×©×××©×', '×¨×××¢×', '××××©×', '×©××©×', '×©××ª', '×¨××©××'];\nconst MONTHS = ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\nconst MONTHS_LEAP =\n    ['×ª×©×¨×', '××©××', '××¡××', '×××ª', '×©××', '×××¨ ××³', '×××¨ ××³', '× ××¡×', '××××¨', '×¡×××', '×ª×××', '××', '××××'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\nimport {NgbDatepickerMonth} from './datepicker-month';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonth} from './datepicker-month';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n    NgbDatepickerDayView, NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef, static: false}) private _menuElement: ElementRef;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    const anchor = this._anchor;\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    let itemElement: HTMLElement = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    const menuElement = this._menuElement;\n    if (menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string | HTMLElement;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  ariaLabelledBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape && this.keyboard))\n          .subscribe(event => requestAnimationFrame(() => {\n                       if (!event.defaultPrevented) {\n                         this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                       }\n                     }));\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (this.backdrop === true && nativeElement === target && !preventClose) {\n          this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n        }\n        preventClose = false;\n      });\n    });\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n\n    this._closed$.next();\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes =\n      ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                                                                   this._document.querySelector(options.container) :\n                                                                   this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\n  constructor(@Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef) {\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n      }\n    }\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(@Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: any;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: any;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbNav} from './nav';\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\" [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  `\n})\nexport class NgbNavOutlet {\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\" [attr.tabindex]=\"disabled ? '-1' : null\"\n          [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n      [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (!this.readonly && !this.disabled) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbNavModule} from '../nav/nav.module';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule, NgbNavModule]})\nexport class NgbTabsetModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n}\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {NgbToastConfig} from './toast-config';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    '[class.toast]': 'true',\n    '[class.show]': 'true',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired immediately when toast's `hide()` method has been called.\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross (&times)\n   *\n   * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n   * that.\n   */\n  @Output('hide') hideOutput = new EventEmitter<void>();\n\n  constructor(@Attribute('aria-live') public ariaLive: string, config: NgbToastConfig) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  ngAfterContentInit() { this._init(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  hide() {\n    this._clearTimeout();\n    this.hideOutput.emit();\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerContent,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerMonth,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTab,\n  NgbTabChangeEvent,\n  NgbTabContent,\n  NgbTabset,\n  NgbTabsetConfig,\n  NgbTabsetModule,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n"]}